// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
[[deprecated("Use field access instead!")]] ::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
[[deprecated("Use field access instead!")]] ::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
[[deprecated("Use field access instead!")]] ::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
[[deprecated("Use field access instead!")]] ::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnableSwitch::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableSwitch::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_Control
#include "GlobalNamespace/LipSyncDemo_Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateLeftKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateLeftKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateRightKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateRightKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode resetRotationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_Control.Start
void GlobalNamespace::LipSyncDemo_Control::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.Update
void GlobalNamespace::LipSyncDemo_Control::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.RotateObject
void GlobalNamespace::LipSyncDemo_Control::RotateObject(float amountDegrees, bool absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::RotateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amountDegrees), ::il2cpp_utils::ExtractType(absolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amountDegrees, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_SetCurrentTarget
#include "GlobalNamespace/LipSyncDemo_SetCurrentTarget.hpp"
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EnableSwitch[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnableSwitch*>& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnableSwitch*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 targetSet
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetSet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean XRButtonBeingPressed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XRButtonBeingPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Start
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Update
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.SetCurrentTarget
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.LocalTouchEventCallback
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncDebugConsole
#include "GlobalNamespace/OVRLipSyncDebugConsole.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRLipSyncDebugConsole s_Instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncDebugConsole*>("", "OVRLipSyncDebugConsole", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSyncDebugConsole s_Instance
void GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance(::GlobalNamespace::OVRLipSyncDebugConsole* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncDebugConsole", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ArrayList messages
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxMessages
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxMessages"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textMsg
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMsg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clearTimeoutOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeoutOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single clearTimeout
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncDebugConsole.get_instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSyncDebugConsole*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole..cctor
void GlobalNamespace::OVRLipSyncDebugConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Awake
void GlobalNamespace::OVRLipSyncDebugConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Update
void GlobalNamespace::OVRLipSyncDebugConsole::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Init
void GlobalNamespace::OVRLipSyncDebugConsole::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.Clear
void GlobalNamespace::OVRLipSyncDebugConsole::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout(float timeToClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "ClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToClear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeToClear);
}
// Autogenerated method: OVRLipSyncDebugConsole.AddMessage
void GlobalNamespace::OVRLipSyncDebugConsole::AddMessage(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::AddMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearMessages
void GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.SetClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout(float timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRLipSyncDebugConsole.Prune
void GlobalNamespace::OVRLipSyncDebugConsole::Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Prune");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prune", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Display
void GlobalNamespace::OVRLipSyncDebugConsole::Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNamedArrayAttribute
#include "GlobalNamespace/OVRNamedArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] names
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OVRNamedArrayAttribute::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNamedArrayAttribute::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad
#include "GlobalNamespace/OVRTouchpad.hpp"
// Including type: OVRTouchpad/OVRTouchpadCallback`1
#include "GlobalNamespace/OVRTouchpad_OVRTouchpadCallback_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 moveAmountMouse
::UnityEngine::Vector3 GlobalNamespace::OVRTouchpad::_get_moveAmountMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_moveAmountMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTouchpad", "moveAmountMouse"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 moveAmountMouse
void GlobalNamespace::OVRTouchpad::_set_moveAmountMouse(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_moveAmountMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "moveAmountMouse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single minMovMagnitudeMouse
float GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTouchpad", "minMovMagnitudeMouse"));
}
// Autogenerated static field setter
// Set static field: static private System.Single minMovMagnitudeMouse
void GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "minMovMagnitudeMouse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Delegate touchPadCallbacks
::System::Delegate* GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Delegate*>("", "OVRTouchpad", "touchPadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static public System.Delegate touchPadCallbacks
void GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchPadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTouchpadHelper touchpadHelper
::GlobalNamespace::OVRTouchpadHelper* GlobalNamespace::OVRTouchpad::_get_touchpadHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchpadHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpadHelper*>("", "OVRTouchpad", "touchpadHelper"));
}
// Autogenerated static field setter
// Set static field: static private OVRTouchpadHelper touchpadHelper
void GlobalNamespace::OVRTouchpad::_set_touchpadHelper(::GlobalNamespace::OVRTouchpadHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchpadHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchpadHelper", value));
}
// Autogenerated method: OVRTouchpad..cctor
void GlobalNamespace::OVRTouchpad::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Create
void GlobalNamespace::OVRTouchpad::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Update
void GlobalNamespace::OVRTouchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.OnDisable
void GlobalNamespace::OVRTouchpad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.HandleInputMouse
void GlobalNamespace::OVRTouchpad::HandleInputMouse(ByRef<::UnityEngine::Vector3> move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::HandleInputMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "HandleInputMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(move));
}
// Autogenerated method: OVRTouchpad.AddListener
void GlobalNamespace::OVRTouchpad::AddListener(::GlobalNamespace::OVRTouchpad::OVRTouchpadCallback_1<::GlobalNamespace::OVRTouchpad::TouchEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent SingleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "SingleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent SingleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "SingleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent DoubleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "DoubleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent DoubleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "DoubleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Left
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Left
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Right
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Right
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Up
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Up
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Down
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Down
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Down", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTouchpadHelper.Awake
void GlobalNamespace::OVRTouchpadHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Start
void GlobalNamespace::OVRTouchpadHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Update
void GlobalNamespace::OVRTouchpadHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.OnDisable
void GlobalNamespace::OVRTouchpadHelper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.LocalTouchEventCallback
void GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 VisemeCount
int GlobalNamespace::OVRLipSync::_get_VisemeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_VisemeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "VisemeCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 VisemeCount
void GlobalNamespace::OVRLipSync::_set_VisemeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_VisemeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "VisemeCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SignalCount
int GlobalNamespace::OVRLipSync::_get_SignalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_SignalCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "SignalCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SignalCount
void GlobalNamespace::OVRLipSync::_set_SignalCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_SignalCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "SignalCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strOVRLS
::StringW GlobalNamespace::OVRLipSync::_get_strOVRLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_strOVRLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRLipSync", "strOVRLS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOVRLS
void GlobalNamespace::OVRLipSync::_set_strOVRLS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_strOVRLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "strOVRLS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRLipSync/Result sInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::_get_sInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync", "sInitialized"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSync/Result sInitialized
void GlobalNamespace::OVRLipSync::_set_sInitialized(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync sInstance
::GlobalNamespace::OVRLipSync* GlobalNamespace::OVRLipSync::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync*>("", "OVRLipSync", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync sInstance
void GlobalNamespace::OVRLipSync::_set_sInstance(::GlobalNamespace::OVRLipSync* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInstance", value));
}
// Autogenerated method: OVRLipSync..cctor
void GlobalNamespace::OVRLipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Initialize
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize(int samplerate, int buffersize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerate), ::il2cpp_utils::ExtractType(buffersize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplerate, buffersize);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Shutdown
void GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_GetVersion
::System::IntPtr GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextWithModelFile
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_DestroyContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ResetContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_SendSignal
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ProcessFrameEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx(uint context, ::System::IntPtr audioBuffer, uint bufferSize, ::GlobalNamespace::OVRLipSync::AudioDataType dataType, ByRef<int> frameNumber, ByRef<int> frameDelay, ::ArrayW<float> visemes, int visemeCount, ByRef<float> laughterScore, ::ArrayW<float> laughterCategories, int laughterCategoriesLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ProcessFrameEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(frameNumber), ::il2cpp_utils::ExtractType(frameDelay), ::il2cpp_utils::ExtractType(visemes), ::il2cpp_utils::ExtractType(visemeCount), ::il2cpp_utils::ExtractType(laughterScore), ::il2cpp_utils::ExtractType(laughterCategories), ::il2cpp_utils::ExtractType(laughterCategoriesLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, bufferSize, dataType, byref(frameNumber), byref(frameDelay), visemes, visemeCount, byref(laughterScore), laughterCategories, laughterCategoriesLength);
}
// Autogenerated method: OVRLipSync.Awake
void GlobalNamespace::OVRLipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.OnDestroy
void GlobalNamespace::OVRLipSync::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize(int sampleRate, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate, bufferSize);
}
// Autogenerated method: OVRLipSync.Shutdown
void GlobalNamespace::OVRLipSync::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.IsInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.CreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContext(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.CreateContextWithModelFile
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.DestroyContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.SendSignal
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<float> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<int16_t> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Result
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Success
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Success
void GlobalNamespace::OVRLipSync::Result::_set_Success(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Unknown
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Unknown
void GlobalNamespace::OVRLipSync::Result::_set_Unknown(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result CannotCreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "CannotCreateContext"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result CannotCreateContext
void GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "CannotCreateContext", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result InvalidParam
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result InvalidParam
void GlobalNamespace::OVRLipSync::Result::_set_InvalidParam(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadSampleRate
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadSampleRate
void GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result MissingDLL
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_MissingDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_MissingDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "MissingDLL"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result MissingDLL
void GlobalNamespace::OVRLipSync::Result::_set_MissingDLL(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_MissingDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "MissingDLL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadVersion
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadVersion
void GlobalNamespace::OVRLipSync::Result::_set_BadVersion(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result UndefinedFunction
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "UndefinedFunction"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result UndefinedFunction
void GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "UndefinedFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme sil
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_sil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_sil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "sil"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme sil
void GlobalNamespace::OVRLipSync::Viseme::_set_sil(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_sil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "sil", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme PP
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_PP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_PP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "PP"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme PP
void GlobalNamespace::OVRLipSync::Viseme::_set_PP(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_PP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "PP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme FF
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_FF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_FF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "FF"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme FF
void GlobalNamespace::OVRLipSync::Viseme::_set_FF(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_FF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "FF", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme TH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_TH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_TH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "TH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme TH
void GlobalNamespace::OVRLipSync::Viseme::_set_TH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_TH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "TH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme DD
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_DD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_DD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "DD"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme DD
void GlobalNamespace::OVRLipSync::Viseme::_set_DD(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_DD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "DD", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme kk
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_kk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_kk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "kk"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme kk
void GlobalNamespace::OVRLipSync::Viseme::_set_kk(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_kk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "kk", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme CH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_CH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_CH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "CH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme CH
void GlobalNamespace::OVRLipSync::Viseme::_set_CH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_CH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "CH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme SS
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "SS"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme SS
void GlobalNamespace::OVRLipSync::Viseme::_set_SS(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme nn
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_nn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_nn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "nn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme nn
void GlobalNamespace::OVRLipSync::Viseme::_set_nn(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_nn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "nn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme RR
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_RR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_RR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "RR"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme RR
void GlobalNamespace::OVRLipSync::Viseme::_set_RR(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_RR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "RR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme aa
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_aa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_aa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "aa"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme aa
void GlobalNamespace::OVRLipSync::Viseme::_set_aa(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_aa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "aa", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme E
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "E"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme E
void GlobalNamespace::OVRLipSync::Viseme::_set_E(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "E", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ih
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ih() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ih");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ih"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ih
void GlobalNamespace::OVRLipSync::Viseme::_set_ih(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ih");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ih", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme oh
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_oh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_oh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "oh"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme oh
void GlobalNamespace::OVRLipSync::Viseme::_set_oh(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_oh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "oh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ou
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ou"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ou
void GlobalNamespace::OVRLipSync::Viseme::_set_ou(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ou", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Viseme::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOn
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOn
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOff
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOff"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOff
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOff", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeAmount
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeAmount", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeSmoothing
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeSmoothing"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeSmoothing
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeSmoothing", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals LaughterAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "LaughterAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals LaughterAmount
void GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "LaughterAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Signals::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Original
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Original"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Original
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Original(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameDelay
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Visemes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRLipSync::Frame::dyn_Visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_Visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSync/Frame.CopyInput
void GlobalNamespace::OVRLipSync::Frame::CopyInput(::GlobalNamespace::OVRLipSync::Frame* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: OVRLipSync/Frame.Reset
void GlobalNamespace::OVRLipSync::Frame::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableKeyboardInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableKeyboardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableTouchInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean audioLoopback
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLoopback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode loopbackKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopbackKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showVisemes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showVisemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showVisemes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugVisemesKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugVisemesKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean skipAudioSource
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDebugConsole
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDebugConsole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugLaughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLaughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaughter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContext.Start
void GlobalNamespace::OVRLipSyncContext::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.HandleKeyboard
void GlobalNamespace::OVRLipSyncContext::HandleKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::HandleKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.Update
void GlobalNamespace::OVRLipSyncContext::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.PreprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.PostprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<int16_t> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamples
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.OnAudioFilterRead
void GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.DebugShowVisemesAndLaughter
void GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugShowVisemesAndLaughter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.ToggleAudioLoopback
void GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAudioLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.LocalTouchEventCallback
void GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSync/ContextProviders provider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::ContextProviders& GlobalNamespace::OVRLipSyncContextBase::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::ContextProviders*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAcceleration
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame frame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextBase::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 context
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRLipSyncContextBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextBase.get_Smoothing
int GlobalNamespace::OVRLipSyncContextBase::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.set_Smoothing
void GlobalNamespace::OVRLipSyncContextBase::set_Smoothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncContextBase.get_Context
uint GlobalNamespace::OVRLipSyncContextBase::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Frame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.Awake
void GlobalNamespace::OVRLipSyncContextBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.OnDestroy
void GlobalNamespace::OVRLipSyncContextBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.GetCurrentPhonemeFrame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPhonemeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.SetVisemeBlend
void GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend(int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextBase.SetLaughterBlend
void GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: OVRLipSyncContextBase.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSyncContextBase::ResetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextCanned
#include "GlobalNamespace/OVRLipSyncContextCanned.hpp"
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncSequence currentSequence
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncSequence*& GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSequence"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextCanned.Update
void GlobalNamespace::OVRLipSyncContextCanned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextMorphTarget
#include "GlobalNamespace/OVRLipSyncContextMorphTarget.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] visemeToBlendTargets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeToBlendTargets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableVisemeTestKeys
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVisemeTestKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] visemeTestKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeTestKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode laughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 laughterBlendTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterBlendTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Start
void GlobalNamespace::OVRLipSyncContextMorphTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Update
void GlobalNamespace::OVRLipSyncContextMorphTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckForKeys
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetVisemeToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetLaughterToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckVisemeKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey(::UnityEngine::KeyCode key, int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVisemeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckLaughterKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLaughterKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextTextureFlip
#include "GlobalNamespace/OVRLipSyncContextTextureFlip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] Textures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame oldFrame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Start
void GlobalNamespace::OVRLipSyncContextTextureFlip::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Update
void GlobalNamespace::OVRLipSyncContextTextureFlip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.SetVisemeToTexture
void GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMicSelectionGUI
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMicSelectionGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micSelectionGUIKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelectionGUIKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single micInputVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInputVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micFrequency
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncMicInput/micActivation micControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncMicInput::micActivation& GlobalNamespace::OVRLipSyncMicInput::dyn_micControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput::micActivation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micActivationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micActivationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedDevice
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micSelected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean focused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_focused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncMicInput.get_MicFrequency
float GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.set_MicFrequency
void GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncMicInput.Awake
void GlobalNamespace::OVRLipSyncMicInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Start
void GlobalNamespace::OVRLipSyncMicInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.InitializeMicrophone
void GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Update
void GlobalNamespace::OVRLipSyncMicInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationFocus
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationPause
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: OVRLipSyncMicInput.OnDisable
void GlobalNamespace::OVRLipSyncMicInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnGUI
void GlobalNamespace::OVRLipSyncMicInput::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.MicDeviceGUI
void GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicDeviceGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(buttonSpaceTop), ::il2cpp_utils::ExtractType(buttonSpaceLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, width, height, buttonSpaceTop, buttonSpaceLeft);
}
// Autogenerated method: OVRLipSyncMicInput.GetMicCaps
void GlobalNamespace::OVRLipSyncMicInput::GetMicCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetMicCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StartMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StopMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.GetAveragedVolume
float GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAveragedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput/micActivation
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "PushToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "PushToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRLipSync/Frame> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>*& GlobalNamespace::OVRLipSyncSequence::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncSequence::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncSequence.GetFrameAtTime
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GroupPresenceSample
#include "GlobalNamespace/GroupPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LobbySessionID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchSessionID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SuggestedUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuggestedUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupPresenceSample.Start
void GlobalNamespace::GroupPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.SetPresence
void GlobalNamespace::GroupPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ClearPresence
void GlobalNamespace::GroupPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchInvitePanel
void GlobalNamespace::GroupPresenceSample::LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchRosterPanel
void GlobalNamespace::GroupPresenceSample::LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnJoinIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnLeaveIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeaveIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnInviteSentNotif
void GlobalNamespace::GroupPresenceSample::OnInviteSentNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnInviteSentNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInviteSentNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnGetDestinations
void GlobalNamespace::GroupPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.Update
void GlobalNamespace::GroupPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ScrollThroughDestinations
void GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnLoggedInUser
void GlobalNamespace::GroupPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.UpdateConsole
void GlobalNamespace::GroupPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GroupPresenceSample.PressAButton
bool GlobalNamespace::GroupPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressBButton
bool GlobalNamespace::GroupPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressXButton
bool GlobalNamespace::GroupPresenceSample::PressXButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressXButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressXButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressYButton
bool GlobalNamespace::GroupPresenceSample::PressYButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressYButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressYButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressUp
bool GlobalNamespace::GroupPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressDown
bool GlobalNamespace::GroupPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.<Start>b__8_0
void GlobalNamespace::GroupPresenceSample::$Start$b__8_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_0
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_1
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_0
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_1
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<LaunchInvitePanel>b__11_0
void GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchInvitePanel>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchInvitePanel>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<LaunchRosterPanel>b__12_0
void GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchRosterPanel>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchRosterPanel>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceSample
#include "GlobalNamespace/RichPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DeeplinkMessageOverride
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessageOverride"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RichPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsIdle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RichPresenceSample::dyn_IsIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsIdle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsIdle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InstanceID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InstanceID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 CurrentCapacity
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxCapacity
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::RichPresenceSample::dyn_MaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_MaxCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartTime
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_StartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime EndTime
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_EndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_EndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.RichPresenceExtraContext ExtraContext
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RichPresenceExtraContext& GlobalNamespace::RichPresenceSample::dyn_ExtraContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_ExtraContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraContext"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RichPresenceExtraContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String TrackingID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RichPresenceSample::dyn_TrackingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_TrackingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RichPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RichPresenceSample.Start
void GlobalNamespace::RichPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.SetPresence
void GlobalNamespace::RichPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ClearPresence
void GlobalNamespace::RichPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.GetAppLaunchDetails
::StringW GlobalNamespace::RichPresenceSample::GetAppLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::GetAppLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLaunchIntentChangeNotif
void GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif(::Oculus::Platform::Message_1<::StringW>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.OnGetDestinations
void GlobalNamespace::RichPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.Update
void GlobalNamespace::RichPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ScrollThroughDestinations
void GlobalNamespace::RichPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLoggedInUser
void GlobalNamespace::RichPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.UpdateConsole
void GlobalNamespace::RichPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RichPresenceSample.PressAButton
bool GlobalNamespace::RichPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressBButton
bool GlobalNamespace::RichPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressUp
bool GlobalNamespace::RichPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressDown
bool GlobalNamespace::RichPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.<Start>b__14_0
void GlobalNamespace::RichPresenceSample::$Start$b__14_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<Start>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_0
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_1
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_0
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_1
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BufferedAudioStream
#include "GlobalNamespace/BufferedAudioStream.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean VerboseLogging
bool GlobalNamespace::BufferedAudioStream::_get_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_VerboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BufferedAudioStream", "VerboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean VerboseLogging
void GlobalNamespace::BufferedAudioStream::_set_VerboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_VerboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "VerboseLogging", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single bufferLengthSeconds
float GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "bufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single bufferLengthSeconds
void GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sampleRate
int GlobalNamespace::BufferedAudioStream::_get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_sampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "sampleRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sampleRate
void GlobalNamespace::BufferedAudioStream::_set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_sampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "sampleRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 bufferSize
int GlobalNamespace::BufferedAudioStream::_get_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "bufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 bufferSize
void GlobalNamespace::BufferedAudioStream::_set_bufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single playbackDelayTimeSeconds
float GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "playbackDelayTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single playbackDelayTimeSeconds
void GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "playbackDelayTimeSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audio
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::BufferedAudioStream::dyn_audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] audioBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BufferedAudioStream::dyn_audioBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audioBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BufferedAudioStream::dyn_writePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_writePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playbackDelayRemaining
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackDelayRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingBufferTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingBufferTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BufferedAudioStream.Update
void GlobalNamespace::BufferedAudioStream::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.Stop
void GlobalNamespace::BufferedAudioStream::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.AddData
void GlobalNamespace::BufferedAudioStream::AddData(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::AbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6448
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6480
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// [DescriptionAttribute] Offset: 0x6B64B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AbuseReportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B64F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
void Oculus::Platform::AbuseReportVideoMode::_set_Unknown(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6528
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Collect
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Collect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Collect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Collect
void Oculus::Platform::AbuseReportVideoMode::_set_Collect(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Collect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Collect", value));
}
// [DescriptionAttribute] Offset: 0x6B6560
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Optional
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Optional
void Oculus::Platform::AbuseReportVideoMode::_set_Optional(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Optional", value));
}
// [DescriptionAttribute] Offset: 0x6B6598
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Skip
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Skip
void Oculus::Platform::AbuseReportVideoMode::_set_Skip(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Skip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AbuseReportVideoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B65D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6608
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0x6B6640
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0x6B6678
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::AchievementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AdvancedAbuseReportOptions
#include "Oculus/Platform/AdvancedAbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetObjectType
void Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetReportType
void Oculus::Platform::AdvancedAbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetVideoMode
void Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AdvancedAbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.Finalize
void Oculus::Platform::AdvancedAbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AndroidPlatform
#include "Oculus/Platform/AndroidPlatform.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AndroidPlatform.Initialize
bool Oculus::Platform::AndroidPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.AndroidPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::AndroidPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::ApplicationOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDeeplinkMessage
void Oculus::Platform::ApplicationOptions::SetDeeplinkMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ApplicationOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ApplicationOptions.Finalize
void Oculus::Platform::ApplicationOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrNetSyncVec3
#include "Oculus/Platform/CAPI_ovrNetSyncVec3.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCustomQueryData
#include "Oculus/Platform/CAPI_ovrMatchmakingCustomQueryData.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.OculusInitParams
#include "Oculus/Platform/CAPI_OculusInitParams.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.MultiplayerErrorErrorKey
#include "Oculus/Platform/MultiplayerErrorErrorKey.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DLL_NAME
::StringW Oculus::Platform::CAPI::_get_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform", "CAPI", "DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String DLL_NAME
void Oculus::Platform::CAPI::_set_DLL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "DLL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
::System::Text::UTF8Encoding* Oculus::Platform::CAPI::_get_nativeStringEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_nativeStringEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UTF8Encoding*>("Oculus.Platform", "CAPI", "nativeStringEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
void Oculus::Platform::CAPI::_set_nativeStringEncoding(::System::Text::UTF8Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_nativeStringEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "nativeStringEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VoipFilterBufferSize
int Oculus::Platform::CAPI::_get_VoipFilterBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_VoipFilterBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "CAPI", "VoipFilterBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VoipFilterBufferSize
void Oculus::Platform::CAPI::_set_VoipFilterBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_VoipFilterBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "VoipFilterBufferSize", value));
}
// Autogenerated method: Oculus.Platform.CAPI..cctor
void Oculus::Platform::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ArrayOfStructsToIntPtr
::System::IntPtr Oculus::Platform::CAPI::ArrayOfStructsToIntPtr(::System::Array* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ArrayOfStructsToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ar);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.IntPtrToByteArray
::ArrayW<uint8_t> Oculus::Platform::CAPI::IntPtrToByteArray(::System::IntPtr data, uint64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::IntPtrToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "IntPtrToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, size);
}
// Autogenerated method: Oculus.Platform.CAPI.DataStoreFromNative
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::CAPI::DataStoreFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DataStoreFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DataStoreFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringFromNative
::StringW Oculus::Platform::CAPI::StringFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.GetNativeStringLengthNotIncludingNullTerminator
int Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeFromNative
::System::DateTime Oculus::Platform::CAPI::DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds_since_the_one_true_epoch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seconds_since_the_one_true_epoch);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeToNative
uint64_t Oculus::Platform::CAPI::DateTimeToNative(::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: Oculus.Platform.CAPI.BlobFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::BlobFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::BlobFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "BlobFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.FiledataFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::FiledataFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FiledataFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "FiledataFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringToNative
::System::IntPtr Oculus::Platform::CAPI::StringToNative(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapper
bool Oculus::Platform::CAPI::ovr_UnityInitWrapper(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitGlobals
void Oculus::Platform::CAPI::ovr_UnityInitGlobals(::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loggingCB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperStandalone
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Platform_InitializeStandaloneOculus
uint64_t Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(init));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessToken
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindows
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindowsAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SetDeveloperAccessToken
bool Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken(::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale
::StringW Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PopMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_FreeMessage
void Oculus::Platform::CAPI::ovr_FreeMessage(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_FreeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_FreeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateEncoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyEncoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder(::System::IntPtr encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateDecoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyDecoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder(::System::IntPtr decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, decoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Destroy
void Oculus::Platform::CAPI::ovr_Microphone_Destroy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipPassthrough
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough(bool passthrough) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthrough)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, passthrough);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityResetTestPlatform
void Oculus::Platform::CAPI::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetWithMessageType
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType(::StringW url, int messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, messageType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CrashApplication
void Oculus::Platform::CAPI::ovr_CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallback
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(bufferSizeElements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb, bufferSizeElements);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewEvent
void Oculus::Platform::CAPI::LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::LogNewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Log_NewEvent
void Oculus::Platform::CAPI::ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Log_NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Log_NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetLaunchDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult_Native
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native(::System::IntPtr trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Write
bool Oculus::Platform::CAPI::ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId, bytes, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_WriteEOM
void Oculus::Platform::CAPI::ovr_HTTP_WriteEOM(uint64_t transferId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_WriteEOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript
::StringW Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetListenerPosition
bool Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetPcmBufferMaxSamples
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAmplitude
bool Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(amplitude));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetListenerPosition
void Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Accept
void Oculus::Platform::CAPI::ovr_Net_Accept(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_AcceptForCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Close
void Oculus::Platform::CAPI::ovr_Net_Close(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_CloseForCurrentRoom
void Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Connect
void Oculus::Platform::CAPI::ovr_Net_Connect(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_IsConnected
bool Oculus::Platform::CAPI::ovr_Net_IsConnected(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Ping
uint64_t Oculus::Platform::CAPI::ovr_Net_Ping(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_ReadPacket
::System::IntPtr Oculus::Platform::CAPI::ovr_Net_ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacket
bool Oculus::Platform::CAPI::ovr_Net_SendPacket(uint64_t userID, ::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacketToCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom(::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetSharedMemHandle
int Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipPassthrough
bool Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Accept
void Oculus::Platform::CAPI::ovr_Voip_Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMSize(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestamp
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestampFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestamp
uint Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestampDifference
int64_t Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetNewConnectionOptions
void Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetOutputSampleRate
void Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Start
void Oculus::Platform::CAPI::ovr_Voip_Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Stop
void Oculus::Platform::CAPI::ovr_Voip_Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReport_LaunchAdvancedReportFlow
uint64_t Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, ::System::IntPtr abuse_report_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content_id), ::il2cpp_utils::ExtractType(abuse_report_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content_id, abuse_report_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllDefinitions
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllProgress
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetDefinitionsByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetProgressByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native(::System::IntPtr name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_ExecuteCoordinatedLaunch
uint64_t Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetInstalledApplications
uint64_t Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetVersion
uint64_t Oculus::Platform::CAPI::ovr_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_LaunchOtherApp
uint64_t Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetRegisteredPIDs
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Delete
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Download
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancel
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_GetList
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Status
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData_Native
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_FinalizeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t finalized_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(finalized_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, finalized_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_GetSuggestedApplications
uint64_t Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_ProposeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_ProposeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t proposed_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_ProposeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(proposed_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, proposed_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_DeclineInvite
uint64_t Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Delete
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Get
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetList
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Join
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Leave
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_UpdateInfo
uint64_t Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata(::StringW bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native(::System::IntPtr bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle(::StringW handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::StringW extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native(::System::IntPtr bucket, ::System::IntPtr key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::System::IntPtr extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2_GetUserDirectoryPath
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_GetCurrentMapUuid
uint64_t Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Entitlement_GetIsViewerEntitled
uint64_t Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetSentInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetSentInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchInvitePanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchMultiplayerErrorDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchMultiplayerErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog(::StringW lobby_session_id, ::StringW match_session_id, ::StringW destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native(::System::IntPtr lobby_session_id, ::System::IntPtr match_session_id, ::System::IntPtr destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRosterPanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SendInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites(::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SendInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Set(::System::IntPtr groupPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetProductsBySKU
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skus, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchases
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchasesDurableCache
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent_Native
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native(::System::IntPtr leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(::System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication(::StringW packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication_Native
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audience), ::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audience, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateMicStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel(::StringW pool, ::StringW requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native(::System::IntPtr pool, ::System::IntPtr requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom(uint64_t roomID, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetAdminSnapshot
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native(::System::IntPtr pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_JoinRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_StartMatch
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook_Native
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Connect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Connect(::System::IntPtr connect_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connect_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Disconnect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Disconnect(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetSessions
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetSessions(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuationDefault
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipListentoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(listento_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, listento_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipMicSource
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(mic_source)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, mic_source);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSessionMuted
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(muted)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSpeaktoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(speakto_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, speakto_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipStreamMode
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(streamMode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, streamMode);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_GetRoomInvites
uint64_t Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_MarkAsRead
uint64_t Oculus::Platform::CAPI::ovr_Notification_MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Create
uint64_t Oculus::Platform::CAPI::ovr_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GatherInApplication
uint64_t Oculus::Platform::CAPI::ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GatherInApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Get
uint64_t Oculus::Platform::CAPI::ovr_Party_Get(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Invite
uint64_t Oculus::Platform::CAPI::ovr_Party_Invite(uint64_t partyID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Join
uint64_t Oculus::Platform::CAPI::ovr_Party_Join(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Leave
uint64_t Oculus::Platform::CAPI::ovr_Party_Leave(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_GetDestinations
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Set(::System::IntPtr richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate2
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Get
uint64_t Oculus::Platform::CAPI::ovr_Room_Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers2
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2(::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetModeratedRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetSocialRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetSocialRooms(uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetSocialRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser(uint64_t roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser_Native(uint64_t roomID, ::System::IntPtr inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join
uint64_t Oculus::Platform::CAPI::ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join2
uint64_t Oculus::Platform::CAPI::ovr_Room_Join2(uint64_t roomID, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_KickUser
uint64_t Oculus::Platform::CAPI::ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_LaunchInvitableUserFlow
uint64_t Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Leave
uint64_t Oculus::Platform::CAPI::ovr_Room_Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription(uint64_t roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription_Native(uint64_t roomID, ::System::IntPtr description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateMembershipLockStatus
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateOwner
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdatePrivateRoomJoinPolicy
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_Get
uint64_t Oculus::Platform::CAPI::ovr_User_Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetAccessToken
uint64_t Oculus::Platform::CAPI::ovr_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLinkedAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUser
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriendsAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOrgScopedID
uint64_t Oculus::Platform::CAPI::ovr_User_GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSdkAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserProof
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchBlockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchFriendRequestFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchUnblockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewEntitledTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StartRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest_Native
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetMicrophoneAvailability
uint64_t Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetMicrophoneAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipSuppressed
uint64_t Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid
::StringW Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetBitfieldLength
uint Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetTarget
uint64_t Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetType
::Oculus::Platform::AchievementType Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AchievementType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetCount
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetIsUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime
::System::DateTime Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime_Native
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetJustUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetID
uint64_t Oculus::Platform::CAPI::ovr_Application_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetID
uint64_t Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetIsActive
bool Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetRecipient
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetRecipient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetLanguage
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotal
uint Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotalLong
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotalLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferred
int Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
int64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferredLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetCompleted
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetCountdownMS
int Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails
::StringW Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationProposed_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext
::StringW Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetCreationType
::Oculus::Platform::ChallengeCreationType Oculus::Platform::CAPI::ovr_Challenge_GetCreationType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetCreationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeCreationType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetEndDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetID
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetLeaderboard
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetParticipants
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetParticipants(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetParticipants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetStartDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetTitle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetVisibility
::Oculus::Platform::ChallengeVisibility Oculus::Platform::CAPI::ovr_Challenge_GetVisibility(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeVisibility, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetRank
int Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath
::StringW Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetLocal
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetRemote
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_CloudStorageData_GetData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetCounter
int64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetSaveTime
uint64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetStatus
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageDataStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetStatus
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageUpdateStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains
uint Oculus::Platform::CAPI::ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains_Native
uint Oculus::Platform::CAPI::ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetKey(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetNumKeys
::System::UIntPtr Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetCode
int Oculus::Platform::CAPI::ovr_Error_GetCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetHttpCode
int Oculus::Platform::CAPI::ovr_Error_GetHttpCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetHttpCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetID
uint64_t Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_IsCompleted
bool Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionCode
int Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InvitePanelResultInfo_GetInvitesSent
bool Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidBlock
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchType
::Oculus::Platform::LaunchType Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LaunchType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetUserReportId
uint64_t Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidUnblock
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetID
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetRank
int Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetSupplementaryMetric
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetDidUpdate
bool Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
uint Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetServiceProvider
::Oculus::Platform::ServiceProvider Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ServiceProvider, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingApplicationStatus_GetStreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStartResult_GetStreamingResult
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LivestreamingStartStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetCommentsVisible
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetIsPaused
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingType
int Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetMicEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetCommentCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetReactionCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews
::StringW Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetCandidates
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
bool Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetRooms
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAverageWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetCustomData
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetAddedByUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetPingTime
uint Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_HasPingTime
bool Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetDrawCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetLossCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillLevel
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillMean
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillStandardDeviation
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetWinCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAbuseReportRecording
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementDefinitionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementProgressArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationInviteArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationInviteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationVersion
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetailsArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDeleteResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadCancelResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationFinalized
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationProposed
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationSuggestionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallenge
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallenge(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageConflictMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageData
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadataArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDestinationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDestinationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDestinationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetError
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceJoinIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceJoinIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceLeaveIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetHttpTransferUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInstalledApplicationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInvitePanelResultInfo
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchBlockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchFriendRequestFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchInvitePanelFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchReportFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchUnblockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardUpdateStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLinkedAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingApplicationStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStartResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingVideoStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingBrowseResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResultAndRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMicrophoneAvailabilityState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMicrophoneAvailabilityState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNativeMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNativeMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNativeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncConnection
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionsChangedNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSetSessionPropertyResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncVoipAttenuationValueArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetworkingPeer
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetOrgScopedID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetParty
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetParty(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyUpdateNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPidArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPidArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPidArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPidArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPingResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPlatformInitialize
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetProductArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetProductArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetProductArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetProductArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchase
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchase(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchaseArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRejoinDialogResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRejoinDialogResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRequestID
uint64_t Oculus::Platform::CAPI::ovr_Message_GetRequestID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotificationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSdkAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSendInvitesResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSendInvitesResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetShareMediaResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString
::StringW Oculus::Platform::CAPI::ovr_Message_GetString(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetString_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemVoipState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetType
::Oculus::Platform::Message::MessageType Oculus::Platform::CAPI::ovr_Message_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserAndRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserDataStoreUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserProof
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserProof(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserReportID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserReportID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_IsError
bool Oculus::Platform::CAPI::ovr_Message_IsError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetNumSamplesAvailable
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_ReadData
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_SetAcceptableRecordingDelayHint
void Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(delayMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, delayMs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Start
void Oculus::Platform::CAPI::ovr_Microphone_Start(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Stop
void Oculus::Platform::CAPI::ovr_Microphone_Stop(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
bool Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetDisconnectReason
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncDisconnectReason, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetStatus
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncConnectionStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId
::StringW Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetMuted
bool Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup
::StringW Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetSessions
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSetSessionPropertyResult_GetSession
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDecibels
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDistance
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetID
uint64_t Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetState
::Oculus::Platform::PeerConnectionState Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_OrgScopedID_GetID
uint64_t Oculus::Platform::CAPI::ovr_OrgScopedID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_OrgScopedID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_Free
void Oculus::Platform::CAPI::ovr_Packet_Free(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_Packet_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSendPolicy
::Oculus::Platform::SendPolicy Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SendPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_Packet_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Packet_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetID
uint64_t Oculus::Platform::CAPI::ovr_Party_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetLeader
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetLeader(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetLeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetLeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyID_GetID
uint64_t Oculus::Platform::CAPI::ovr_PartyID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetAction
::Oculus::Platform::PartyUpdateAction Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PartyUpdateAction, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetPartyId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetSenderId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId
::StringW Oculus::Platform::CAPI::ovr_Pid_GetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Pid_GetId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PidArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetID
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetPingTimeUsec
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_IsTimeout
bool Oculus::Platform::CAPI::ovr_PingResult_IsTimeout(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitialize_GetResult
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PlatformInitializeResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetAmountInHundredths
uint Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency
::StringW Oculus::Platform::CAPI::ovr_Price_GetCurrency(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted
::StringW Oculus::Platform::CAPI::ovr_Price_GetFormatted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Product_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice
::StringW Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName
::StringW Oculus::Platform::CAPI::ovr_Product_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Product_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseID
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RejoinDialogResult_GetRejoinSelected
bool Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RejoinDialogResult_GetRejoinSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetApplicationID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetApplicationID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetApplicationID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Room_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetIsMembershipLocked
bool Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinPolicy
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinability
::Oculus::Platform::RoomJoinability Oculus::Platform::CAPI::ovr_Room_GetJoinability(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinability, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMatchedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMaxUsers
uint Oculus::Platform::CAPI::ovr_Room_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName
::StringW Oculus::Platform::CAPI::ovr_Room_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetOwner
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetOwner(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetTeams
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetTeams(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetType
::Oculus::Platform::RoomType Oculus::Platform::CAPI::ovr_Room_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetVersion
uint Oculus::Platform::CAPI::ovr_Room_GetVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime
::System::DateTime Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime_Native
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetAccountType
::Oculus::Platform::SdkAccountType Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SdkAccountType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SendInvitesResult_GetInvites
::System::IntPtr Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SendInvitesResult_GetInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ShareMediaResult_GetStatus
::Oculus::Platform::ShareMediaStatus Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ShareMediaStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetID
uint64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetMetric
int64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetAssignedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMaxUsers
int Oculus::Platform::CAPI::ovr_Team_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMinUsers
int Oculus::Platform::CAPI::ovr_Team_GetMinUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMinUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName
::StringW Oculus::Platform::CAPI::ovr_Team_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFbAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserFbid
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAppId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_User_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetID
uint64_t Oculus::Platform::CAPI::ovr_User_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken
::StringW Oculus::Platform::CAPI::ovr_User_GetInviteToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID
::StringW Oculus::Platform::CAPI::ovr_User_GetOculusID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetOculusID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence
::StringW Oculus::Platform::CAPI::ovr_User_GetPresence(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresence_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceStatus
::Oculus::Platform::UserPresenceStatus Oculus::Platform::CAPI::ovr_User_GetPresenceStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::UserPresenceStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStoreUpdateResponse_GetSuccess
bool Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce
::StringW Oculus::Platform::CAPI::ovr_UserProof_GetNonce(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetDidCancel
bool Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetID
uint64_t Oculus::Platform::CAPI::ovr_UserReportID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_GetDecodedPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_AddPCM
void Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inputData), ::il2cpp_utils::ExtractType(inputSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, inputData, inputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedData
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(intputSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, intputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedDataSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetPreventPeopleChooser
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType_Native
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetVideoMode
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode(::System::IntPtr handle, ::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Destroy
void Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Destroy
void Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludePastChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetViewerFilter
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetVisibility
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_InviteOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Destroy
void Oculus::Platform::CAPI::ovr_InviteOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Destroy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearCreateRoomDataStore
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(::System::IntPtr handle, ::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomMaxUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_AddEnqueueAdditionalUser
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(::System::IntPtr handle, ::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(::System::IntPtr handle, ::System::IntPtr key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(::System::IntPtr handle, ::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(::System::IntPtr handle, ::System::IntPtr key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueDataSettings
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueIsDebug
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Destroy
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_SetErrorKey
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey(::System::IntPtr handle, ::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_SetErrorKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Destroy
void Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipStreamDefault
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_ClearArgs
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetCurrentCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetExtraContext
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext(::System::IntPtr handle, ::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsIdle
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMaxCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Destroy
void Oculus::Platform::CAPI::ovr_RoomOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString_Native
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_ClearDataStore
void Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetExcludeRecentlyMet
void Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetMaxUserResults
void Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetOrdering
void Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering(::System::IntPtr handle, ::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRecentlyMetTimeWindow
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRoomId
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetTurnOffUpdates
void Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RosterOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Destroy
void Oculus::Platform::CAPI::ovr_RosterOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_UserOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Destroy
void Oculus::Platform::CAPI::ovr_UserOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetMaxUsers
void Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_AddServiceProvider
void Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_ClearServiceProviders
void Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetTimeWindow
void Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_VoipOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Destroy
void Oculus::Platform::CAPI::ovr_VoipOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetBitrateForNewConnections
void Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetCreateNewConnectionUseDtx
void Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair
#include "Oculus/Platform/CAPI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key_
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_key_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.KeyValuePairType valueType_
[[deprecated("Use field access instead!")]] ::Oculus::Platform::KeyValuePairType& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_valueType_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::KeyValuePairType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String stringValue_
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_stringValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 intValue_
[[deprecated("Use field access instead!")]] int& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_intValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intValue_"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double doubleValue_
[[deprecated("Use field access instead!")]] double& Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::dyn_doubleValue_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doubleValue_"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair..ctor
Oculus::Platform::CAPI::ovrKeyValuePair::ovrKeyValuePair(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrKeyValuePair::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key_
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_key_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_key_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key_"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.MatchmakingCriterionImportance importance_
[[deprecated("Use field access instead!")]] ::Oculus::Platform::MatchmakingCriterionImportance& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_importance_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_importance_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "importance_"))->offset;
  return *reinterpret_cast<::Oculus::Platform::MatchmakingCriterionImportance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr parameterArray
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArray");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterArray"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 parameterArrayCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArrayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::dyn_parameterArrayCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterArrayCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion..ctor
Oculus::Platform::CAPI::ovrMatchmakingCriterion::ovrMatchmakingCriterion(::StringW key, ::Oculus::Platform::MatchmakingCriterionImportance importance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovrMatchmakingCriterion::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(importance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, importance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.Invoke
void Oculus::Platform::CAPI::FilterCallback::Invoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::CAPI::FilterCallback::BeginInvoke(ByRef<::ArrayW<int16_t>> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pcmData), pcmDataLength, frequency, numChannels, callback, object);
}
// Autogenerated method: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback.EndInvoke
void Oculus::Platform::CAPI::FilterCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FilterCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::CAPI::FilterCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback
#include "Oculus/Platform/Callback.hpp"
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback`1
#include "Oculus/Platform/Callback_RequestCallback_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* Oculus::Platform::Callback::_get_requestIDsToRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_requestIDsToRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>*>("Oculus.Platform", "Callback", "requestIDsToRequests")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
void Oculus::Platform::Callback::_set_requestIDsToRequests(::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Request*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_requestIDsToRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "requestIDsToRequests", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/Oculus.Platform.MessageType,Oculus.Platform.Callback/Oculus.Platform.RequestCallback> notificationCallbacks
::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* Oculus::Platform::Callback::_get_notificationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_notificationCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>*>("Oculus.Platform", "Callback", "notificationCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/Oculus.Platform.MessageType,Oculus.Platform.Callback/Oculus.Platform.RequestCallback> notificationCallbacks
void Oculus::Platform::Callback::_set_notificationCallbacks(::System::Collections::Generic::Dictionary_2<::Oculus::Platform::Message::MessageType, ::Oculus::Platform::Callback::RequestCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_notificationCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "notificationCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
bool Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
void Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
::System::Collections::Generic::List_1<::Oculus::Platform::Message*>* Oculus::Platform::Callback::_get_pendingRoomInviteNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_pendingRoomInviteNotifications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Oculus::Platform::Message*>*>("Oculus.Platform", "Callback", "pendingRoomInviteNotifications"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
void Oculus::Platform::Callback::_set_pendingRoomInviteNotifications(::System::Collections::Generic::List_1<::Oculus::Platform::Message*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_pendingRoomInviteNotifications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "pendingRoomInviteNotifications", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hasRegisteredJoinIntentNotificationHandler
bool Oculus::Platform::Callback::_get_hasRegisteredJoinIntentNotificationHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_hasRegisteredJoinIntentNotificationHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Callback", "hasRegisteredJoinIntentNotificationHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hasRegisteredJoinIntentNotificationHandler
void Oculus::Platform::Callback::_set_hasRegisteredJoinIntentNotificationHandler(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_hasRegisteredJoinIntentNotificationHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "hasRegisteredJoinIntentNotificationHandler", value));
}
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message latestPendingJoinIntentNotifications
::Oculus::Platform::Message* Oculus::Platform::Callback::_get_latestPendingJoinIntentNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_get_latestPendingJoinIntentNotifications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message*>("Oculus.Platform", "Callback", "latestPendingJoinIntentNotifications"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message latestPendingJoinIntentNotifications
void Oculus::Platform::Callback::_set_latestPendingJoinIntentNotifications(::Oculus::Platform::Message* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::_set_latestPendingJoinIntentNotifications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "latestPendingJoinIntentNotifications", value));
}
// Autogenerated method: Oculus.Platform.Callback..cctor
void Oculus::Platform::Callback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.SetNotificationCallback
void Oculus::Platform::Callback::SetNotificationCallback(::Oculus::Platform::Message::MessageType type, ::Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::SetNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "SetNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, callback);
}
// Autogenerated method: Oculus.Platform.Callback.AddRequest
void Oculus::Platform::Callback::AddRequest(::Oculus::Platform::Request* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::AddRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "AddRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Oculus.Platform.Callback.RunCallbacks
void Oculus::Platform::Callback::RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.RunLimitedCallbacks
void Oculus::Platform::Callback::RunLimitedCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RunLimitedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunLimitedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, limit);
}
// Autogenerated method: Oculus.Platform.Callback.OnApplicationQuit
void Oculus::Platform::Callback::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.FlushRoomInviteNotificationQueue
void Oculus::Platform::Callback::FlushRoomInviteNotificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::FlushRoomInviteNotificationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "FlushRoomInviteNotificationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.FlushJoinIntentNotificationQueue
void Oculus::Platform::Callback::FlushJoinIntentNotificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::FlushJoinIntentNotificationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "FlushJoinIntentNotificationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.HandleMessage
void Oculus::Platform::Callback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::HandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback/Oculus.Platform.RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Oculus.Platform.Callback messageCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message::Callback*& Oculus::Platform::Callback::RequestCallback::dyn_messageCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::dyn_messageCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Callback/Oculus.Platform.RequestCallback.HandleMessage
void Oculus::Platform::Callback::RequestCallback::HandleMessage(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Callback::RequestCallback::HandleMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Callback::RequestCallback*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CallbackRunner
#include "Oculus/Platform/CallbackRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPersistantBetweenSceneLoads
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::dyn_IsPersistantBetweenSceneLoads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPersistantBetweenSceneLoads"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.ovr_UnityResetTestPlatform
void Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CallbackRunner", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Awake
void Oculus::Platform::CallbackRunner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Update
void Oculus::Platform::CallbackRunner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnDestroy
void Oculus::Platform::CallbackRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnApplicationQuit
void Oculus::Platform::CallbackRunner::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CallbackRunner::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B66B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType Unknown
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType Unknown
void Oculus::Platform::ChallengeCreationType::_set_Unknown(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B66E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType UserCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_UserCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_UserCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "UserCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType UserCreated
void Oculus::Platform::ChallengeCreationType::_set_UserCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_UserCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "UserCreated", value));
}
// [DescriptionAttribute] Offset: 0x6B6720
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
::Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
void Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated(::Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeCreationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeCreationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::ChallengeOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetDescription
void Oculus::Platform::ChallengeOptions::SetDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetEndDate
void Oculus::Platform::ChallengeOptions::SetEndDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeActiveChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeFutureChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludePastChallenges
void Oculus::Platform::ChallengeOptions::SetIncludePastChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetLeaderboardName
void Oculus::Platform::ChallengeOptions::SetLeaderboardName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetStartDate
void Oculus::Platform::ChallengeOptions::SetStartDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetTitle
void Oculus::Platform::ChallengeOptions::SetTitle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetViewerFilter
void Oculus::Platform::ChallengeOptions::SetViewerFilter(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetVisibility
void Oculus::Platform::ChallengeOptions::SetVisibility(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ChallengeOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ChallengeOptions.Finalize
void Oculus::Platform::ChallengeOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6758
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
void Oculus::Platform::ChallengeViewerFilter::_set_Unknown(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6790
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_AllVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_AllVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "AllVisible"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
void Oculus::Platform::ChallengeViewerFilter::_set_AllVisible(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_AllVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "AllVisible", value));
}
// [DescriptionAttribute] Offset: 0x6B67C8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Participating
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Participating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Participating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Participating"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Participating
void Oculus::Platform::ChallengeViewerFilter::_set_Participating(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Participating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Participating", value));
}
// [DescriptionAttribute] Offset: 0x6B6800
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Invited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Invited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_Invited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Invited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Invited
void Oculus::Platform::ChallengeViewerFilter::_set_Invited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_Invited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Invited", value));
}
// [DescriptionAttribute] Offset: 0x6B6838
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
::Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
void Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited(::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeViewerFilter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeViewerFilter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6870
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Unknown
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Unknown
void Oculus::Platform::ChallengeVisibility::_set_Unknown(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B68A8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_InviteOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_InviteOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "InviteOnly"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
void Oculus::Platform::ChallengeVisibility::_set_InviteOnly(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_InviteOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "InviteOnly", value));
}
// [DescriptionAttribute] Offset: 0x6B68E0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Public
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Public
void Oculus::Platform::ChallengeVisibility::_set_Public(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Public", value));
}
// [DescriptionAttribute] Offset: 0x6B6918
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Private
::Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Private
void Oculus::Platform::ChallengeVisibility::_set_Private(::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Private", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::ChallengeVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ChallengeVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6950
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
void Oculus::Platform::CloudStorageDataStatus::_set_Unknown(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6988
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InSync
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_InSync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InSync"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InSync
void Oculus::Platform::CloudStorageDataStatus::_set_InSync(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_InSync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InSync", value));
}
// [DescriptionAttribute] Offset: 0x6B69C0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload", value));
}
// [DescriptionAttribute] Offset: 0x6B69F8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
void Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading", value));
}
// [DescriptionAttribute] Offset: 0x6B6A30
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload", value));
}
// [DescriptionAttribute] Offset: 0x6B6A68
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
void Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading", value));
}
// [DescriptionAttribute] Offset: 0x6B6AA0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_get_InConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InConflict"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
void Oculus::Platform::CloudStorageDataStatus::_set_InConflict(::Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::_set_InConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InConflict", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::CloudStorageDataStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageDataStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6AD8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
void Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6B10
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
void Oculus::Platform::CloudStorageUpdateStatus::_set_Ok(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Ok", value));
}
// [DescriptionAttribute] Offset: 0x6B6B48
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
void Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored", value));
}
// [DescriptionAttribute] Offset: 0x6B6B80
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
void Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired(::Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::CloudStorageUpdateStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CloudStorageUpdateStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.GroupPresenceOptions
#include "Oculus/Platform/GroupPresenceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::GroupPresenceOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetDestinationApiName
void Oculus::Platform::GroupPresenceOptions::SetDestinationApiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetIsJoinable
void Oculus::Platform::GroupPresenceOptions::SetIsJoinable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetLobbySessionId
void Oculus::Platform::GroupPresenceOptions::SetLobbySessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.SetMatchSessionId
void Oculus::Platform::GroupPresenceOptions::SetMatchSessionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::GroupPresenceOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.GroupPresenceOptions.Finalize
void Oculus::Platform::GroupPresenceOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::GroupPresenceOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IMicrophone
#include "Oculus/Platform/IMicrophone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IMicrophone.Start
void Oculus::Platform::IMicrophone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Stop
void Oculus::Platform::IMicrophone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Update
::ArrayW<float> Oculus::Platform::IMicrophone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IMicrophone::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IMicrophone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IVoipPCMSource.GetPCM
int Oculus::Platform::IVoipPCMSource::GetPCM(::ArrayW<float> dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::GetPCM");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.SetSenderID
void Oculus::Platform::IVoipPCMSource::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::SetSenderID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.Update
void Oculus::Platform::IVoipPCMSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.PeekSizeElements
int Oculus::Platform::IVoipPCMSource::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::IVoipPCMSource::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::IVoipPCMSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.InviteOptions
#include "Oculus/Platform/InviteOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::InviteOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.InviteOptions.AddSuggestedUser
void Oculus::Platform::InviteOptions::AddSuggestedUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.InviteOptions.ClearSuggestedUsers
void Oculus::Platform::InviteOptions::ClearSuggestedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.InviteOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::InviteOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.InviteOptions.Finalize
void Oculus::Platform::InviteOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::InviteOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6BB8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType String
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType String
void Oculus::Platform::KeyValuePairType::_set_String(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "String", value));
}
// [DescriptionAttribute] Offset: 0x6B6BF0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Int
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Int
void Oculus::Platform::KeyValuePairType::_set_Int(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Int", value));
}
// [DescriptionAttribute] Offset: 0x6B6C28
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Double
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Double
void Oculus::Platform::KeyValuePairType::_set_Double(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Double", value));
}
// [DescriptionAttribute] Offset: 0x6B6C60
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Unknown
::Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Unknown
void Oculus::Platform::KeyValuePairType::_set_Unknown(::Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::KeyValuePairType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::KeyValuePairType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6C98
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Unknown
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Unknown
void Oculus::Platform::LaunchResult::_set_Unknown(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6CD0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Success
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Success
void Oculus::Platform::LaunchResult::_set_Success(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Success", value));
}
// [DescriptionAttribute] Offset: 0x6B6D08
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomFull
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedRoomFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomFull
void Oculus::Platform::LaunchResult::_set_FailedRoomFull(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedRoomFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomFull", value));
}
// [DescriptionAttribute] Offset: 0x6B6D40
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
void Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted", value));
}
// [DescriptionAttribute] Offset: 0x6B6D78
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedRoomNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
void Oculus::Platform::LaunchResult::_set_FailedRoomNotFound(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedRoomNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomNotFound", value));
}
// [DescriptionAttribute] Offset: 0x6B6DB0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedUserDeclined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedUserDeclined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedUserDeclined"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
void Oculus::Platform::LaunchResult::_set_FailedUserDeclined(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedUserDeclined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedUserDeclined", value));
}
// [DescriptionAttribute] Offset: 0x6B6DE8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedOtherReason
::Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedOtherReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_get_FailedOtherReason");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedOtherReason"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedOtherReason
void Oculus::Platform::LaunchResult::_set_FailedOtherReason(::Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::_set_FailedOtherReason");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedOtherReason", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LaunchResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6E20
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Unknown
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Unknown
void Oculus::Platform::LaunchType::_set_Unknown(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6E58
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Normal
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Normal
void Oculus::Platform::LaunchType::_set_Normal(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Normal", value));
}
// [DescriptionAttribute] Offset: 0x6B6E90
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Invite
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Invite
void Oculus::Platform::LaunchType::_set_Invite(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Invite", value));
}
// [DescriptionAttribute] Offset: 0x6B6EC8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Coordinated
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Coordinated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Coordinated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Coordinated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Coordinated
void Oculus::Platform::LaunchType::_set_Coordinated(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Coordinated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Coordinated", value));
}
// [DescriptionAttribute] Offset: 0x6B6F00
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Deeplink
::Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Deeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_get_Deeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Deeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Deeplink
void Oculus::Platform::LaunchType::_set_Deeplink(::Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::_set_Deeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Deeplink", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LaunchType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LaunchType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B6F38
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType None
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType None
void Oculus::Platform::LeaderboardFilterType::_set_None(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "None", value));
}
// [DescriptionAttribute] Offset: 0x6B6F70
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Friends
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Friends
void Oculus::Platform::LeaderboardFilterType::_set_Friends(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Friends", value));
}
// [DescriptionAttribute] Offset: 0x6B6FA8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Unknown
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Unknown
void Oculus::Platform::LeaderboardFilterType::_set_Unknown(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B6FE0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType UserIds
::Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_UserIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_get_UserIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "UserIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType UserIds
void Oculus::Platform::LeaderboardFilterType::_set_UserIds(::Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::_set_UserIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "UserIds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LeaderboardFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7018
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Top
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Top"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Top
void Oculus::Platform::LeaderboardStartAt::_set_Top(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Top", value));
}
// [DescriptionAttribute] Offset: 0x6B7050
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer", value));
}
// [DescriptionAttribute] Offset: 0x6B7088
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop", value));
}
// [DescriptionAttribute] Offset: 0x6B70C0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Unknown
::Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Unknown
void Oculus::Platform::LeaderboardStartAt::_set_Unknown(::Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LeaderboardStartAt::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LeaderboardStartAt::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B70F8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Unknown
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Unknown
void Oculus::Platform::LivestreamingAudience::_set_Unknown(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7130
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Public
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Public
void Oculus::Platform::LivestreamingAudience::_set_Public(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Public", value));
}
// [DescriptionAttribute] Offset: 0x6B7168
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Friends
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Friends
void Oculus::Platform::LivestreamingAudience::_set_Friends(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Friends", value));
}
// [DescriptionAttribute] Offset: 0x6B71A0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
::Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_OnlyMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_get_OnlyMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "OnlyMe"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
void Oculus::Platform::LivestreamingAudience::_set_OnlyMe(::Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::_set_OnlyMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "OnlyMe", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingAudience::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingAudience::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B71D8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7210
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn", value));
}
// [DescriptionAttribute] Offset: 0x6B7248
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
::Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff(::Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingMicrophoneStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7280
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Success
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Success
void Oculus::Platform::LivestreamingStartStatus::_set_Success(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Success", value));
}
// [DescriptionAttribute] Offset: 0x6B72B8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
void Oculus::Platform::LivestreamingStartStatus::_set_Unknown(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B72F0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
void Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet", value));
}
// [DescriptionAttribute] Offset: 0x6B7328
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
void Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect", value));
}
// [DescriptionAttribute] Offset: 0x6B7360
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
void Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId", value));
}
// [DescriptionAttribute] Offset: 0x6B7398
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
void Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters(::Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::LivestreamingStartStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::LivestreamingStartStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingCriterionImportance
#include "Oculus/Platform/MatchmakingCriterionImportance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B73D0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Required"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
void Oculus::Platform::MatchmakingCriterionImportance::_set_Required(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Required", value));
}
// [DescriptionAttribute] Offset: 0x6B7408
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance High
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "High"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance High
void Oculus::Platform::MatchmakingCriterionImportance::_set_High(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "High", value));
}
// [DescriptionAttribute] Offset: 0x6B7440
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
void Oculus::Platform::MatchmakingCriterionImportance::_set_Medium(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Medium", value));
}
// [DescriptionAttribute] Offset: 0x6B7478
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
void Oculus::Platform::MatchmakingCriterionImportance::_set_Low(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Low", value));
}
// [DescriptionAttribute] Offset: 0x6B74B0
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
::Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
void Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown(::Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::MatchmakingCriterionImportance::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingCriterionImportance::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& Oculus::Platform::MatchmakingOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomJoinPolicy
void Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy(::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomMaxUsers
void Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.AddEnqueueAdditionalUser
void Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueAdditionalUsers
void Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueIsDebug
void Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueQueryKey
void Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::MatchmakingOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.MatchmakingOptions.Finalize
void Oculus::Platform::MatchmakingOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B74E8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
void Oculus::Platform::MatchmakingStatApproach::_set_Unknown(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B7520
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Trailing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Trailing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Trailing"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
void Oculus::Platform::MatchmakingStatApproach::_set_Trailing(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Trailing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Trailing", value));
}
// [DescriptionAttribute] Offset: 0x6B7558
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
::Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Swingy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_get_Swingy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Swingy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
void Oculus::Platform::MatchmakingStatApproach::_set_Swingy(::Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::_set_Swingy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Swingy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::MatchmakingStatApproach::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MatchmakingStatApproach::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x6B7590
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Unknown
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Unknown
void Oculus::Platform::MediaContentType::_set_Unknown(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x6B75C8
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Photo
::Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Photo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_get_Photo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Photo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Photo
void Oculus::Platform::MediaContentType::_set_Photo(::Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::_set_Photo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Photo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::MediaContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MediaContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.RejoinDialogResult
#include "Oculus/Platform/Models/RejoinDialogResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::ExtraMessageTypesHandler*>("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
void Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Message/Oculus.Platform.MessageType type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message::MessageType& Oculus::Platform::Message::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message::MessageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 requestID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Message::dyn_requestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_requestID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Error error
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Error*& Oculus::Platform::Message::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Error**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Message.get_Type
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_IsError
bool Oculus::Platform::Message::get_IsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_RequestID
uint64_t Oculus::Platform::Message::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_HandleExtraMessageTypes
::Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::get_HandleExtraMessageTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::get_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "get_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::ExtraMessageTypesHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.set_HandleExtraMessageTypes
void Oculus::Platform::Message::set_HandleExtraMessageTypes(::Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::set_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "set_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Message.GetError
::Oculus::Platform::Models::Error* Oculus::Platform::Message::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Error*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPingResult
::Oculus::Platform::Models::PingResult* Oculus::Platform::Message::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPingResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetworkingPeer
::Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::Message::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetHttpTransferUpdate
::Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::Message::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPlatformInitialize
::Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::Message::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::Message::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::Message::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::Message::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::Message::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationInviteList
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::Message::GetApplicationInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetApplicationInviteList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::Message::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::Message::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::Message::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::Message::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::Message::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::Message::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::Message::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationFinalized
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::Message::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationProposed
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::Message::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationSuggestionList
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::Message::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::Message::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallenge");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeEntryList
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::Message::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::Message::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageConflictMetadata
::Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::Message::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageData
::Oculus::Platform::Models::CloudStorageData* Oculus::Platform::Message::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadata
::Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::Message::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadataList
::Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::Message::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageUpdateResponse
::Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::Message::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDataStore
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::Message::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetDataStore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDestinationList
::Oculus::Platform::Models::DestinationList* Oculus::Platform::Message::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetGroupPresenceJoinIntent
::Oculus::Platform::Models::GroupPresenceJoinIntent* Oculus::Platform::Message::GetGroupPresenceJoinIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetGroupPresenceJoinIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceJoinIntent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetGroupPresenceLeaveIntent
::Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::Message::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInstalledApplicationList
::Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::Message::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInvitePanelResultInfo
::Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::Message::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchBlockFlowResult
::Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::Message::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchFriendRequestFlowResult
::Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::Message::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchInvitePanelFlowResult
::Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::Message::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchReportFlowResult
::Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::Message::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchUnblockFlowResult
::Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::Message::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardDidUpdate
bool Oculus::Platform::Message::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 43));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardEntryList
::Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::Message::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardList
::Oculus::Platform::Models::LeaderboardList* Oculus::Platform::Message::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLinkedAccountList
::Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::Message::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingApplicationStatus
::Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::Message::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStartResult
::Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::Message::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStatus
::Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::Message::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingVideoStats
::Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::Message::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingAdminSnapshot
::Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::Message::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingBrowseResult
::Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::Message::GetMatchmakingBrowseResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingBrowseResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResult
::Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::Message::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResultAndRoom
::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingStats
::Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::Message::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMicrophoneAvailabilityState
::Oculus::Platform::Models::MicrophoneAvailabilityState* Oculus::Platform::Message::GetMicrophoneAvailabilityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetMicrophoneAvailabilityState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::MicrophoneAvailabilityState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncConnection
::Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::Message::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionList
::Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::Message::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionsChangedNotification
::Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::Message::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSetSessionPropertyResult
::Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncVoipAttenuationValueList
::Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetOrgScopedID
::Oculus::Platform::Models::OrgScopedID* Oculus::Platform::Message::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetParty
::Oculus::Platform::Models::Party* Oculus::Platform::Message::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetParty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 63));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyID
::Oculus::Platform::Models::PartyID* Oculus::Platform::Message::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyUpdateNotification
::Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::Message::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 65));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPidList
::Oculus::Platform::Models::PidList* Oculus::Platform::Message::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPidList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 66));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetProductList
::Oculus::Platform::Models::ProductList* Oculus::Platform::Message::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetProductList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 67));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchase
::Oculus::Platform::Models::Purchase* Oculus::Platform::Message::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchase");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 68));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchaseList
::Oculus::Platform::Models::PurchaseList* Oculus::Platform::Message::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 69));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRejoinDialogResult
::Oculus::Platform::Models::RejoinDialogResult* Oculus::Platform::Message::GetRejoinDialogResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRejoinDialogResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 70));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RejoinDialogResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoom
::Oculus::Platform::Models::Room* Oculus::Platform::Message::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 71));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotification
::Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::Message::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotificationList
::Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::Message::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 73));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomList
::Oculus::Platform::Models::RoomList* Oculus::Platform::Message::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetRoomList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 74));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSdkAccountList
::Oculus::Platform::Models::SdkAccountList* Oculus::Platform::Message::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 75));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSendInvitesResult
::Oculus::Platform::Models::SendInvitesResult* Oculus::Platform::Message::GetSendInvitesResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSendInvitesResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 76));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SendInvitesResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetShareMediaResult
::Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::Message::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 77));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetString
::StringW Oculus::Platform::Message::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 78));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemVoipState
::Oculus::Platform::Models::SystemVoipState* Oculus::Platform::Message::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 79));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUser
::Oculus::Platform::Models::User* Oculus::Platform::Message::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUser");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 80));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserAndRoomList
::Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::Message::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 81));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserDataStoreUpdateResponse
::Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::Message::GetUserDataStoreUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserDataStoreUpdateResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 82));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserList
::Oculus::Platform::Models::UserList* Oculus::Platform::Message::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 83));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserProof
::Oculus::Platform::Models::UserProof* Oculus::Platform::Message::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserProof");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 84));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserReportID
::Oculus::Platform::Models::UserReportID* Oculus::Platform::Message::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 85));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.ParseMessageHandle
::Oculus::Platform::Message* Oculus::Platform::Message::ParseMessageHandle(::System::IntPtr messageHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageHandle);
}
// Autogenerated method: Oculus.Platform.Message.PopMessage
::Oculus::Platform::Message* Oculus::Platform::Message::PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.Finalize
void Oculus::Platform::Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.Invoke
void Oculus::Platform::Message::Callback::Invoke(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::Callback::BeginInvoke(::Oculus::Platform::Message* message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.Callback.EndInvoke
void Oculus::Platform::Message::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::Callback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message/Oculus.Platform.MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Unknown
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Unknown
void Oculus::Platform::Message::MessageType::_set_Unknown(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddCount
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddCount"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddCount
void Oculus::Platform::Message::MessageType::_set_Achievements_AddCount(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddCount", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddFields
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_AddFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddFields"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_AddFields
void Oculus::Platform::Message::MessageType::_set_Achievements_AddFields(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_AddFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddFields", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllDefinitions
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllDefinitions
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllProgress
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetAllProgress
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetDefinitionsByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetDefinitionsByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementDefinitionArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementDefinitionArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementProgressArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetNextAchievementProgressArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetProgressByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_GetProgressByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_Unlock
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Achievements_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Achievements_Unlock
void Oculus::Platform::Message::MessageType::_set_Achievements_Unlock(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Achievements_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_Unlock", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetRegisteredPIDs
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetRegisteredPIDs
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_GetSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_RegisterSessionKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType ApplicationLifecycle_RegisterSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_GetVersion
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_GetVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_GetVersion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_GetVersion
void Oculus::Platform::Message::MessageType::_set_Application_GetVersion(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_GetVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_GetVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_LaunchOtherApp
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Application_LaunchOtherApp
void Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Delete
void Oculus::Platform::Message::MessageType::_set_AssetFile_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DeleteByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Download
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Download() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Download");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Download"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Download
void Oculus::Platform::Message::MessageType::_set_AssetFile_Download(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Download");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Download", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancel
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_DownloadCancelByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_GetList
void Oculus::Platform::Message::MessageType::_set_AssetFile_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Status
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Status"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_Status
void Oculus::Platform::Message::MessageType::_set_AssetFile_Status(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Status", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusById
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusById
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusByName
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType AssetFile_StatusByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Create
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Create
void Oculus::Platform::Message::MessageType::_set_Challenges_Create(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_DeclineInvite
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_DeclineInvite
void Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Delete
void Oculus::Platform::Message::MessageType::_set_Challenges_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Get
void Oculus::Platform::Message::MessageType::_set_Challenges_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetList
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetList
void Oculus::Platform::Message::MessageType::_set_Challenges_GetList(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousChallenges
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Join
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Join
void Oculus::Platform::Message::MessageType::_set_Challenges_Join(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Leave
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_Leave
void Oculus::Platform::Message::MessageType::_set_Challenges_Leave(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_UpdateInfo
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Challenges_UpdateInfo
void Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage2_GetUserDirectoryPath
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage2_GetUserDirectoryPath
void Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Delete
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Delete
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
void Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Load
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Load"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Load
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Load(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Load", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadBucketMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadBucketMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadConflictMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadConflictMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadHandle
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadHandle
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadMetadata
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_LoadMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepLocal
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepLocal
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepRemote
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_ResolveKeepRemote
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Save
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_CloudStorage_Save");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Save"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType CloudStorage_Save
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Save(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_CloudStorage_Save");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Save", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Entitlement_GetIsViewerEntitled
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Entitlement_GetIsViewerEntitled
void Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_Clear
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_Clear
void Oculus::Platform::Message::MessageType::_set_GroupPresence_Clear(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetInvitableUsers
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetInvitableUsers(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetNextApplicationInviteArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetNextApplicationInviteArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetNextApplicationInviteArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetNextApplicationInviteArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetNextApplicationInviteArrayPage
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetNextApplicationInviteArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetNextApplicationInviteArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetNextApplicationInviteArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetSentInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_GetSentInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_GetSentInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_GetSentInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_GetSentInvites
void Oculus::Platform::Message::MessageType::_set_GroupPresence_GetSentInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_GetSentInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_GetSentInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchInvitePanel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchInvitePanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchInvitePanel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchInvitePanel
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchInvitePanel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchInvitePanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchInvitePanel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchMultiplayerErrorDialog
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchMultiplayerErrorDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchMultiplayerErrorDialog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchMultiplayerErrorDialog"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchMultiplayerErrorDialog
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchMultiplayerErrorDialog(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchMultiplayerErrorDialog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchMultiplayerErrorDialog", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchRejoinDialog
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRejoinDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRejoinDialog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRejoinDialog"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchRejoinDialog
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRejoinDialog(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRejoinDialog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRejoinDialog", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchRosterPanel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_LaunchRosterPanel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRosterPanel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_LaunchRosterPanel
void Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRosterPanel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_LaunchRosterPanel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_LaunchRosterPanel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SendInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SendInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SendInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SendInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SendInvites
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SendInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SendInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SendInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_Set
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_Set
void Oculus::Platform::Message::MessageType::_set_GroupPresence_Set(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetDestination
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetDestination");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDestination"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetDestination
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDestination(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetDestination");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetDestination", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetIsJoinable
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetIsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetIsJoinable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetIsJoinable"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetIsJoinable
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetIsJoinable(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetIsJoinable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetIsJoinable", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetLobbySession
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetLobbySession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetLobbySession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetLobbySession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetLobbySession
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetLobbySession(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetLobbySession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetLobbySession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetMatchSession
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_GroupPresence_SetMatchSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_GroupPresence_SetMatchSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "GroupPresence_SetMatchSession"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType GroupPresence_SetMatchSession
void Oculus::Platform::Message::MessageType::_set_GroupPresence_SetMatchSession(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_GroupPresence_SetMatchSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "GroupPresence_SetMatchSession", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_ConsumePurchase
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_ConsumePurchase
void Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextProductArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextProductArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextPurchaseArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetNextPurchaseArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetProductsBySKU
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetProductsBySKU
void Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchases
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchases
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchasesDurableCache
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_GetViewerPurchasesDurableCache
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_LaunchCheckoutFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType IAP_LaunchCheckoutFlow
void Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_GetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_SetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType LanguagePack_SetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_Get
void Oculus::Platform::Message::MessageType::_set_Leaderboard_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesAfterRank
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesByIds
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextLeaderboardArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetNextLeaderboardArrayPage
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetPreviousEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntry
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntryWithSupplementaryMetric
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Leaderboard_WriteEntryWithSupplementaryMetric
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Browse2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Cancel2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateAndEnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_CreateRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_Enqueue2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_EnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetAdminSnapshot
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetAdminSnapshot
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetStats
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_GetStats
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_JoinRoom
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_JoinRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_ReportResultInsecure
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_ReportResultInsecure
void Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_StartMatch
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Matchmaking_StartMatch
void Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Media_ShareToFacebook
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Media_ShareToFacebook
void Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetNextRoomInviteNotificationArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetNextRoomInviteNotificationArrayPage
void Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetRoomInvites
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GetRoomInvites
void Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_MarkAsRead
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_MarkAsRead
void Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Party_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Party_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Party_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Party_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Party_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Party_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Party_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Clear
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Clear
void Oculus::Platform::Message::MessageType::_set_RichPresence_Clear(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetDestinations
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetDestinations
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetNextDestinationArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_GetNextDestinationArrayPage
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Set
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_RichPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType RichPresence_Set
void Oculus::Platform::Message::MessageType::_set_RichPresence_Set(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_RichPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_CreateAndJoinPrivate2
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Get
void Oculus::Platform::Message::MessageType::_set_Room_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrentForUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetCurrentForUser
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetInvitableUsers2
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetModeratedRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetModeratedRooms
void Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetNextRoomArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_GetNextRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_InviteUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_InviteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_InviteUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_InviteUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_InviteUser
void Oculus::Platform::Message::MessageType::_set_Room_InviteUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_InviteUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_InviteUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join
void Oculus::Platform::Message::MessageType::_set_Room_Join(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join2
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Join2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Join2
void Oculus::Platform::Message::MessageType::_set_Room_Join2(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Join2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_KickUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_KickUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_KickUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_KickUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_KickUser
void Oculus::Platform::Message::MessageType::_set_Room_KickUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_KickUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_KickUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_LaunchInvitableUserFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_LaunchInvitableUserFlow
void Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Leave
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_Leave
void Oculus::Platform::Message::MessageType::_set_Room_Leave(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_SetDescription
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_SetDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_SetDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_SetDescription"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_SetDescription
void Oculus::Platform::Message::MessageType::_set_Room_SetDescription(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_SetDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_SetDescription", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateDataStore
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateDataStore
void Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateMembershipLockStatus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateMembershipLockStatus
void Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateOwner
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdateOwner
void Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdatePrivateRoomJoinPolicy
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Room_UpdatePrivateRoomJoinPolicy
void Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateDeleteEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateGetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateGetEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateWriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PrivateWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicDeleteEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicGetEntries
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicGetEntryByKey
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicWriteEntry
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType UserDataStore_PublicWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_Get
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_Get
void Oculus::Platform::Message::MessageType::_set_User_Get(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetAccessToken
void Oculus::Platform::Message::MessageType::_set_User_GetAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUser
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUser
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriends
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriends
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriendsAndRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserFriendsAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserAndRoomArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserAndRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserArrayPage
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetNextUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetOrgScopedID
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetOrgScopedID
void Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetSdkAccounts
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetSdkAccounts
void Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetUserProof
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_GetUserProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetUserProof"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_GetUserProof
void Oculus::Platform::Message::MessageType::_set_User_GetUserProof(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_GetUserProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetUserProof", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchFriendRequestFlow
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType User_LaunchFriendRequestFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_GetMicrophoneAvailability
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Voip_GetMicrophoneAvailability");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_GetMicrophoneAvailability"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_GetMicrophoneAvailability
void Oculus::Platform::Message::MessageType::_set_Voip_GetMicrophoneAvailability(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Voip_GetMicrophoneAvailability");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_GetMicrophoneAvailability", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_SetSystemVoipSuppressed
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Voip_SetSystemVoipSuppressed
void Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
void Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_AssetFile_DownloadUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_AssetFile_DownloadUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_FinalizeApplication
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_FinalizeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_ProposeApplication
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Cal_ProposeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_InvitationsSent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_InvitationsSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_InvitationsSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_InvitationsSent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_InvitationsSent
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_InvitationsSent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_InvitationsSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_InvitationsSent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_JoinIntentReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_JoinIntentReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_JoinIntentReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_JoinIntentReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_JoinIntentReceived
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_JoinIntentReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_JoinIntentReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_JoinIntentReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_LeaveIntentReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_GroupPresence_LeaveIntentReceived
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_HTTP_Transfer
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_HTTP_Transfer
void Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Livestreaming_StatusChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Livestreaming_StatusChange
void Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Matchmaking_MatchFound
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Matchmaking_MatchFound
void Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_ConnectionStatusChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_ConnectionStatusChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_SessionsChanged
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_NetSync_SessionsChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_ConnectionStateChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_ConnectionStateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PeerConnectRequest
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PeerConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PingResult
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Networking_PingResult
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Party_PartyUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Party_PartyUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteAccepted
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteAccepted
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteReceived
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_InviteReceived
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_RoomUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Room_RoomUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Session_InvitationsSent
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Session_InvitationsSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Session_InvitationsSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Session_InvitationsSent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Session_InvitationsSent
void Oculus::Platform::Message::MessageType::_set_Notification_Session_InvitationsSent(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Session_InvitationsSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Session_InvitationsSent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_ConnectRequest
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_ConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_MicrophoneAvailabilityStateUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_MicrophoneAvailabilityStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_MicrophoneAvailabilityStateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_MicrophoneAvailabilityStateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_MicrophoneAvailabilityStateUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_MicrophoneAvailabilityStateUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_MicrophoneAvailabilityStateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_MicrophoneAvailabilityStateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_StateChange
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_StateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_SystemVoipState
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Voip_SystemVoipState
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Vrcamera_GetDataChannelMessageUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetDataChannelMessageUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetDataChannelMessageUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetDataChannelMessageUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Vrcamera_GetDataChannelMessageUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetDataChannelMessageUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetDataChannelMessageUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetDataChannelMessageUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Vrcamera_GetSurfaceUpdate
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Notification_Vrcamera_GetSurfaceUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWithAccessToken
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWithAccessToken
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeStandaloneOculus
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeStandaloneOculus
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeAndroidAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeAndroidAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWindowsAsynchronous
::Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.MessageType Platform_InitializeWindowsAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous(::Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Message::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.MessageType
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.Invoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, messageHandle, message_type);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke(::System::IntPtr messageHandle, ::Oculus::Platform::Message::MessageType message_type, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, messageHandle, message_type, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Oculus.Platform.ExtraMessageTypesHandler.EndInvoke
::Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message::ExtraMessageTypesHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAbuseReportRecording
#include "Oculus/Platform/MessageWithAbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetDataFromMessage
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAbuseReportRecording*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetAbuseReportRecording
::Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementDefinitions
#include "Oculus/Platform/MessageWithAchievementDefinitions.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetDataFromMessage
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementDefinitions*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetAchievementDefinitions
::Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementProgressList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
::Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAchievementUpdate*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
::Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationInviteList
#include "Oculus/Platform/MessageWithApplicationInviteList.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationInviteList.GetDataFromMessage
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::MessageWithApplicationInviteList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationInviteList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithApplicationInviteList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationInviteList.GetApplicationInviteList
::Oculus::Platform::Models::ApplicationInviteList* Oculus::Platform::MessageWithApplicationInviteList::GetApplicationInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationInviteList::GetApplicationInviteList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationInviteList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithApplicationVersion*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
::Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetDetails*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
::Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetails::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetDetailsList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
::Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDeleteResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
::Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadCancelResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
::Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadResult*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
::Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithAssetFileDownloadUpdate*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
::Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationFinalized
#include "Oculus/Platform/MessageWithCalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCalApplicationFinalized*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetCalApplicationFinalized
::Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationProposed
#include "Oculus/Platform/MessageWithCalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCalApplicationProposed*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetCalApplicationProposed
::Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationSuggestionList
#include "Oculus/Platform/MessageWithCalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetDataFromMessage
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCalApplicationSuggestionList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetCalApplicationSuggestionList
::Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallenge
#include "Oculus/Platform/MessageWithChallenge.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetDataFromMessage
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallenge*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetChallenge
::Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallenge::GetChallenge");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeList
#include "Oculus/Platform/MessageWithChallengeList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetDataFromMessage
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallengeList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetChallengeList
::Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeList::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeEntryList
#include "Oculus/Platform/MessageWithChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetDataFromMessage
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithChallengeEntryList*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetChallengeEntryList
::Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageConflictMetadata
#include "Oculus/Platform/MessageWithCloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetDataFromMessage
::Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCloudStorageConflictMetadata*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetCloudStorageConflictMetadata
::Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageData
#include "Oculus/Platform/MessageWithCloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetDataFromMessage
::Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage(::System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::MessageWithCloudStorageData*), 86));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetCloudStorageData
::Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Message*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
