// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.IAPManager
#include "Oculus/Platform/Samples/VrBoardGame/IAPManager.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String CONSUMABLE_1
::StringW Oculus::Platform::Samples::VrBoardGame::IAPManager::_get_CONSUMABLE_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::_get_CONSUMABLE_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrBoardGame", "IAPManager", "CONSUMABLE_1"));
}
// Autogenerated static field setter
// Set static field: static private System.String CONSUMABLE_1
void Oculus::Platform::Samples::VrBoardGame::IAPManager::_set_CONSUMABLE_1(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::_set_CONSUMABLE_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "IAPManager", "CONSUMABLE_1", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_priceText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_priceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_priceText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_priceText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.Start
void Oculus::Platform::Samples::VrBoardGame::IAPManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.FetchProductPrices
void Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchProductPrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchProductPrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchProductPrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.GetProductsBySKUCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::GetProductsBySKUCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::ProductList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::GetProductsBySKUCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductsBySKUCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.FetchPurchasedProducts
void Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchPurchasedProducts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchPurchasedProducts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchPurchasedProducts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.GetViewerPurchasesCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::GetViewerPurchasesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::GetViewerPurchasesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetViewerPurchasesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.BuyPowerBallsPressed
void Oculus::Platform::Samples::VrBoardGame::IAPManager::BuyPowerBallsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::BuyPowerBallsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPowerBallsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.LaunchCheckoutFlowCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::LaunchCheckoutFlowCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String POOL
::StringW Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POOL"));
}
// Autogenerated static field setter
// Set static field: static private System.String POOL
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POOL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single POLL_FREQUENCY
float Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POLL_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POLL_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POLL_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single POLL_FREQUENCY
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POLL_FREQUENCY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POLL_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POLL_FREQUENCY", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_matchButtonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchButtonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_infoText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_infoText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_matchRoom
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchRoom"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_remotePlayer
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_remotePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_remotePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayer"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lastUpdateTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState m_state
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.Start
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.Update
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchButtonPressed
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.EndMatch
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::EndMatch(int localScore, int remoteScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::EndMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localScore), ::il2cpp_utils::ExtractType(remoteScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localScore, remoteScore);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.OnApplicationQuit
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.TransitionToState
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::TransitionToState(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingEnqueueCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingEnqueueCallback(::Oculus::Platform::Message* untyped_msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingEnqueueCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingEnqueueCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(untyped_msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, untyped_msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchFoundCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchFoundCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingJoinRoomCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingJoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingJoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingJoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingRoomUpdateCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingRoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingRoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingRoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.ProcessRoomData
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRoomData(::Oculus::Platform::Models::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRoomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRoomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.ProcessRemoteMove
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRemoteMove(::StringW moveString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRemoteMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemoteMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveString);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.SendLocalMove
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::SendLocalMove(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece piece, int boardX, int boardY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::SendLocalMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLocalMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(boardX), ::il2cpp_utils::ExtractType(boardY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, boardX, boardY);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.UpdateDataStoreCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::UpdateDataStoreCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::UpdateDataStoreCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDataStoreCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.DoesLocalUserGoFirst
bool Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::DoesLocalUserGoFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::DoesLocalUserGoFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesLocalUserGoFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.GenericErrorCheckCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::GenericErrorCheckCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::GenericErrorCheckCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenericErrorCheckCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState None
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState None
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_None(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Queued
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Queued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Queued");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Queued"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Queued
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Queued(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Queued");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Queued", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Configuring
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Configuring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Configuring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Configuring"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Configuring
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Configuring(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Configuring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Configuring", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState MyTurn
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_MyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_MyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "MyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState MyTurn
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_MyTurn(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_MyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "MyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState RemoteTurn
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_RemoteTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_RemoteTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "RemoteTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState RemoteTurn
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_RemoteTurn(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_RemoteTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "RemoteTurn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.PlatformManager
#include "Oculus/Platform/Samples/VrBoardGame/PlatformManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrBoardGame.PlatformManager s_instance
::Oculus::Platform::Samples::VrBoardGame::PlatformManager* Oculus::Platform::Samples::VrBoardGame::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::PlatformManager*>("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrBoardGame.PlatformManager s_instance
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrBoardGame::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.Awake
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.Start
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.SimplePlatformSample.DataEntry
#include "Oculus/Platform/Samples/SimplePlatformSample/DataEntry.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dataOutput
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataOutput"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Start
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Update
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.SubmitCommand
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand(::StringW command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLeaderboardEntries
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLeaderboardEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.writeLeaderboardEntry
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry(::StringW leaderboardName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "writeLeaderboardEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName, value);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addFieldsAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement(::StringW achievementName, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addFieldsAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(fields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, fields);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addCountAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement(::StringW achievementName, ::StringW count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addCountAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, count);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.unlockAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementProgress
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementDefinition
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.checkEntitlement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserNonce
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.createAndJoinPrivateRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoom(::StringW joinPolicy, ::StringW maxUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createAndJoinPrivateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joinPolicy, maxUsers);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getCurrentRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.joinRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaveRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.kickUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::kickUser(::StringW roomID, ::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::kickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "kickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInFriends
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getInvitableUsers
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.inviteUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUser(::StringW roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.setRoomDescription
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::setRoomDescription(::StringW roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::setRoomDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setRoomDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.updateRoomDataStore
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::updateRoomDataStore(::StringW roomID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::updateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "updateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, key, value);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.printOutputLine
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine(::StringW newLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "printOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLine);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.outputRoomDetails
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputRoomDetails(::Oculus::Platform::Models::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputRoomDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "outputRoomDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.outputUserArray
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray(::Oculus::Platform::Models::UserList* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "outputUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, users);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.userProofCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserProof*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "userProofCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getEntitlementCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getEntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardGetCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardGetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardWriteCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardWriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementFieldsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementFieldsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementCountCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementCountCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementUnlockCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementUnlockCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementProgressCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementProgressList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementDefinitionCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementDefinitionList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementDefinitionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.createAndJoinPrivateRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createAndJoinPrivateRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getCurrentRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCurrentRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.joinRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaveRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getFriendsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFriendsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getInvitableUsersCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsersCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsersCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getInvitableUsersCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.inviteUserCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUserCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inviteUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.states
#include "Oculus/Platform/Samples/NetChat/states.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_NOT_INIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_NOT_INIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "NOT_INIT"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
void Oculus::Platform::Samples::NetChat::states::_set_NOT_INIT(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_NOT_INIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "NOT_INIT", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IDLE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IDLE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IDLE
void Oculus::Platform::Samples::NetChat::states::_set_IDLE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IDLE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_FIND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_FIND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_FIND"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_FIND(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_FIND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_FIND", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_FINDING_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_FINDING_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "FINDING_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_FINDING_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_FINDING_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "FINDING_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_CREATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_CREATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_CREATE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_CREATE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_CREATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_CREATE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_JOIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_JOIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_JOIN"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_JOIN(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_JOIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_JOIN", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_LEAVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_LEAVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_LEAVE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_LEAVE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_LEAVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_LEAVE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IN_EMPTY_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IN_EMPTY_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IN_EMPTY_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_IN_EMPTY_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IN_EMPTY_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IN_EMPTY_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IN_FULL_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IN_FULL_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IN_FULL_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_IN_FULL_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IN_FULL_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IN_FULL_ROOM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::NetChat::states::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.Constants
#include "Oculus/Platform/Samples/NetChat/Constants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BUFFER_SIZE
int Oculus::Platform::Samples::NetChat::Constants::_get_BUFFER_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_BUFFER_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.NetChat", "Constants", "BUFFER_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUFFER_SIZE
void Oculus::Platform::Samples::NetChat::Constants::_set_BUFFER_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_BUFFER_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "BUFFER_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String BOUT_POOL
::StringW Oculus::Platform::Samples::NetChat::Constants::_get_BOUT_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_BOUT_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.NetChat", "Constants", "BOUT_POOL"));
}
// Autogenerated static field setter
// Set static field: static public System.String BOUT_POOL
void Oculus::Platform::Samples::NetChat::Constants::_set_BOUT_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_BOUT_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "BOUT_POOL", value));
}
// Autogenerated static field getter
// Get static field: static public System.String FILTER_POOL
::StringW Oculus::Platform::Samples::NetChat::Constants::_get_FILTER_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_FILTER_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.NetChat", "Constants", "FILTER_POOL"));
}
// Autogenerated static field setter
// Set static field: static public System.String FILTER_POOL
void Oculus::Platform::Samples::NetChat::Constants::_set_FILTER_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_FILTER_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "FILTER_POOL", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.chatPacket
#include "Oculus/Platform/Samples/NetChat/chatPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <packetID>k__BackingField
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::NetChat::chatPacket::dyn_$packetID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::dyn_$packetID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<packetID>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <textString>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::NetChat::chatPacket::dyn_$textString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::dyn_$textString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<textString>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.get_packetID
int Oculus::Platform::Samples::NetChat::chatPacket::get_packetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::get_packetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.set_packetID
void Oculus::Platform::Samples::NetChat::chatPacket::set_packetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::set_packetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_packetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.get_textString
::StringW Oculus::Platform::Samples::NetChat::chatPacket::get_textString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::get_textString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.set_textString
void Oculus::Platform::Samples::NetChat::chatPacket::set_textString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::set_textString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.Serialize
::ArrayW<uint8_t> Oculus::Platform::Samples::NetChat::chatPacket::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.Deserialize
::Oculus::Platform::Samples::NetChat::chatPacket* Oculus::Platform::Samples::NetChat::chatPacket::Deserialize(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.NetChat", "chatPacket", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::NetChat::chatPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.DataEntry
#include "Oculus/Platform/Samples/NetChat/DataEntry.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dataOutput
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_dataOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_dataOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataOutput"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.NetChat.states currentState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::NetChat::states& Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::NetChat::states*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User localUser
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_localUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_localUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User remoteUser
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_remoteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_remoteUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Room currentRoom
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRoom"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPacketID
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::NetChat::DataEntry::dyn_lastPacketID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_lastPacketID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPacketID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ratedMatchStarted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::NetChat::DataEntry::dyn_ratedMatchStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_ratedMatchStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ratedMatchStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.Start
void Oculus::Platform::Samples::NetChat::DataEntry::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.Update
void Oculus::Platform::Samples::NetChat::DataEntry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.SubmitCommand
void Oculus::Platform::Samples::NetChat::DataEntry::SubmitCommand(::StringW command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::SubmitCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.printOutputLine
void Oculus::Platform::Samples::NetChat::DataEntry::printOutputLine(::StringW newLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::printOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "printOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLine);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.checkEntitlement
void Oculus::Platform::Samples::NetChat::DataEntry::checkEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::checkEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.getEntitlementCallback
void Oculus::Platform::Samples::NetChat::DataEntry::getEntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::getEntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getEntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.init
void Oculus::Platform::Samples::NetChat::DataEntry::init(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestCreateRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.createRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::createRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::createRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestCreateFilterRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestCreateFilterRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestCreateFilterRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestCreateFilterRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindFilteredRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindFilteredRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindFilteredRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindFilteredRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.foundMatch
void Oculus::Platform::Samples::NetChat::DataEntry::foundMatch(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::foundMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "foundMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.joinRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::joinRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::joinRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindMatch
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.searchingStarted
void Oculus::Platform::Samples::NetChat::DataEntry::searchingStarted(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::searchingStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "searchingStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.updateRoom
void Oculus::Platform::Samples::NetChat::DataEntry::updateRoom(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::updateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "updateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.sendChat
void Oculus::Platform::Samples::NetChat::DataEntry::sendChat(::StringW chatMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::sendChat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendChat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chatMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chatMessage);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.processNetPackets
void Oculus::Platform::Samples::NetChat::DataEntry::processNetPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::processNetPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processNetPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestLeaveRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestLeaveRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.leaveRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::leaveRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::leaveRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestStartRatedMatch
void Oculus::Platform::Samples::NetChat::DataEntry::requestStartRatedMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestStartRatedMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestStartRatedMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.startRatedMatchResponse
void Oculus::Platform::Samples::NetChat::DataEntry::startRatedMatchResponse(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::startRatedMatchResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "startRatedMatchResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestReportResults
void Oculus::Platform::Samples::NetChat::DataEntry::requestReportResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestReportResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestReportResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.reportResultsResponse
void Oculus::Platform::Samples::NetChat::DataEntry::reportResultsResponse(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::reportResultsResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reportResultsResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck
#include "Oculus/Platform/Samples/EntitlementCheck/EntitlementCheck.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action UserFailedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action UserPassedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean exitAppOnFailure
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitAppOnFailure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.Start
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.EntitlementCheckCallback
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCheckCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.HandleEntitlementCheckResult
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult(bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntitlementCheckResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MouseLook/RotationAxes axes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouseLook::RotationAxes& GlobalNamespace::MouseLook::dyn_axes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_axes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook::RotationAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_sensitivityY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_minimumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_maximumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Update
void GlobalNamespace::MouseLook::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.Start
void GlobalNamespace::MouseLook::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook/RotationAxes
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseXAndY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseXAndY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseXAndY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseXAndY", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseX
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseX"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseX
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseX(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseX", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MouseLook::RotationAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 numFOAChannels
int GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "numFOAChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numFOAChannels
void GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "numFOAChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 paramAmbiStat
int GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "paramAmbiStat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 paramAmbiStat
void GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "paramAmbiStat", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource source
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ONSPAmbisonicsNative::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus currentStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus& GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAmbisonicsNative..cctor
void GlobalNamespace::ONSPAmbisonicsNative::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAmbisonicsNative", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.OnEnable
void GlobalNamespace::ONSPAmbisonicsNative::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.Update
void GlobalNamespace::ONSPAmbisonicsNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPAudioSource::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPAudioSource", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPAudioSource::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "strONSPS", value));
}
// Autogenerated static field getter
// Get static field: static private ONSPAudioSource RoomReflectionGizmoAS
::GlobalNamespace::ONSPAudioSource* GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource*>("", "ONSPAudioSource", "RoomReflectionGizmoAS"));
}
// Autogenerated static field setter
// Set static field: static private ONSPAudioSource RoomReflectionGizmoAS
void GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS(::GlobalNamespace::ONSPAudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "RoomReflectionGizmoAS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useInvSqr
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_useInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_useInvSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInvSqr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single near
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_near");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "near"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single far
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_far");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "far"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumetricRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetricRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reverbSend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPAudioSource::dyn_reverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_reverbSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbSend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableRfl
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableRfl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRfl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAudioSource.get_EnableSpatialization
bool GlobalNamespace::ONSPAudioSource::get_EnableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableSpatialization
void GlobalNamespace::ONSPAudioSource::set_EnableSpatialization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Gain
float GlobalNamespace::ONSPAudioSource::get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Gain
void GlobalNamespace::ONSPAudioSource::set_Gain(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_UseInvSqr
bool GlobalNamespace::ONSPAudioSource::get_UseInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_UseInvSqr
void GlobalNamespace::ONSPAudioSource::set_UseInvSqr(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Near
float GlobalNamespace::ONSPAudioSource::get_Near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Near
void GlobalNamespace::ONSPAudioSource::set_Near(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Far
float GlobalNamespace::ONSPAudioSource::get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Far
void GlobalNamespace::ONSPAudioSource::set_Far(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_VolumetricRadius
float GlobalNamespace::ONSPAudioSource::get_VolumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_VolumetricRadius
void GlobalNamespace::ONSPAudioSource::set_VolumetricRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_ReverbSend
float GlobalNamespace::ONSPAudioSource::get_ReverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_ReverbSend
void GlobalNamespace::ONSPAudioSource::set_ReverbSend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_EnableRfl
bool GlobalNamespace::ONSPAudioSource::get_EnableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableRfl
void GlobalNamespace::ONSPAudioSource::set_EnableRfl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource..cctor
void GlobalNamespace::ONSPAudioSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPAudioSource.ONSP_GetGlobalRoomReflectionValues
void GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues(ByRef<bool> reflOn, ByRef<bool> reverbOn, ByRef<float> width, ByRef<float> height, ByRef<float> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "ONSP_GetGlobalRoomReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflOn), ::il2cpp_utils::ExtractType(reverbOn), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(reflOn), byref(reverbOn), byref(width), byref(height), byref(length));
}
// Autogenerated method: ONSPAudioSource.Awake
void GlobalNamespace::ONSPAudioSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Start
void GlobalNamespace::ONSPAudioSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Update
void GlobalNamespace::ONSPAudioSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.SetParameters
void GlobalNamespace::ONSPAudioSource::SetParameters(ByRef<::UnityEngine::AudioSource*> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::SetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source));
}
// Autogenerated method: ONSPAudioSource.OnDrawGizmos
void GlobalNamespace::ONSPAudioSource::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OnDestroy
void GlobalNamespace::ONSPAudioSource::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_GAIN
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_GAIN
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_USEINVSQR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_USEINVSQR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_USEINVSQR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_USEINVSQR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NEAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NEAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NEAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NEAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_FAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_FAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_FAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_FAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_RADIUS
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_RADIUS
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_AMBISTAT
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_AMBISTAT"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_AMBISTAT
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_AMBISTAT", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_SENDLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_SENDLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NUM
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NUM"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NUM
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NUM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPProfiler
#include "GlobalNamespace/ONSPProfiler.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_PORT
int GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPProfiler", "DEFAULT_PORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_PORT
void GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "DEFAULT_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPProfiler::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPProfiler", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPProfiler::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "strONSPS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean profilerEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPProfiler::dyn_profilerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_profilerEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilerEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPProfiler::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPProfiler.Start
void GlobalNamespace::ONSPProfiler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.Update
void GlobalNamespace::ONSPProfiler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerEnabled
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerPort
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationGeometry
#include "GlobalNamespace/ONSPPropagationGeometry.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String GeometryAssetDirectory
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GeometryAssetDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.String GeometryAssetDirectory
void GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GeometryAssetDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OSPSuccess
int GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "OSPSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OSPSuccess
void GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "OSPSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GEOMETRY_FILE_EXTENSION
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String GEOMETRY_FILE_EXTENSION
void GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 terrainDecimation
int GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "terrainDecimation"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 terrainDecimation
void GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "terrainDecimation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String filePathRelative
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePathRelative"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fileEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeChildMeshes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeChildMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr geometryHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "geometryHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationGeometry.get_GeometryAssetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "get_GeometryAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.get_filePath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry..cctor
void GlobalNamespace::ONSPPropagationGeometry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.GetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::GetPath(::UnityEngine::Transform* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: ONSPPropagationGeometry.Awake
void GlobalNamespace::ONSPPropagationGeometry::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.CreatePropagationGeometry
void GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePropagationGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.Update
void GlobalNamespace::ONSPPropagationGeometry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.OnDestroy
void GlobalNamespace::ONSPPropagationGeometry::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.traverseMeshHierarchy
void GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy(::UnityEngine::GameObject* obj, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> currentMaterials, bool includeChildren, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::MeshMaterial>* meshMaterials, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::TerrainMaterial>* terrainMaterials, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "traverseMeshHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(currentMaterials), ::il2cpp_utils::ExtractType(includeChildren), ::il2cpp_utils::ExtractType(meshMaterials), ::il2cpp_utils::ExtractType(terrainMaterials), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, currentMaterials, includeChildren, meshMaterials, terrainMaterials, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal);
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMeshFilter
void GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* tempVertices, ::System::Collections::Generic::List_1<int>* tempIndices, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::ArrayW<float> vertices, ::ArrayW<int> indices, ByRef<int> vertexOffset, ByRef<int> indexOffset, ByRef<int> groupOffset, ::UnityEngine::Mesh* mesh, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> materials, ::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "uploadMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempVertices), ::il2cpp_utils::ExtractType(tempIndices), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(vertexOffset), ::il2cpp_utils::ExtractType(indexOffset), ::il2cpp_utils::ExtractType(groupOffset), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tempVertices, tempIndices, groups, vertices, indices, byref(vertexOffset), byref(indexOffset), byref(groupOffset), mesh, materials, matrix);
}
// Autogenerated method: ONSPPropagationGeometry.updateCountsForMesh
void GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh(ByRef<int> totalVertexCount, ByRef<uint> totalIndexCount, ByRef<int> totalFaceCount, ByRef<int> totalMaterialCount, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "updateCountsForMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalVertexCount), ::il2cpp_utils::ExtractType(totalIndexCount), ::il2cpp_utils::ExtractType(totalFaceCount), ::il2cpp_utils::ExtractType(totalMaterialCount), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(totalVertexCount), byref(totalIndexCount), byref(totalFaceCount), byref(totalMaterialCount), mesh);
}
// Autogenerated method: ONSPPropagationGeometry.UploadGeometry
void GlobalNamespace::ONSPPropagationGeometry::UploadGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::UploadGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.ReadFile
bool GlobalNamespace::ONSPPropagationGeometry::ReadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::ReadFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.WriteToObj
bool GlobalNamespace::ONSPPropagationGeometry::WriteToObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::WriteToObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPPropagation/PropagationInterface CachedInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::_get_CachedInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_get_CachedInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::PropagationInterface*>("", "ONSPPropagation", "CachedInterface"));
}
// Autogenerated static field setter
// Set static field: static private ONSPPropagation/PropagationInterface CachedInterface
void GlobalNamespace::ONSPPropagation::_set_CachedInterface(::GlobalNamespace::ONSPPropagation::PropagationInterface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_set_CachedInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation", "CachedInterface", value));
}
// Autogenerated method: ONSPPropagation.get_Interface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::get_Interface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "get_Interface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagation.FindInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::FindInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FindInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "FindInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/UnityNativeInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/UnityNativeInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/WwisePluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/WwisePluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/FMODPluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/FMODPluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr materialHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum absorption
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_absorption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_absorption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absorption"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum transmission
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_transmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_transmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmission"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum scattering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_scattering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_scattering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scattering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPPropagationMaterial/Preset preset_
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPPropagationMaterial::Preset& GlobalNamespace::ONSPPropagationMaterial::dyn_preset_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_preset_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preset_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Preset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial.get_preset
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::get_preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::get_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagationMaterial::Preset, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.set_preset
void GlobalNamespace::ONSPPropagationMaterial::set_preset(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::set_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPPropagationMaterial.Start
void GlobalNamespace::ONSPPropagationMaterial::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.StartInternal
void GlobalNamespace::ONSPPropagationMaterial::StartInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::StartInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.OnDestroy
void GlobalNamespace::ONSPPropagationMaterial::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.DestroyInternal
void GlobalNamespace::ONSPPropagationMaterial::DestroyInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::DestroyInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.UploadMaterial
void GlobalNamespace::ONSPPropagationMaterial::UploadMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::UploadMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.SetPreset
void GlobalNamespace::ONSPPropagationMaterial::SetPreset(::GlobalNamespace::ONSPPropagationMaterial::Preset preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SetPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: ONSPPropagationMaterial.AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::AcousticTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::AcousticTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "AcousticTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Brick
void GlobalNamespace::ONSPPropagationMaterial::Brick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Brick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Brick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::BrickPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::BrickPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "BrickPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Carpet
void GlobalNamespace::ONSPPropagationMaterial::Carpet(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Carpet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Carpet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavyPadded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::CeramicTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CeramicTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CeramicTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Concrete
void GlobalNamespace::ONSPPropagationMaterial::Concrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Concrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Concrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::ConcreteRough(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteRough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteRough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlockPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Curtain
void GlobalNamespace::ONSPPropagationMaterial::Curtain(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Curtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Curtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Foliage
void GlobalNamespace::ONSPPropagationMaterial::Foliage(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Foliage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Foliage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Glass
void GlobalNamespace::ONSPPropagationMaterial::Glass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Glass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Glass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::GlassHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GlassHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GlassHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Grass
void GlobalNamespace::ONSPPropagationMaterial::Grass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Grass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Grass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Gravel
void GlobalNamespace::ONSPPropagationMaterial::Gravel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Gravel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Gravel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::GypsumBoard(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GypsumBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GypsumBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Soil
void GlobalNamespace::ONSPPropagationMaterial::Soil(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Soil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Soil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.SoundProof
void GlobalNamespace::ONSPPropagationMaterial::SoundProof(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SoundProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "SoundProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Snow
void GlobalNamespace::ONSPPropagationMaterial::Snow(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Snow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Snow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Steel
void GlobalNamespace::ONSPPropagationMaterial::Steel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Steel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Steel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Water
void GlobalNamespace::ONSPPropagationMaterial::Water(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Water");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Water", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThin
void GlobalNamespace::ONSPPropagationMaterial::WoodThin(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThick
void GlobalNamespace::ONSPPropagationMaterial::WoodThick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::WoodFloor(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodOnConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Preset
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Custom
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Custom
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset AcousticTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "AcousticTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "AcousticTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Brick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Brick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Brick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Brick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset BrickPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "BrickPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "BrickPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Carpet
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Carpet"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Carpet
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Carpet", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CeramicTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CeramicTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CeramicTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Concrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Concrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Concrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Concrete", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteRough
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteRough"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteRough", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Curtain
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Curtain"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Curtain
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Curtain", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Foliage
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Foliage"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Foliage
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Foliage", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Glass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Glass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Glass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Glass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GlassHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GlassHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GlassHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Grass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Grass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Grass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Gravel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Gravel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Gravel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Gravel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GypsumBoard
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GypsumBoard"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GypsumBoard", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Soil
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Soil"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Soil
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Soil", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset SoundProof
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "SoundProof"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset SoundProof
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "SoundProof", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Snow
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Snow"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Snow
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Snow", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Steel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Steel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Steel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Steel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Water
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Water"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Water
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Water", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThin
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThin"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThin
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThin", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodFloor
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodFloor"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodFloor", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single data
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 selection
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ONSPPropagationMaterial/Point> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>*& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum.get_Item
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9(::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1", value)));
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c..cctor
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial/Spectrum/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_0
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_0(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_1
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_1(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationSettings
#include "GlobalNamespace/ONSPPropagationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single quality
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationSettings::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationSettings.Update
void GlobalNamespace::ONSPPropagationSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPSettings
#include "GlobalNamespace/ONSPSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPSettings instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPSettings*>("", "ONSPSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private ONSPSettings instance
void GlobalNamespace::ONSPSettings::_set_instance(::GlobalNamespace::ONSPSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 voiceLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPSettings::dyn_voiceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::dyn_voiceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPSettings.get_Instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPVersion
#include "GlobalNamespace/ONSPVersion.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPVersion::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPVersion", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPVersion::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPVersion", "strONSPS", value));
}
// Autogenerated method: ONSPVersion.ONSP_GetVersion
void GlobalNamespace::ONSPVersion::ONSP_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::ONSP_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPVersion", "ONSP_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: ONSPVersion.Awake
void GlobalNamespace::ONSPVersion::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Start
void GlobalNamespace::ONSPVersion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Update
void GlobalNamespace::ONSPVersion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSpatializerUnity
#include "GlobalNamespace/OculusSpatializerUnity.hpp"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HIT_COUNT
int GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusSpatializerUnity", "HIT_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIT_COUNT
void GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "HIT_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.LayerMask gLayerMask
::UnityEngine::LayerMask GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LayerMask>("", "OculusSpatializerUnity", "gLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.LayerMask gLayerMask
void GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "gLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String strOSP
::StringW GlobalNamespace::OculusSpatializerUnity::_get_strOSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_strOSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusSpatializerUnity", "strOSP"));
}
// Autogenerated static field setter
// Set static field: static private System.String strOSP
void GlobalNamespace::OculusSpatializerUnity::_set_strOSP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_strOSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "strOSP", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OculusSpatializerUnity::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean roomVisualizationInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomVisualizationInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raysPerSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raysPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomInterpSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomInterpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxWallDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxWallDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rayCacheSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCacheSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicReflectionsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicReflectionsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject room
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OculusSpatializerUnity::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer[] wallRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Renderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] dims
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_dims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dims"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] coefs
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_coefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_coefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coefs"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] normals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem sys
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::OculusSpatializerUnity::dyn_sys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_sys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sys"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] particles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::OculusSpatializerUnity::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSpatializerUnity..cctor
void GlobalNamespace::OculusSpatializerUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.swapHandedness
::UnityEngine::Vector3 GlobalNamespace::OculusSpatializerUnity::swapHandedness(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::swapHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "swapHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: OculusSpatializerUnity.AudioRaycast
void GlobalNamespace::OculusSpatializerUnity::AudioRaycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "AudioRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity.Start
void GlobalNamespace::OculusSpatializerUnity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OnDestroy
void GlobalNamespace::OculusSpatializerUnity::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.Update
void GlobalNamespace::OculusSpatializerUnity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.inititalizeRoomVisualization
void GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inititalizeRoomVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback* callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::System::IntPtr callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysPerSecond
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RaysPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RaysPerSecond);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomInterpSpeed
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomInterpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InterpSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InterpSpeed);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomMaxWallDistance
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomMaxWallDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MaxWallDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, MaxWallDistance);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysRayCacheSize
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysRayCacheSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RayCacheSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RayCacheSize);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_UpdateRoomModel
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel(float wetLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_UpdateRoomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wetLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wetLevel);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRoomDimensions
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions(::ArrayW<float> roomDimensions, ::ArrayW<float> reflectionsCoefs, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRoomDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomDimensions), ::il2cpp_utils::ExtractType(reflectionsCoefs), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomDimensions, reflectionsCoefs, byref(position));
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRaycastHits
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits(::ArrayW<::UnityEngine::Vector3> points, ::ArrayW<::UnityEngine::Vector3> normals, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, normals, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.Invoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data, callback, object);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.EndInvoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(normal), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPReflectionZone
#include "GlobalNamespace/ONSPReflectionZone.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* GlobalNamespace::ONSPReflectionZone::_get_snapshotList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_snapshotList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>*>("", "ONSPReflectionZone", "snapshotList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
void GlobalNamespace::ONSPReflectionZone::_set_snapshotList(::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_snapshotList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "snapshotList", value));
}
// Autogenerated static field getter
// Get static field: static private ReflectionSnapshot currentSnapshot
::GlobalNamespace::ReflectionSnapshot GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionSnapshot>("", "ONSPReflectionZone", "currentSnapshot"));
}
// Autogenerated static field setter
// Set static field: static private ReflectionSnapshot currentSnapshot
void GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot(::GlobalNamespace::ReflectionSnapshot value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "currentSnapshot", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot mixerSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPReflectionZone::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPReflectionZone..cctor
void GlobalNamespace::ONSPReflectionZone::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPReflectionZone", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.Start
void GlobalNamespace::ONSPReflectionZone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.Update
void GlobalNamespace::ONSPReflectionZone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerEnter
void GlobalNamespace::ONSPReflectionZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerExit
void GlobalNamespace::ONSPReflectionZone::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.CheckForAudioListener
bool GlobalNamespace::ONSPReflectionZone::CheckForAudioListener(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::CheckForAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: ONSPReflectionZone.PushCurrentMixerShapshot
void GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurrentMixerShapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.PopCurrentMixerSnapshot
void GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurrentMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues(ByRef<::GlobalNamespace::ReflectionSnapshot> mss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(mss));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.FaceType
#include "Oculus/Spatializer/Propagation/FaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
void Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_QUADS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_QUADS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "QUADS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
void Oculus::Spatializer::Propagation::FaceType::_set_QUADS(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_QUADS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "QUADS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::FaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
void Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsReadOnlyAttribute
#include "System/Runtime/CompilerServices/IsReadOnlyAttribute___.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cameraInTrackingSpace
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraInTrackingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRComposition::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean usingLastAttachedNodePose
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingLastAttachedNodePose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRPose lastAttachedNodePose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPose& GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttachedNodePose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy_(ByRef<::UnityEngine::GameObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(obj));
}
// Autogenerated method: OVRCompositionUtil.ConvertCameraDevice
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice(::GlobalNamespace::OVRManager_CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ConvertCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::CameraDevice, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRCompositionUtil.ToBoundaryType
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRCompositionUtil::ToBoundaryType(::GlobalNamespace::OVRManager_VirtualGreenScreenType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ToBoundaryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ToBoundaryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(::UnityEngine::Camera* camera, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
::UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(topY), ::il2cpp_utils::ExtractType(bottomY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject foregroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera foregroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backgroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera backgroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_skipFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_skipFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fpsThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRExternalComposition::dyn_fpsThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_fpsThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isFrameSkipped
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_isFrameSkipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_isFrameSkipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFrameSkipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean renderCombinedFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderCombinedFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioListener audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& GlobalNamespace::OVRExternalComposition::dyn_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRMRAudioFilter audioFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMRAudioFilter*& GlobalNamespace::OVRExternalComposition::dyn_audioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMRAudioFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_frameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_frameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastMrcEncodeFrameSyncId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMrcEncodeFrameSyncId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcForegroundRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcForegroundRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double[] cameraPoseTimeArray
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraPoseTimeArray"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] cachedAudioDataArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioDataArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object audioDataLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRExternalComposition::dyn_audioDataLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioDataLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDataLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> cachedAudioData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cachedChannels
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_cachedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera, configuration);
}
// Autogenerated method: OVRExternalComposition.RefreshAudioFilter
void GlobalNamespace::OVRExternalComposition::RefreshAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CastMrcFrame
int GlobalNamespace::OVRExternalComposition::CastMrcFrame(int castTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CastMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(castTextureIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, castTextureIndex);
}
// Autogenerated method: OVRExternalComposition.SetCameraTargetTexture
void GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture(int drawTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraTargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drawTextureIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawTextureIndex);
}
// Autogenerated method: OVRExternalComposition.CleanupAudioFilter
void GlobalNamespace::OVRExternalComposition::CleanupAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CleanupAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(ByRef<::ArrayW<float>> audioData, ByRef<int> audioFrames, ByRef<int> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(audioData), byref(audioFrames), byref(channels));
}
// Autogenerated method: OVRExternalComposition.DisplayRefreshRateChanged
void GlobalNamespace::OVRExternalComposition::DisplayRefreshRateChanged(float fromRefreshRate, float toRefreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::DisplayRefreshRateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayRefreshRateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRefreshRate), ::il2cpp_utils::ExtractType(toRefreshRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromRefreshRate, toRefreshRate);
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRComposition*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean running
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRMRAudioFilter::dyn_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRExternalComposition composition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRExternalComposition*& GlobalNamespace::OVRMRAudioFilter::dyn_composition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_composition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "composition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRExternalComposition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRMRAudioFilter.Start
void GlobalNamespace::OVRMRAudioFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMRAudioFilter.OnAudioFilterRead
void GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::ArrayW<float> GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRBoundary::dyn_cachedGeometryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::dyn_cachedGeometryList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedGeometryList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(::GlobalNamespace::OVRBoundary::Node node, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(::UnityEngine::Vector3 point, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVRBoundary::GetGeometry(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
::UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0x696834
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackingSpace>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingSpace>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <centerEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRCameraRig> UpdatedAnchors
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRCameraRig*>*& GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedAnchors"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRCameraRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePerEyeCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePerEyeCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedUpdateForTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedUpdateForTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableEyeAnchorCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableEyeAnchorCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _skipUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn__skipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__skipUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackingSpaceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingSpaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String centerEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _centerEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _leftEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _rightEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::UpdateAnchors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(::UnityEngine::Transform* root, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ConfigureAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCameraRig*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(isLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(::UnityEngine::Transform* t, ::GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(::GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
::UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(::GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
::GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector4f
::UnityEngine::Vector4 GlobalNamespace::OVRExtensions::FromVector4f(::GlobalNamespace::OVRPlugin::Vector4f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector4f
::GlobalNamespace::OVRPlugin::Vector4f GlobalNamespace::OVRExtensions::ToVector4f(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector4f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
::OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
::UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated method: OVRExtensions.Equals
bool GlobalNamespace::OVRExtensions::Equals(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated method: OVRExtensions.CopyFrom
void GlobalNamespace::OVRExtensions::CopyFrom(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NodeStatePropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(::UnityEngine::XR::XRNode nodeType, ByRef<::UnityEngine::XR::XRNodeState> requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(requestedNodeState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, byref(requestedNodeState));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retQuat));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: OVRPlugin/Posef
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRPose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRPose::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPose.get_identity
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
::GlobalNamespace::OVRPose GlobalNamespace::operator*(const ::GlobalNamespace::OVRPose& lhs, const ::GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRNativeBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numBytes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVRNativeBuffer::dyn_m_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
::System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRNativeBuffer*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowPitchLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowPitchLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowYawLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowYawLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertPitch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertPitch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_PitchDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_PitchDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_YawDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_YawDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ForwardSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForwardSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrafeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrafeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRDebugHeadController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean needsConfigureTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsConfigureTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRDisplay/EyeRenderDesc[] eyeDescs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>& GlobalNamespace::OVRDisplay::dyn_eyeDescs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_eyeDescs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeDescs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recenterRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_recenterRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 recenterRequestedFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequestedFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localTrackingSpaceRecenterCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpaceRecenterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RecenteredPose
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRDisplay::dyn_RecenteredPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_RecenteredPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecenteredPose"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDisplay.get_acceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_latency
::GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
::GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGLTFType
#include "GlobalNamespace/OVRGLTFType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFType NONE
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType NONE
void GlobalNamespace::OVRGLTFType::_set_NONE(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType SCALAR
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_SCALAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_SCALAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "SCALAR"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType SCALAR
void GlobalNamespace::OVRGLTFType::_set_SCALAR(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_SCALAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "SCALAR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC2
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC2"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC2
void GlobalNamespace::OVRGLTFType::_set_VEC2(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC3
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC3"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC3
void GlobalNamespace::OVRGLTFType::_set_VEC3(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType VEC4
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_VEC4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_VEC4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "VEC4"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType VEC4
void GlobalNamespace::OVRGLTFType::_set_VEC4(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_VEC4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "VEC4", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFType MAT4
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFType::_get_MAT4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_get_MAT4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFType>("", "OVRGLTFType", "MAT4"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFType MAT4
void GlobalNamespace::OVRGLTFType::_set_MAT4(::GlobalNamespace::OVRGLTFType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::_set_MAT4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFType", "MAT4", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGLTFComponentType
#include "GlobalNamespace/OVRGLTFComponentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType BYTE
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "BYTE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType BYTE
void GlobalNamespace::OVRGLTFComponentType::_set_BYTE(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_BYTE
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_BYTE"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_BYTE
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_BYTE(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType SHORT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "SHORT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType SHORT
void GlobalNamespace::OVRGLTFComponentType::_set_SHORT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "SHORT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_SHORT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_SHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_SHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_SHORT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_SHORT
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_SHORT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_SHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_SHORT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType UNSIGNED_INT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_UNSIGNED_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "UNSIGNED_INT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType UNSIGNED_INT
void GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_INT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_UNSIGNED_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "UNSIGNED_INT", value));
}
// Autogenerated static field getter
// Get static field: static public OVRGLTFComponentType FLOAT
::GlobalNamespace::OVRGLTFComponentType GlobalNamespace::OVRGLTFComponentType::_get_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_get_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRGLTFComponentType>("", "OVRGLTFComponentType", "FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public OVRGLTFComponentType FLOAT
void GlobalNamespace::OVRGLTFComponentType::_set_FLOAT(::GlobalNamespace::OVRGLTFComponentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::_set_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFComponentType", "FLOAT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFComponentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFComponentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGLTFAccessor
#include "GlobalNamespace/OVRGLTFAccessor.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: OVRBinaryChunk
#include "GlobalNamespace/OVRBinaryChunk.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteStride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_byteStride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_byteStride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteStride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_bufferId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_bufferId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_bufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_bufferLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 additionalOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_additionalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_additionalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "additionalOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFType dataType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFType& GlobalNamespace::OVRGLTFAccessor::dyn_dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGLTFComponentType componentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFComponentType& GlobalNamespace::OVRGLTFAccessor::dyn_componentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_componentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFComponentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 dataCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRGLTFAccessor::dyn_dataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::dyn_dataCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFAccessor.GetDataCount
int GlobalNamespace::OVRGLTFAccessor::GetDataCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetDataCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFAccessor.ToOVRType
::GlobalNamespace::OVRGLTFType GlobalNamespace::OVRGLTFAccessor::ToOVRType(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ToOVRType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFAccessor", "ToOVRType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsInt
void GlobalNamespace::OVRGLTFAccessor::ReadAsInt(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<int>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector2
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector2(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector2>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector3
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector3(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector3>> data, int offset, ::UnityEngine::Vector3 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsVector4
void GlobalNamespace::OVRGLTFAccessor::ReadAsVector4(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector4>> data, int offset, ::UnityEngine::Vector4 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsColor
void GlobalNamespace::OVRGLTFAccessor::ReadAsColor(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Color>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsMatrix4x4
void GlobalNamespace::OVRGLTFAccessor::ReadAsMatrix4x4(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Matrix4x4>> data, int offset, ::UnityEngine::Vector3 conversionScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsMatrix4x4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsMatrix4x4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(conversionScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset, conversionScale);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsKtxTexture
::ArrayW<uint8_t> GlobalNamespace::OVRGLTFAccessor::ReadAsKtxTexture(::GlobalNamespace::OVRBinaryChunk chunk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsKtxTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsKtxTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, chunk);
}
// Autogenerated method: OVRGLTFAccessor.ReadAsBoneWeights
void GlobalNamespace::OVRGLTFAccessor::ReadAsBoneWeights(::GlobalNamespace::OVRBinaryChunk chunk, ByRef<::ArrayW<::UnityEngine::Vector4>> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadAsBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chunk), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chunk, byref(data), offset);
}
// Autogenerated method: OVRGLTFAccessor.GetStrideForType
int GlobalNamespace::OVRGLTFAccessor::GetStrideForType(::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetStrideForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStrideForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.GetMaxValueForType
float GlobalNamespace::OVRGLTFAccessor::GetMaxValueForType(::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::GetMaxValueForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxValueForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadElementAsUint
uint GlobalNamespace::OVRGLTFAccessor::ReadElementAsUint(::ArrayW<uint8_t> data, int index, ::GlobalNamespace::OVRGLTFComponentType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadElementAsUint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElementAsUint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, data, index, type);
}
// Autogenerated method: OVRGLTFAccessor.ReadElementAsFloat
float GlobalNamespace::OVRGLTFAccessor::ReadElementAsFloat(::ArrayW<uint8_t> data, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFAccessor::ReadElementAsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElementAsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, data, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRChunkType
#include "GlobalNamespace/OVRChunkType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRChunkType JSON
::GlobalNamespace::OVRChunkType GlobalNamespace::OVRChunkType::_get_JSON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_get_JSON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRChunkType>("", "OVRChunkType", "JSON"));
}
// Autogenerated static field setter
// Set static field: static public OVRChunkType JSON
void GlobalNamespace::OVRChunkType::_set_JSON(::GlobalNamespace::OVRChunkType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_set_JSON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRChunkType", "JSON", value));
}
// Autogenerated static field getter
// Get static field: static public OVRChunkType BIN
::GlobalNamespace::OVRChunkType GlobalNamespace::OVRChunkType::_get_BIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_get_BIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRChunkType>("", "OVRChunkType", "BIN"));
}
// Autogenerated static field setter
// Set static field: static public OVRChunkType BIN
void GlobalNamespace::OVRChunkType::_set_BIN(::GlobalNamespace::OVRChunkType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::_set_BIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRChunkType", "BIN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRChunkType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRChunkType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTextureFormat
#include "GlobalNamespace/OVRTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat NONE
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat NONE
void GlobalNamespace::OVRTextureFormat::_set_NONE(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat KTX2
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_KTX2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_KTX2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "KTX2"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat KTX2
void GlobalNamespace::OVRTextureFormat::_set_KTX2(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_KTX2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "KTX2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat PNG
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_PNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_PNG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "PNG"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat PNG
void GlobalNamespace::OVRTextureFormat::_set_PNG(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_PNG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "PNG", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTextureFormat JPEG
::GlobalNamespace::OVRTextureFormat GlobalNamespace::OVRTextureFormat::_get_JPEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_get_JPEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTextureFormat>("", "OVRTextureFormat", "JPEG"));
}
// Autogenerated static field setter
// Set static field: static public OVRTextureFormat JPEG
void GlobalNamespace::OVRTextureFormat::_set_JPEG(::GlobalNamespace::OVRTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::_set_JPEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTextureFormat", "JPEG", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGLTFLoader
#include "GlobalNamespace/OVRGLTFLoader.hpp"
// Including type: OVRGLTFLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/OVRGLTFLoader_--c__DisplayClass16_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: OVRGLTFScene
#include "GlobalNamespace/OVRGLTFScene.hpp"
// Including type: OVRChunkType
#include "GlobalNamespace/OVRChunkType.hpp"
// Including type: OVRMeshData
#include "GlobalNamespace/OVRMeshData.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRMaterialData
#include "GlobalNamespace/OVRMaterialData.hpp"
// Including type: OVRTextureData
#include "GlobalNamespace/OVRTextureData.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 GLTFToUnitySpace
::UnityEngine::Vector3 GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnitySpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRGLTFLoader", "GLTFToUnitySpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 GLTFToUnitySpace
void GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnitySpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "GLTFToUnitySpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 GLTFToUnityTangent
::UnityEngine::Vector3 GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnityTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_get_GLTFToUnityTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRGLTFLoader", "GLTFToUnityTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 GLTFToUnityTangent
void GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnityTangent(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::_set_GLTFToUnityTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGLTFLoader", "GLTFToUnityTangent", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_jsonData
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& GlobalNamespace::OVRGLTFLoader::dyn_m_jsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_jsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_jsonData"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_glbStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& GlobalNamespace::OVRGLTFLoader::dyn_m_glbStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_glbStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glbStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBinaryChunk m_binaryChunk
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBinaryChunk& GlobalNamespace::OVRGLTFLoader::dyn_m_binaryChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_binaryChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_binaryChunk"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBinaryChunk*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_Nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::OVRGLTFLoader::dyn_m_Nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_Nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader m_Shader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OVRGLTFLoader::dyn_m_Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::dyn_m_Shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Shader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFLoader..cctor
void GlobalNamespace::OVRGLTFLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRGLTFLoader.LoadGLB
::GlobalNamespace::OVRGLTFScene GlobalNamespace::OVRGLTFLoader::LoadGLB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::LoadGLB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadGLB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRGLTFScene, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFLoader.SetModelShader
void GlobalNamespace::OVRGLTFLoader::SetModelShader(::UnityEngine::Shader* shader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::SetModelShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModelShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shader);
}
// Autogenerated method: OVRGLTFLoader.ValidateGLB
bool GlobalNamespace::OVRGLTFLoader::ValidateGLB(::System::IO::Stream* glbStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ValidateGLB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateGLB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glbStream);
}
// Autogenerated method: OVRGLTFLoader.ReadChunk
::ArrayW<uint8_t> GlobalNamespace::OVRGLTFLoader::ReadChunk(::System::IO::Stream* glbStream, ::GlobalNamespace::OVRChunkType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ReadChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, glbStream, type);
}
// Autogenerated method: OVRGLTFLoader.ValidateChunk
bool GlobalNamespace::OVRGLTFLoader::ValidateChunk(::System::IO::Stream* glbStream, ::GlobalNamespace::OVRChunkType type, ByRef<uint> chunkLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ValidateChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glbStream), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glbStream, type, byref(chunkLength));
}
// Autogenerated method: OVRGLTFLoader.LoadGLTF
void GlobalNamespace::OVRGLTFLoader::LoadGLTF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::LoadGLTF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadGLTF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGLTFLoader.ProcessNode
void GlobalNamespace::OVRGLTFLoader::ProcessNode(::OVRSimpleJSON::JSONNode* node, int nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(nodeId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, nodeId);
}
// Autogenerated method: OVRGLTFLoader.ProcessMesh
::GlobalNamespace::OVRMeshData GlobalNamespace::OVRGLTFLoader::ProcessMesh(::OVRSimpleJSON::JSONNode* meshNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshData, false>(this, ___internal__method, meshNode);
}
// Autogenerated method: OVRGLTFLoader.FlipTraingleIndices
void GlobalNamespace::OVRGLTFLoader::FlipTraingleIndices(ByRef<::ArrayW<int>> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::FlipTraingleIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGLTFLoader", "FlipTraingleIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(indices));
}
// Autogenerated method: OVRGLTFLoader.ProcessSkin
void GlobalNamespace::OVRGLTFLoader::ProcessSkin(::OVRSimpleJSON::JSONNode* skinNode, ::UnityEngine::SkinnedMeshRenderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessSkin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSkin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinNode), ::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinNode, renderer);
}
// Autogenerated method: OVRGLTFLoader.ProcessMaterial
::GlobalNamespace::OVRMaterialData GlobalNamespace::OVRGLTFLoader::ProcessMaterial(int matId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMaterialData, false>(this, ___internal__method, matId);
}
// Autogenerated method: OVRGLTFLoader.ProcessTexture
::GlobalNamespace::OVRTextureData GlobalNamespace::OVRGLTFLoader::ProcessTexture(int textureId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::ProcessTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTextureData, false>(this, ___internal__method, textureId);
}
// Autogenerated method: OVRGLTFLoader.TranscodeTexture
void GlobalNamespace::OVRGLTFLoader::TranscodeTexture(ByRef<::GlobalNamespace::OVRTextureData> textureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::TranscodeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranscodeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(textureData));
}
// Autogenerated method: OVRGLTFLoader.CreateUnityMaterial
::UnityEngine::Material* GlobalNamespace::OVRGLTFLoader::CreateUnityMaterial(::GlobalNamespace::OVRMaterialData matData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::CreateUnityMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnityMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, matData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGLTFLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/OVRGLTFLoader_--c__DisplayClass16_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRGLTFLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGLTFLoader*& GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGLTFLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRMaterialData matData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMaterialData& GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::dyn_matData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::dyn_matData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMaterialData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRGLTFLoader/<>c__DisplayClass16_0.<ProcessMesh>b__0
void GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::$ProcessMesh$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRGLTFLoader::$$c__DisplayClass16_0::<ProcessMesh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessMesh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*>>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHaptics/OVRHapticsOutput m_output
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHaptics::OVRHapticsOutput*& GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_output"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHaptics::OVRHapticsOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_lowLatencyMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lowLatencyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_paddingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_prevSamplesQueued
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueued"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_prevSamplesQueuedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueuedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionMisses
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionMisses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numUnderruns
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numUnderruns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_controller
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRNativeBuffer m_nativeBuffer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRNativeBuffer*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nativeBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRNativeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip m_paddingClip
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingClip"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ReadCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip <Clip>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clip>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_ReadCount
int GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_ReadCount
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_Clip
::GlobalNamespace::OVRHapticsClip* GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHapticsClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_Clip
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip(::GlobalNamespace::OVRHapticsClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Capacity>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capacity>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Samples>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Samples>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHapticsClip.get_Count
int GlobalNamespace::OVRHapticsClip::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Count
void GlobalNamespace::OVRHapticsClip::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Capacity
int GlobalNamespace::OVRHapticsClip::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Capacity
void GlobalNamespace::OVRHapticsClip::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Samples
::ArrayW<uint8_t> GlobalNamespace::OVRHapticsClip::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Samples
void GlobalNamespace::OVRHapticsClip::set_Samples(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.WriteSample
void GlobalNamespace::OVRHapticsClip::WriteSample(uint8_t sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::WriteSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: OVRHapticsClip.Reset
void GlobalNamespace::OVRHapticsClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.InitializeFromAudioFloatTrack
void GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack(::ArrayW<float> sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFromAudioFloatTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceData), ::il2cpp_utils::ExtractType(sourceFrequency), ::il2cpp_utils::ExtractType(sourceChannelCount), ::il2cpp_utils::ExtractType(sourceChannel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceData, sourceFrequency, sourceChannelCount, sourceChannel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X_PITCH
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X_PITCH
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_Y
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_Y
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_HEIGHT
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_HEIGHT
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_ROLL
float GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MAX_ROLL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_ROLL
void GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MAX_ROLL", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRHeadsetEmulator/OpMode opMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHeadsetEmulator::OpMode& GlobalNamespace::OVRHeadsetEmulator::dyn_opMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_opMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHeadsetEmulator::OpMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseOnRelease
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseOnRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseByMiddleMouseButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseByMiddleMouseButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] activateKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] pitchKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager*& GlobalNamespace::OVRHeadsetEmulator::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastFrameEmulationActivated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFrameEmulationActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetTranslation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetTranslation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSentEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSentEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emulatorHasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emulatorHasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CursorLockMode previousCursorLockMode
[[deprecated("Use field access instead!")]] ::UnityEngine::CursorLockMode& GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousCursorLockMode"))->offset;
  return *reinterpret_cast<::UnityEngine::CursorLockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHeadsetEmulator.Start
void GlobalNamespace::OVRHeadsetEmulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.Update
void GlobalNamespace::OVRHeadsetEmulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsEmulationActivated
bool GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmulationActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsTweakingPitch
bool GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTweakingPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator/OpMode
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode Off
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode Off
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode EditorOnly
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "EditorOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode EditorOnly
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "EditorOnly", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "AlwaysOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "AlwaysOn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
// Including type: OVRInput/OVRControllerGamepadMac
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac.hpp"
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_DEADZONE_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_DEADZONE_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* GlobalNamespace::OVRInput::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>*>("", "OVRInput", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
void GlobalNamespace::OVRInput::_set_controllers(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "controllers", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller activeControllerType
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_activeControllerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "activeControllerType"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller activeControllerType
void GlobalNamespace::OVRInput::_set_activeControllerType(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_activeControllerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "activeControllerType", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller connectedControllerTypes
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_connectedControllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_connectedControllerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "connectedControllerTypes"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller connectedControllerTypes
void GlobalNamespace::OVRInput::_set_connectedControllerTypes(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_connectedControllerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "connectedControllerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Step stepType
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRInput::_get_stepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_stepType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRInput", "stepType"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Step stepType
void GlobalNamespace::OVRInput::_set_stepType(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_stepType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "stepType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fixedUpdateCount
int GlobalNamespace::OVRInput::_get_fixedUpdateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_fixedUpdateCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "fixedUpdateCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fixedUpdateCount
void GlobalNamespace::OVRInput::_set_fixedUpdateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_fixedUpdateCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "fixedUpdateCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveController
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveController"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveController
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveController", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveControllerCached
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveControllerCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveControllerCached
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _pluginSupportsActiveControllerMinVersion
::System::Version* GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRInput", "_pluginSupportsActiveControllerMinVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _pluginSupportsActiveControllerMinVersion
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerMinVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HAPTIC_CHANNELS
int GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "NUM_HAPTIC_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HAPTIC_CHANNELS
void GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "NUM_HAPTIC_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/HapticInfo[] hapticInfos
::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> GlobalNamespace::OVRInput::_get_hapticInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_hapticInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*>>("", "OVRInput", "hapticInfos"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/HapticInfo[] hapticInfos
void GlobalNamespace::OVRInput::_set_hapticInfos(::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_hapticInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "hapticInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
float GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
void GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
float GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
void GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_TOUCH_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_TOUCH_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_TOUCH_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_TOUCH_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> GlobalNamespace::OVRInput::_get_openVRControllerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_openVRControllerDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails>>("", "OVRInput", "openVRControllerDetails"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
void GlobalNamespace::OVRInput::_set_openVRControllerDetails(::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_openVRControllerDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "openVRControllerDetails", value));
}
// Autogenerated method: OVRInput.get_pluginSupportsActiveController
bool GlobalNamespace::OVRInput::get_pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::get_pluginSupportsActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "get_pluginSupportsActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput..cctor
void GlobalNamespace::OVRInput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Update
void GlobalNamespace::OVRInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.FixedUpdate
void GlobalNamespace::OVRInput::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetControllerOrientationTracked
bool GlobalNamespace::OVRInput::GetControllerOrientationTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerOrientationValid
bool GlobalNamespace::OVRInput::GetControllerOrientationValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionTracked
bool GlobalNamespace::OVRInput::GetControllerPositionTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionValid
bool GlobalNamespace::OVRInput::GetControllerPositionValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerPosition
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerPosition(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerRotation
::UnityEngine::Quaternion GlobalNamespace::OVRInput::GetLocalControllerRotation(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetDominantHand
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButton
bool GlobalNamespace::OVRInput::GetResolvedButton(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonDown
bool GlobalNamespace::OVRInput::GetResolvedButtonDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonUp
bool GlobalNamespace::OVRInput::GetResolvedButtonUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouch
bool GlobalNamespace::OVRInput::GetResolvedTouch(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchDown
bool GlobalNamespace::OVRInput::GetResolvedTouchDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchUp
bool GlobalNamespace::OVRInput::GetResolvedTouchUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouch
bool GlobalNamespace::OVRInput::GetResolvedNearTouch(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchDown
bool GlobalNamespace::OVRInput::GetResolvedNearTouchDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchUp
bool GlobalNamespace::OVRInput::GetResolvedNearTouchUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis1D
float GlobalNamespace::OVRInput::GetResolvedAxis1D(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis1D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis1D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis2D
::UnityEngine::Vector2 GlobalNamespace::OVRInput::GetResolvedAxis2D(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetConnectedControllers
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.IsControllerConnected
bool GlobalNamespace::OVRInput::IsControllerConnected(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsControllerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsControllerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: OVRInput.GetActiveController
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.StartVibration
void GlobalNamespace::OVRInput::StartVibration(float amplitude, float duration, ::UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(controllerNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, duration, controllerNode);
}
// Autogenerated method: OVRInput.SetOpenVRLocalPose
void GlobalNamespace::OVRInput::SetOpenVRLocalPose(::UnityEngine::Vector3 leftPos, ::UnityEngine::Vector3 rightPos, ::UnityEngine::Quaternion leftRot, ::UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftPos), ::il2cpp_utils::ExtractType(rightPos), ::il2cpp_utils::ExtractType(leftRot), ::il2cpp_utils::ExtractType(rightRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRInput.GetOpenVRStringProperty
::StringW GlobalNamespace::OVRInput::GetOpenVRStringProperty(::OVR::OpenVR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetOpenVRStringProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetOpenVRStringProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, deviceId);
}
// Autogenerated method: OVRInput.UpdateXRControllerNodeIds
void GlobalNamespace::OVRInput::UpdateXRControllerNodeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerNodeIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerNodeIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.UpdateXRControllerHaptics
void GlobalNamespace::OVRInput::UpdateXRControllerHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.InitHapticInfo
void GlobalNamespace::OVRInput::InitHapticInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InitHapticInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "InitHapticInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.PlayHapticImpulse
void GlobalNamespace::OVRInput::PlayHapticImpulse(float amplitude, ::UnityEngine::XR::XRNode deviceNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::PlayHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "PlayHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(deviceNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, deviceNode);
}
// Autogenerated method: OVRInput.IsValidOpenVRDevice
bool GlobalNamespace::OVRInput::IsValidOpenVRDevice(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsValidOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsValidOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: OVRInput.SetControllerVibration
void GlobalNamespace::OVRInput::SetControllerVibration(float frequency, float amplitude, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining(::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.CalculateAbsMax
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateAbsMax(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateAbsMax
float GlobalNamespace::OVRInput::CalculateAbsMax(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateDeadzone
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateDeadzone(::UnityEngine::Vector2 a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.CalculateDeadzone
float GlobalNamespace::OVRInput::CalculateDeadzone(float a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.ShouldResolveController
bool GlobalNamespace::OVRInput::ShouldResolveController(::GlobalNamespace::OVRInput::Controller controllerType, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ShouldResolveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "ShouldResolveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType, controllerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Button None
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button None
void GlobalNamespace::OVRInput::Button::_set_None(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button One
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button One
void GlobalNamespace::OVRInput::Button::_set_One(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Two
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Two
void GlobalNamespace::OVRInput::Button::_set_Two(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Three
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Three
void GlobalNamespace::OVRInput::Button::_set_Three(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Four
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Four
void GlobalNamespace::OVRInput::Button::_set_Four(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Start
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Start
void GlobalNamespace::OVRInput::Button::_set_Start(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Back
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Back
void GlobalNamespace::OVRInput::Button::_set_Back(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryShoulder
void GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryShoulder
void GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadUp
void GlobalNamespace::OVRInput::Button::_set_DpadUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadDown
void GlobalNamespace::OVRInput::Button::_set_DpadDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadLeft
void GlobalNamespace::OVRInput::Button::_set_DpadLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadRight
void GlobalNamespace::OVRInput::Button::_set_DpadRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Up
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Up
void GlobalNamespace::OVRInput::Button::_set_Up(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Down
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Down
void GlobalNamespace::OVRInput::Button::_set_Down(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Left
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Left
void GlobalNamespace::OVRInput::Button::_set_Left(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Right
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Right
void GlobalNamespace::OVRInput::Button::_set_Right(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Any
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Any
void GlobalNamespace::OVRInput::Button::_set_Any(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Button::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton None
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton None
void GlobalNamespace::OVRInput::RawButton::_set_None(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton A
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton A
void GlobalNamespace::OVRInput::RawButton::_set_A(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton B
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton B
void GlobalNamespace::OVRInput::RawButton::_set_B(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton X
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton X
void GlobalNamespace::OVRInput::RawButton::_set_X(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Y
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Y
void GlobalNamespace::OVRInput::RawButton::_set_Y(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Start
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Start
void GlobalNamespace::OVRInput::RawButton::_set_Start(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Back
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Back
void GlobalNamespace::OVRInput::RawButton::_set_Back(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LShoulder
void GlobalNamespace::OVRInput::RawButton::_set_LShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_LTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RShoulder
void GlobalNamespace::OVRInput::RawButton::_set_RShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_RTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadUp
void GlobalNamespace::OVRInput::RawButton::_set_DpadUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadDown
void GlobalNamespace::OVRInput::RawButton::_set_DpadDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadLeft
void GlobalNamespace::OVRInput::RawButton::_set_DpadLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadRight
void GlobalNamespace::OVRInput::RawButton::_set_DpadRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Any
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Any
void GlobalNamespace::OVRInput::RawButton::_set_Any(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch None
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch None
void GlobalNamespace::OVRInput::Touch::_set_None(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch One
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch One
void GlobalNamespace::OVRInput::Touch::_set_One(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Two
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Two
void GlobalNamespace::OVRInput::Touch::_set_Two(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Three
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Three
void GlobalNamespace::OVRInput::Touch::_set_Three(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Four
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Four
void GlobalNamespace::OVRInput::Touch::_set_Four(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Any
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Any
void GlobalNamespace::OVRInput::Touch::_set_Any(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Touch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch None
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch None
void GlobalNamespace::OVRInput::RawTouch::_set_None(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch A
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch A
void GlobalNamespace::OVRInput::RawTouch::_set_A(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch B
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch B
void GlobalNamespace::OVRInput::RawTouch::_set_B(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch X
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch X
void GlobalNamespace::OVRInput::RawTouch::_set_X(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Y
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Y
void GlobalNamespace::OVRInput::RawTouch::_set_Y(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Any
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Any
void GlobalNamespace::OVRInput::RawTouch::_set_Any(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch None
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch None
void GlobalNamespace::OVRInput::NearTouch::_set_None(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch Any
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch Any
void GlobalNamespace::OVRInput::NearTouch::_set_Any(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::NearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch None
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch None
void GlobalNamespace::OVRInput::RawNearTouch::_set_None(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch Any
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch Any
void GlobalNamespace::OVRInput::RawNearTouch::_set_Any(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawNearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D None
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D None
void GlobalNamespace::OVRInput::Axis1D::_set_None(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D Any
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D Any
void GlobalNamespace::OVRInput::Axis1D::_set_Any(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D None
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D None
void GlobalNamespace::OVRInput::RawAxis1D::_set_None(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D Any
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D Any
void GlobalNamespace::OVRInput::RawAxis1D::_set_Any(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D None
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D None
void GlobalNamespace::OVRInput::Axis2D::_set_None(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D Any
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D Any
void GlobalNamespace::OVRInput::Axis2D::_set_Any(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D None
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D None
void GlobalNamespace::OVRInput::RawAxis2D::_set_None(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D Any
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D Any
void GlobalNamespace::OVRInput::RawAxis2D::_set_Any(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton None
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton None
void GlobalNamespace::OVRInput::OpenVRButton::_set_None(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Two
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Two
void GlobalNamespace::OVRInput::OpenVRButton::_set_Two(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Thumbstick
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Thumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Thumbstick
void GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Thumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Grip
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Grip
void GlobalNamespace::OVRInput::OpenVRButton::_set_Grip(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Grip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller None
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller None
void GlobalNamespace::OVRInput::Controller::_set_None(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LTouch
void GlobalNamespace::OVRInput::Controller::_set_LTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RTouch
void GlobalNamespace::OVRInput::Controller::_set_RTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Touch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Touch
void GlobalNamespace::OVRInput::Controller::_set_Touch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Remote
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Remote
void GlobalNamespace::OVRInput::Controller::_set_Remote(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Remote", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Gamepad
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Gamepad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Gamepad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Gamepad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Gamepad
void GlobalNamespace::OVRInput::Controller::_set_Gamepad(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Gamepad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Gamepad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Hands
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Hands
void GlobalNamespace::OVRInput::Controller::_set_Hands(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LHand
void GlobalNamespace::OVRInput::Controller::_set_LHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RHand
void GlobalNamespace::OVRInput::Controller::_set_RHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Active
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Active"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Active
void GlobalNamespace::OVRInput::Controller::_set_Active(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller All
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "All"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller All
void GlobalNamespace::OVRInput::Controller::_set_All(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Controller::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness Unsupported
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness Unsupported
void GlobalNamespace::OVRInput::Handedness::_set_Unsupported(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness LeftHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_LeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_LeftHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "LeftHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness LeftHanded
void GlobalNamespace::OVRInput::Handedness::_set_LeftHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_LeftHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "LeftHanded", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness RightHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_RightHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_RightHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "RightHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness RightHanded
void GlobalNamespace::OVRInput::Handedness::_set_RightHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_RightHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "RightHanded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Handedness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRController
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController Unknown
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController Unknown
void GlobalNamespace::OVRInput::OpenVRController::_set_Unknown(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController OculusTouch
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "OculusTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController OculusTouch
void GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "OculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController ViveController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_ViveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_ViveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "ViveController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController ViveController
void GlobalNamespace::OVRInput::OpenVRController::_set_ViveController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_ViveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "ViveController", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController WindowsMRController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "WindowsMRController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController WindowsMRController
void GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "WindowsMRController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRController::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
