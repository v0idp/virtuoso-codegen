// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlatformMenu/eBackButtonAction
#include "GlobalNamespace/OVRPlatformMenu_eBackButtonAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eBackButtonAction NONE
::GlobalNamespace::OVRPlatformMenu::eBackButtonAction GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eBackButtonAction>("", "OVRPlatformMenu/eBackButtonAction", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eBackButtonAction NONE
void GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_NONE(::GlobalNamespace::OVRPlatformMenu::eBackButtonAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eBackButtonAction", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlatformMenu/eBackButtonAction SHORT_PRESS
::GlobalNamespace::OVRPlatformMenu::eBackButtonAction GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_SHORT_PRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_get_SHORT_PRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlatformMenu::eBackButtonAction>("", "OVRPlatformMenu/eBackButtonAction", "SHORT_PRESS"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlatformMenu/eBackButtonAction SHORT_PRESS
void GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_SHORT_PRESS(::GlobalNamespace::OVRPlatformMenu::eBackButtonAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::_set_SHORT_PRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlatformMenu/eBackButtonAction", "SHORT_PRESS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlatformMenu::eBackButtonAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlatformMenu::eBackButtonAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/GUID
#include "GlobalNamespace/OVRPlugin_GUID.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/CameraStatus
#include "GlobalNamespace/OVRPlugin_CameraStatus.hpp"
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Tracker
#include "GlobalNamespace/OVRPlugin_Tracker.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/RecenterFlags
#include "GlobalNamespace/OVRPlugin_RecenterFlags.hpp"
// Including type: OVRPlugin/BatteryStatus
#include "GlobalNamespace/OVRPlugin_BatteryStatus.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/PlatformUI
#include "GlobalNamespace/OVRPlugin_PlatformUI.hpp"
// Including type: OVRPlugin/SystemRegion
#include "GlobalNamespace/OVRPlugin_SystemRegion.hpp"
// Including type: OVRPlugin/SystemHeadset
#include "GlobalNamespace/OVRPlugin_SystemHeadset.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRPlugin/CameraDeviceDepthSensingMode
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthSensingMode.hpp"
// Including type: OVRPlugin/CameraDeviceDepthQuality
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthQuality.hpp"
// Including type: OVRPlugin/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRPlugin/TiledMultiResLevel
#include "GlobalNamespace/OVRPlugin_TiledMultiResLevel.hpp"
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
// Including type: OVRPlugin/CameraDeviceIntrinsicsParameters
#include "GlobalNamespace/OVRPlugin_CameraDeviceIntrinsicsParameters.hpp"
// Including type: OVRPlugin/OverlayFlag
#include "GlobalNamespace/OVRPlugin_OverlayFlag.hpp"
// Including type: OVRPlugin/Vector2f
#include "GlobalNamespace/OVRPlugin_Vector2f.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
// Including type: OVRPlugin/Vector4s
#include "GlobalNamespace/OVRPlugin_Vector4s.hpp"
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
// Including type: OVRPlugin/ControllerState4
#include "GlobalNamespace/OVRPlugin_ControllerState4.hpp"
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
// Including type: OVRPlugin/ControllerState
#include "GlobalNamespace/OVRPlugin_ControllerState.hpp"
// Including type: OVRPlugin/HapticsBuffer
#include "GlobalNamespace/OVRPlugin_HapticsBuffer.hpp"
// Including type: OVRPlugin/HapticsState
#include "GlobalNamespace/OVRPlugin_HapticsState.hpp"
// Including type: OVRPlugin/HapticsDesc
#include "GlobalNamespace/OVRPlugin_HapticsDesc.hpp"
// Including type: OVRPlugin/AppPerfFrameStats
#include "GlobalNamespace/OVRPlugin_AppPerfFrameStats.hpp"
// Including type: OVRPlugin/AppPerfStats
#include "GlobalNamespace/OVRPlugin_AppPerfStats.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/Sizef
#include "GlobalNamespace/OVRPlugin_Sizef.hpp"
// Including type: OVRPlugin/Vector2i
#include "GlobalNamespace/OVRPlugin_Vector2i.hpp"
// Including type: OVRPlugin/Recti
#include "GlobalNamespace/OVRPlugin_Recti.hpp"
// Including type: OVRPlugin/Rectf
#include "GlobalNamespace/OVRPlugin_Rectf.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace/OVRPlugin_Frustumf2.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/BoundaryTestResult
#include "GlobalNamespace/OVRPlugin_BoundaryTestResult.hpp"
// Including type: OVRPlugin/BoundaryGeometry
#include "GlobalNamespace/OVRPlugin_BoundaryGeometry.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Fovf
#include "GlobalNamespace/OVRPlugin_Fovf.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/LayerFlags
#include "GlobalNamespace/OVRPlugin_LayerFlags.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/BlendFactor
#include "GlobalNamespace/OVRPlugin_BlendFactor.hpp"
// Including type: OVRPlugin/LayerSubmit
#include "GlobalNamespace/OVRPlugin_LayerSubmit.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/HandFinger
#include "GlobalNamespace/OVRPlugin_HandFinger.hpp"
// Including type: OVRPlugin/HandState
#include "GlobalNamespace/OVRPlugin_HandState.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/SkeletonConstants
#include "GlobalNamespace/OVRPlugin_SkeletonConstants.hpp"
// Including type: OVRPlugin/Skeleton2
#include "GlobalNamespace/OVRPlugin_Skeleton2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRPlugin/MeshConstants
#include "GlobalNamespace/OVRPlugin_MeshConstants.hpp"
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
// Including type: OVRPlugin/EventDataBuffer
#include "GlobalNamespace/OVRPlugin_EventDataBuffer.hpp"
// Including type: OVRPlugin/InsightPassthroughColorMapType
#include "GlobalNamespace/OVRPlugin_InsightPassthroughColorMapType.hpp"
// Including type: OVRPlugin/InsightPassthroughStyleFlags
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyleFlags.hpp"
// Including type: OVRPlugin/InsightPassthroughStyle
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyle.hpp"
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/Ktx
#include "GlobalNamespace/OVRPlugin_Ktx.hpp"
// Including type: OVRPlugin/OVRP_0_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_0.hpp"
// Including type: OVRPlugin/OVRP_0_1_1
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_1.hpp"
// Including type: OVRPlugin/OVRP_0_1_2
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_2.hpp"
// Including type: OVRPlugin/OVRP_0_1_3
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_3.hpp"
// Including type: OVRPlugin/OVRP_0_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_5_0.hpp"
// Including type: OVRPlugin/OVRP_1_0_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_0_0.hpp"
// Including type: OVRPlugin/OVRP_1_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_1_0.hpp"
// Including type: OVRPlugin/OVRP_1_2_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_2_0.hpp"
// Including type: OVRPlugin/OVRP_1_3_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_3_0.hpp"
// Including type: OVRPlugin/OVRP_1_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_5_0.hpp"
// Including type: OVRPlugin/OVRP_1_6_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_6_0.hpp"
// Including type: OVRPlugin/OVRP_1_7_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_7_0.hpp"
// Including type: OVRPlugin/OVRP_1_8_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_8_0.hpp"
// Including type: OVRPlugin/OVRP_1_9_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_9_0.hpp"
// Including type: OVRPlugin/OVRP_1_10_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_10_0.hpp"
// Including type: OVRPlugin/OVRP_1_11_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_11_0.hpp"
// Including type: OVRPlugin/OVRP_1_12_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_12_0.hpp"
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_15_0.hpp"
// Including type: OVRPlugin/OVRP_1_16_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_16_0.hpp"
// Including type: OVRPlugin/OVRP_1_17_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_17_0.hpp"
// Including type: OVRPlugin/OVRP_1_18_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_18_0.hpp"
// Including type: OVRPlugin/OVRP_1_19_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_19_0.hpp"
// Including type: OVRPlugin/OVRP_1_21_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_21_0.hpp"
// Including type: OVRPlugin/OVRP_1_28_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_28_0.hpp"
// Including type: OVRPlugin/OVRP_1_29_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_29_0.hpp"
// Including type: OVRPlugin/OVRP_1_30_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_30_0.hpp"
// Including type: OVRPlugin/OVRP_1_31_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_31_0.hpp"
// Including type: OVRPlugin/OVRP_1_32_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_32_0.hpp"
// Including type: OVRPlugin/OVRP_1_34_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_34_0.hpp"
// Including type: OVRPlugin/OVRP_1_35_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_35_0.hpp"
// Including type: OVRPlugin/OVRP_1_36_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_36_0.hpp"
// Including type: OVRPlugin/OVRP_1_37_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_37_0.hpp"
// Including type: OVRPlugin/OVRP_1_38_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_38_0.hpp"
// Including type: OVRPlugin/OVRP_1_39_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_39_0.hpp"
// Including type: OVRPlugin/OVRP_1_40_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_40_0.hpp"
// Including type: OVRPlugin/OVRP_1_41_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_41_0.hpp"
// Including type: OVRPlugin/OVRP_1_42_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_42_0.hpp"
// Including type: OVRPlugin/OVRP_1_43_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_43_0.hpp"
// Including type: OVRPlugin/OVRP_1_44_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_44_0.hpp"
// Including type: OVRPlugin/OVRP_1_45_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_45_0.hpp"
// Including type: OVRPlugin/OVRP_1_46_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_46_0.hpp"
// Including type: OVRPlugin/OVRP_1_47_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_47_0.hpp"
// Including type: OVRPlugin/OVRP_1_48_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_48_0.hpp"
// Including type: OVRPlugin/OVRP_1_49_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_49_0.hpp"
// Including type: OVRPlugin/OVRP_1_50_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_50_0.hpp"
// Including type: OVRPlugin/OVRP_1_51_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_51_0.hpp"
// Including type: OVRPlugin/OVRP_1_52_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_52_0.hpp"
// Including type: OVRPlugin/OVRP_1_53_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_53_0.hpp"
// Including type: OVRPlugin/OVRP_1_54_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_54_0.hpp"
// Including type: OVRPlugin/OVRP_1_55_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_0.hpp"
// Including type: OVRPlugin/OVRP_1_55_1
#include "GlobalNamespace/OVRPlugin_OVRP_1_55_1.hpp"
// Including type: OVRPlugin/OVRP_1_56_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_56_0.hpp"
// Including type: OVRPlugin/OVRP_1_57_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_57_0.hpp"
// Including type: OVRPlugin/OVRP_1_58_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_58_0.hpp"
// Including type: OVRPlugin/OVRP_1_59_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_59_0.hpp"
// Including type: OVRPlugin/OVRP_1_60_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_60_0.hpp"
// Including type: OVRPlugin/OVRP_1_61_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_61_0.hpp"
// Including type: OVRPlugin/OVRP_1_62_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_62_0.hpp"
// Including type: OVRPlugin/OVRP_1_63_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_63_0.hpp"
// Including type: OVRPlugin/OVRP_1_64_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_64_0.hpp"
// Including type: OVRPlugin/OVRP_1_65_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_65_0.hpp"
// Including type: OVRPlugin/OVRP_1_66_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_66_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean isSupportedPlatform
bool GlobalNamespace::OVRPlugin::_get_isSupportedPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_isSupportedPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "isSupportedPlatform"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean isSupportedPlatform
void GlobalNamespace::OVRPlugin::_set_isSupportedPlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_isSupportedPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "isSupportedPlatform", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Version wrapperVersion
::System::Version* GlobalNamespace::OVRPlugin::_get_wrapperVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_wrapperVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "wrapperVersion"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version wrapperVersion
void GlobalNamespace::OVRPlugin::_set_wrapperVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_wrapperVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "wrapperVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _version
::System::Version* GlobalNamespace::OVRPlugin::_get__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_version"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _version
void GlobalNamespace::OVRPlugin::_set__version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_version", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _nativeSDKVersion
::System::Version* GlobalNamespace::OVRPlugin::_get__nativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeSDKVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_nativeSDKVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _nativeSDKVersion
void GlobalNamespace::OVRPlugin::_set__nativeSDKVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeSDKVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeSDKVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 OverlayShapeFlagShift
int GlobalNamespace::OVRPlugin::_get_OverlayShapeFlagShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_OverlayShapeFlagShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "OverlayShapeFlagShift"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 OverlayShapeFlagShift
void GlobalNamespace::OVRPlugin::_set_OverlayShapeFlagShift(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_OverlayShapeFlagShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "OverlayShapeFlagShift", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AppPerfFrameStatsMaxCount
int GlobalNamespace::OVRPlugin::_get_AppPerfFrameStatsMaxCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_AppPerfFrameStatsMaxCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "AppPerfFrameStatsMaxCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AppPerfFrameStatsMaxCount
void GlobalNamespace::OVRPlugin::_set_AppPerfFrameStatsMaxCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_AppPerfFrameStatsMaxCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "AppPerfFrameStatsMaxCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 EventDataBufferSize
int GlobalNamespace::OVRPlugin::_get_EventDataBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_EventDataBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin", "EventDataBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 EventDataBufferSize
void GlobalNamespace::OVRPlugin::_set_EventDataBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_EventDataBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "EventDataBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<OVRPlugin/XrApi> _nativeXrApi
::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi> GlobalNamespace::OVRPlugin::_get__nativeXrApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeXrApi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi>>("", "OVRPlugin", "_nativeXrApi"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<OVRPlugin/XrApi> _nativeXrApi
void GlobalNamespace::OVRPlugin::_set__nativeXrApi(::System::Nullable_1<::GlobalNamespace::OVRPlugin::XrApi> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeXrApi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeXrApi", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/GUID _nativeAudioOutGuid
::GlobalNamespace::OVRPlugin::GUID* GlobalNamespace::OVRPlugin::_get__nativeAudioOutGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeAudioOutGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::GUID*>("", "OVRPlugin", "_nativeAudioOutGuid"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/GUID _nativeAudioOutGuid
void GlobalNamespace::OVRPlugin::_set__nativeAudioOutGuid(::GlobalNamespace::OVRPlugin::GUID* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeAudioOutGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeAudioOutGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Guid _cachedAudioOutGuid
::System::Guid GlobalNamespace::OVRPlugin::_get__cachedAudioOutGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioOutGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("", "OVRPlugin", "_cachedAudioOutGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.Guid _cachedAudioOutGuid
void GlobalNamespace::OVRPlugin::_set__cachedAudioOutGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioOutGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioOutGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _cachedAudioOutString
::StringW GlobalNamespace::OVRPlugin::_get__cachedAudioOutString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioOutString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "_cachedAudioOutString"));
}
// Autogenerated static field setter
// Set static field: static private System.String _cachedAudioOutString
void GlobalNamespace::OVRPlugin::_set__cachedAudioOutString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioOutString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioOutString", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/GUID _nativeAudioInGuid
::GlobalNamespace::OVRPlugin::GUID* GlobalNamespace::OVRPlugin::_get__nativeAudioInGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeAudioInGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::GUID*>("", "OVRPlugin", "_nativeAudioInGuid"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/GUID _nativeAudioInGuid
void GlobalNamespace::OVRPlugin::_set__nativeAudioInGuid(::GlobalNamespace::OVRPlugin::GUID* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeAudioInGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeAudioInGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Guid _cachedAudioInGuid
::System::Guid GlobalNamespace::OVRPlugin::_get__cachedAudioInGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioInGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("", "OVRPlugin", "_cachedAudioInGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.Guid _cachedAudioInGuid
void GlobalNamespace::OVRPlugin::_set__cachedAudioInGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioInGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioInGuid", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _cachedAudioInString
::StringW GlobalNamespace::OVRPlugin::_get__cachedAudioInString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedAudioInString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "_cachedAudioInString"));
}
// Autogenerated static field setter
// Set static field: static private System.String _cachedAudioInString
void GlobalNamespace::OVRPlugin::_set__cachedAudioInString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedAudioInString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedAudioInString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean perfStatWarningPrinted
bool GlobalNamespace::OVRPlugin::_get_perfStatWarningPrinted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_perfStatWarningPrinted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "perfStatWarningPrinted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean perfStatWarningPrinted
void GlobalNamespace::OVRPlugin::_set_perfStatWarningPrinted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_perfStatWarningPrinted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "perfStatWarningPrinted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean resetPerfStatWarningPrinted
bool GlobalNamespace::OVRPlugin::_get_resetPerfStatWarningPrinted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_resetPerfStatWarningPrinted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRPlugin", "resetPerfStatWarningPrinted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean resetPerfStatWarningPrinted
void GlobalNamespace::OVRPlugin::_set_resetPerfStatWarningPrinted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_resetPerfStatWarningPrinted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "resetPerfStatWarningPrinted", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer _nativeSystemDisplayFrequenciesAvailable
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRPlugin::_get__nativeSystemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__nativeSystemDisplayFrequenciesAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRPlugin", "_nativeSystemDisplayFrequenciesAvailable"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer _nativeSystemDisplayFrequenciesAvailable
void GlobalNamespace::OVRPlugin::_set__nativeSystemDisplayFrequenciesAvailable(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__nativeSystemDisplayFrequenciesAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_nativeSystemDisplayFrequenciesAvailable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] _cachedSystemDisplayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRPlugin::_get__cachedSystemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__cachedSystemDisplayFrequenciesAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRPlugin", "_cachedSystemDisplayFrequenciesAvailable"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] _cachedSystemDisplayFrequenciesAvailable
void GlobalNamespace::OVRPlugin::_set__cachedSystemDisplayFrequenciesAvailable(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__cachedSystemDisplayFrequenciesAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_cachedSystemDisplayFrequenciesAvailable", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/HandStateInternal cachedHandState
::GlobalNamespace::OVRPlugin::HandStateInternal GlobalNamespace::OVRPlugin::_get_cachedHandState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedHandState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStateInternal>("", "OVRPlugin", "cachedHandState"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/HandStateInternal cachedHandState
void GlobalNamespace::OVRPlugin::_set_cachedHandState(::GlobalNamespace::OVRPlugin::HandStateInternal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedHandState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedHandState", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Skeleton cachedSkeleton
::GlobalNamespace::OVRPlugin::Skeleton GlobalNamespace::OVRPlugin::_get_cachedSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton>("", "OVRPlugin", "cachedSkeleton"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Skeleton cachedSkeleton
void GlobalNamespace::OVRPlugin::_set_cachedSkeleton(::GlobalNamespace::OVRPlugin::Skeleton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Skeleton2Internal cachedSkeleton2
::GlobalNamespace::OVRPlugin::Skeleton2Internal GlobalNamespace::OVRPlugin::_get_cachedSkeleton2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_cachedSkeleton2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Skeleton2Internal>("", "OVRPlugin", "cachedSkeleton2"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Skeleton2Internal cachedSkeleton2
void GlobalNamespace::OVRPlugin::_set_cachedSkeleton2(::GlobalNamespace::OVRPlugin::Skeleton2Internal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_cachedSkeleton2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "cachedSkeleton2", value));
}
// Autogenerated static field getter
// Get static field: static private System.String pluginName
::StringW GlobalNamespace::OVRPlugin::_get_pluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get_pluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRPlugin", "pluginName"));
}
// Autogenerated static field setter
// Set static field: static private System.String pluginName
void GlobalNamespace::OVRPlugin::_set_pluginName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set_pluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "pluginName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _versionZero
::System::Version* GlobalNamespace::OVRPlugin::_get__versionZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_get__versionZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin", "_versionZero"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _versionZero
void GlobalNamespace::OVRPlugin::_set__versionZero(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::_set__versionZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin", "_versionZero", value));
}
// Autogenerated method: OVRPlugin.get_version
::System::Version* GlobalNamespace::OVRPlugin::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_nativeSDKVersion
::System::Version* GlobalNamespace::OVRPlugin::get_nativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_nativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_nativeSDKVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_initialized
bool GlobalNamespace::OVRPlugin::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_nativeXrApi
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::get_nativeXrApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_nativeXrApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_nativeXrApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::XrApi, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_chromatic
bool GlobalNamespace::OVRPlugin::get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_chromatic
void GlobalNamespace::OVRPlugin::set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_chromatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_chromatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_monoscopic
bool GlobalNamespace::OVRPlugin::get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_monoscopic
void GlobalNamespace::OVRPlugin::set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_monoscopic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_monoscopic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_rotation
bool GlobalNamespace::OVRPlugin::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_rotation
void GlobalNamespace::OVRPlugin::set_rotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_position
bool GlobalNamespace::OVRPlugin::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_position
void GlobalNamespace::OVRPlugin::set_position(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_useIPDInPositionTracking
bool GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_useIPDInPositionTracking
void GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_useIPDInPositionTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_positionSupported
bool GlobalNamespace::OVRPlugin::get_positionSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_positionSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_positionSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_positionTracked
bool GlobalNamespace::OVRPlugin::get_positionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_positionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_positionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_powerSaving
bool GlobalNamespace::OVRPlugin::get_powerSaving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_powerSaving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_powerSaving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hmdPresent
bool GlobalNamespace::OVRPlugin::get_hmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_userPresent
bool GlobalNamespace::OVRPlugin::get_userPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_userPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_userPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_headphonesPresent
bool GlobalNamespace::OVRPlugin::get_headphonesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_headphonesPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_headphonesPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_recommendedMSAALevel
int GlobalNamespace::OVRPlugin::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemRegion
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::get_systemRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemRegion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_audioOutId
::StringW GlobalNamespace::OVRPlugin::get_audioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_audioOutId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_audioOutId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_audioInId
::StringW GlobalNamespace::OVRPlugin::get_audioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_audioInId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_audioInId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hasVrFocus
bool GlobalNamespace::OVRPlugin::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_hasInputFocus
bool GlobalNamespace::OVRPlugin::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_shouldQuit
bool GlobalNamespace::OVRPlugin::get_shouldQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_shouldQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_shouldQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_shouldRecenter
bool GlobalNamespace::OVRPlugin::get_shouldRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_shouldRecenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_shouldRecenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_productName
::StringW GlobalNamespace::OVRPlugin::get_productName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_productName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_productName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_latency
::StringW GlobalNamespace::OVRPlugin::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_eyeDepth
float GlobalNamespace::OVRPlugin::get_eyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeDepth
void GlobalNamespace::OVRPlugin::set_eyeDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_eyeHeight
float GlobalNamespace::OVRPlugin::get_eyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeHeight
void GlobalNamespace::OVRPlugin::set_eyeHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_batteryLevel
float GlobalNamespace::OVRPlugin::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_batteryTemperature
float GlobalNamespace::OVRPlugin::get_batteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_cpuLevel
int GlobalNamespace::OVRPlugin::get_cpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_cpuLevel
void GlobalNamespace::OVRPlugin::set_cpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_cpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_gpuLevel
int GlobalNamespace::OVRPlugin::get_gpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_gpuLevel
void GlobalNamespace::OVRPlugin::set_gpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_gpuLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_vsyncCount
int GlobalNamespace::OVRPlugin::get_vsyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_vsyncCount
void GlobalNamespace::OVRPlugin::set_vsyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_vsyncCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_systemVolume
float GlobalNamespace::OVRPlugin::get_systemVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_ipd
float GlobalNamespace::OVRPlugin::get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_ipd
void GlobalNamespace::OVRPlugin::set_ipd(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_ipd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_ipd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_occlusionMesh
bool GlobalNamespace::OVRPlugin::get_occlusionMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_occlusionMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_occlusionMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_occlusionMesh
void GlobalNamespace::OVRPlugin::set_occlusionMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_occlusionMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_occlusionMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_batteryStatus
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BatteryStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_fixedFoveatedRenderingLevel
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_useDynamicFixedFoveatedRendering
bool GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_useDynamicFixedFoveatedRendering
void GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_useDynamicFixedFoveatedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_tiledMultiResSupported
bool GlobalNamespace::OVRPlugin::get_tiledMultiResSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_tiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_tiledMultiResLevel
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::get_tiledMultiResLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TiledMultiResLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_tiledMultiResLevel
void GlobalNamespace::OVRPlugin::set_tiledMultiResLevel(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_gpuUtilSupported
bool GlobalNamespace::OVRPlugin::get_gpuUtilSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuUtilSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuUtilSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_gpuUtilLevel
float GlobalNamespace::OVRPlugin::get_gpuUtilLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_gpuUtilLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_gpuUtilLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemDisplayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemDisplayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_systemDisplayFrequency
float GlobalNamespace::OVRPlugin::get_systemDisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_systemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_systemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_systemDisplayFrequency
void GlobalNamespace::OVRPlugin::set_systemDisplayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_systemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_systemDisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_eyeFovPremultipliedAlphaModeEnabled
bool GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.set_eyeFovPremultipliedAlphaModeEnabled
void GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "set_eyeFovPremultipliedAlphaModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.get_AsymmetricFovEnabled
bool GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_AsymmetricFovEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.get_EyeTextureArrayEnabled
bool GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "get_EyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin..cctor
void GlobalNamespace::OVRPlugin::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetEyeFrustum
::GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::GetEyeFrustum(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin.GetEyeTextureSize
::GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::GetEyeTextureSize(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Sizei, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin.GetTrackerPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackerPose(::GlobalNamespace::OVRPlugin::Tracker trackerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackerId);
}
// Autogenerated method: OVRPlugin.GetTrackerFrustum
::GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::GetTrackerFrustum(::GlobalNamespace::OVRPlugin::Tracker trackerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackerFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackerFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackerId);
}
// Autogenerated method: OVRPlugin.ShowUI
bool GlobalNamespace::OVRPlugin::ShowUI(::GlobalNamespace::OVRPlugin::PlatformUI ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShowUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShowUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ui);
}
// Autogenerated method: OVRPlugin.EnqueueSubmitLayer
bool GlobalNamespace::OVRPlugin::EnqueueSubmitLayer(bool onTop, bool headLocked, bool noDepthBufferTesting, ::System::IntPtr leftTexture, ::System::IntPtr rightTexture, int layerId, int frameIndex, ::GlobalNamespace::OVRPlugin::Posef pose, ::GlobalNamespace::OVRPlugin::Vector3f scale, int layerIndex, ::GlobalNamespace::OVRPlugin::OverlayShape shape, bool overrideTextureRectMatrix, ::GlobalNamespace::OVRPlugin::TextureRectMatrixf textureRectMatrix, bool overridePerLayerColorScaleAndOffset, ::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool expensiveSuperSample, bool hidden) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueSubmitLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueSubmitLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onTop), ::il2cpp_utils::ExtractType(headLocked), ::il2cpp_utils::ExtractType(noDepthBufferTesting), ::il2cpp_utils::ExtractType(leftTexture), ::il2cpp_utils::ExtractType(rightTexture), ::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(overrideTextureRectMatrix), ::il2cpp_utils::ExtractType(textureRectMatrix), ::il2cpp_utils::ExtractType(overridePerLayerColorScaleAndOffset), ::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(expensiveSuperSample), ::il2cpp_utils::ExtractType(hidden)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onTop, headLocked, noDepthBufferTesting, leftTexture, rightTexture, layerId, frameIndex, pose, scale, layerIndex, shape, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset, expensiveSuperSample, hidden);
}
// Autogenerated method: OVRPlugin.CalculateLayerDesc
::GlobalNamespace::OVRPlugin::LayerDesc GlobalNamespace::OVRPlugin::CalculateLayerDesc(::GlobalNamespace::OVRPlugin::OverlayShape shape, ::GlobalNamespace::OVRPlugin::LayerLayout layout, ::GlobalNamespace::OVRPlugin::Sizei textureSize, int mipLevels, int sampleCount, ::GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CalculateLayerDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CalculateLayerDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape), ::il2cpp_utils::ExtractType(layout), ::il2cpp_utils::ExtractType(textureSize), ::il2cpp_utils::ExtractType(mipLevels), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(layerFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::LayerDesc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags);
}
// Autogenerated method: OVRPlugin.EnqueueSetupLayer
bool GlobalNamespace::OVRPlugin::EnqueueSetupLayer(::GlobalNamespace::OVRPlugin::LayerDesc desc, int compositionDepth, ::System::IntPtr layerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueSetupLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueSetupLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desc), ::il2cpp_utils::ExtractType(compositionDepth), ::il2cpp_utils::ExtractType(layerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, desc, compositionDepth, layerID);
}
// Autogenerated method: OVRPlugin.EnqueueDestroyLayer
bool GlobalNamespace::OVRPlugin::EnqueueDestroyLayer(::System::IntPtr layerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EnqueueDestroyLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "EnqueueDestroyLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerID);
}
// Autogenerated method: OVRPlugin.GetLayerTexture
::System::IntPtr GlobalNamespace::OVRPlugin::GetLayerTexture(int layerId, int stage, ::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(stage), ::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, stage, eyeId);
}
// Autogenerated method: OVRPlugin.GetLayerTextureStageCount
int GlobalNamespace::OVRPlugin::GetLayerTextureStageCount(int layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerTextureStageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerTextureStageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin.GetLayerAndroidSurfaceObject
::System::IntPtr GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject(int layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin.UpdateNodePhysicsPoses
bool GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses(int frameIndex, double predictionSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateNodePhysicsPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIndex), ::il2cpp_utils::ExtractType(predictionSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameIndex, predictionSeconds);
}
// Autogenerated method: OVRPlugin.GetNodePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetNodePose(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeVelocity
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeVelocity(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAngularVelocity
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularVelocity(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAcceleration
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodeAngularAcceleration
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetNodePresent
bool GlobalNamespace::OVRPlugin::GetNodePresent(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodeOrientationTracked
bool GlobalNamespace::OVRPlugin::GetNodeOrientationTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodeOrientationValid
bool GlobalNamespace::OVRPlugin::GetNodeOrientationValid(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePositionTracked
bool GlobalNamespace::OVRPlugin::GetNodePositionTracked(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePositionValid
bool GlobalNamespace::OVRPlugin::GetNodePositionValid(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin.GetNodePoseStateRaw
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateRaw(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::Step stepId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodePoseStateRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodePoseStateRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(stepId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, stepId);
}
// Autogenerated method: OVRPlugin.GetCurrentTrackingTransformPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetTrackingTransformRawPose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetTrackingTransformRelativePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose(::GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingOrigin);
}
// Autogenerated method: OVRPlugin.GetControllerState
::GlobalNamespace::OVRPlugin::ControllerState GlobalNamespace::OVRPlugin::GetControllerState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState2
::GlobalNamespace::OVRPlugin::ControllerState2 GlobalNamespace::OVRPlugin::GetControllerState2(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerState4
::GlobalNamespace::OVRPlugin::ControllerState4 GlobalNamespace::OVRPlugin::GetControllerState4(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerState4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerState4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.SetControllerVibration
bool GlobalNamespace::OVRPlugin::SetControllerVibration(uint controllerMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin.GetControllerHapticsDesc
::GlobalNamespace::OVRPlugin::HapticsDesc GlobalNamespace::OVRPlugin::GetControllerHapticsDesc(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerHapticsDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerHapticsDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsDesc, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.GetControllerHapticsState
::GlobalNamespace::OVRPlugin::HapticsState GlobalNamespace::OVRPlugin::GetControllerHapticsState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetControllerHapticsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetControllerHapticsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::HapticsState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin.SetControllerHaptics
bool GlobalNamespace::OVRPlugin::SetControllerHaptics(uint controllerMask, ::GlobalNamespace::OVRPlugin::HapticsBuffer hapticsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(hapticsBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, hapticsBuffer);
}
// Autogenerated method: OVRPlugin.GetEyeRecommendedResolutionScale
float GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetAppCpuStartToGpuEndTime
float GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetBoundaryConfigured
bool GlobalNamespace::OVRPlugin::GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.TestBoundaryNode
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryNode(::GlobalNamespace::OVRPlugin::Node nodeId, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TestBoundaryNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TestBoundaryNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, boundaryType);
}
// Autogenerated method: OVRPlugin.TestBoundaryPoint
::GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryPoint(::GlobalNamespace::OVRPlugin::Vector3f point, ::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TestBoundaryPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "TestBoundaryPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryGeometry
::GlobalNamespace::OVRPlugin::BoundaryGeometry GlobalNamespace::OVRPlugin::GetBoundaryGeometry(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::BoundaryGeometry, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryGeometry2
bool GlobalNamespace::OVRPlugin::GetBoundaryGeometry2(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType, ::System::IntPtr points, ByRef<int> pointsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryGeometry2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryGeometry2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(pointsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, points, byref(pointsCount));
}
// Autogenerated method: OVRPlugin.GetAppPerfStats
::GlobalNamespace::OVRPlugin::AppPerfStats GlobalNamespace::OVRPlugin::GetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::AppPerfStats, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ResetAppPerfStats
bool GlobalNamespace::OVRPlugin::ResetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ResetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetAppFramerate
float GlobalNamespace::OVRPlugin::GetAppFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAppFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAppFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetHandNodePoseStateLatency
bool GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency(double latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latencyInSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, latencyInSeconds);
}
// Autogenerated method: OVRPlugin.GetHandNodePoseStateLatency
double GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetDesiredEyeTextureFormat
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::EyeTextureFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetDesiredEyeTextureFormat
bool GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.InitializeMixedReality
bool GlobalNamespace::OVRPlugin::InitializeMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InitializeMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "InitializeMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ShutdownMixedReality
bool GlobalNamespace::OVRPlugin::ShutdownMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShutdownMixedReality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsMixedRealityInitialized
bool GlobalNamespace::OVRPlugin::IsMixedRealityInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsMixedRealityInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetExternalCameraCount
int GlobalNamespace::OVRPlugin::GetExternalCameraCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetExternalCameraCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetExternalCameraCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.UpdateExternalCamera
bool GlobalNamespace::OVRPlugin::UpdateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetMixedRealityCameraInfo
bool GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo(int cameraId, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetMixedRealityCameraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraExtrinsics&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::CameraIntrinsics&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, byref(cameraExtrinsics), byref(cameraIntrinsics));
}
// Autogenerated method: OVRPlugin.OverrideExternalCameraFov
bool GlobalNamespace::OVRPlugin::OverrideExternalCameraFov(int cameraId, bool useOverriddenFov, ::GlobalNamespace::OVRPlugin::Fovf fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverrideExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "OverrideExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenFov), ::il2cpp_utils::ExtractType(fov)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenFov, fov);
}
// Autogenerated method: OVRPlugin.GetUseOverriddenExternalCameraFov
bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov(int cameraId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId);
}
// Autogenerated method: OVRPlugin.OverrideExternalCameraStaticPose
bool GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose(int cameraId, bool useOverriddenPose, ::GlobalNamespace::OVRPlugin::Posef poseInStageOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId), ::il2cpp_utils::ExtractType(useOverriddenPose), ::il2cpp_utils::ExtractType(poseInStageOrigin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId, useOverriddenPose, poseInStageOrigin);
}
// Autogenerated method: OVRPlugin.GetUseOverriddenExternalCameraStaticPose
bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose(int cameraId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraId);
}
// Autogenerated method: OVRPlugin.ResetDefaultExternalCamera
bool GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetDefaultExternalCamera
bool GlobalNamespace::OVRPlugin::SetDefaultExternalCamera(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin.SetExternalCameraProperties
bool GlobalNamespace::OVRPlugin::SetExternalCameraProperties(::StringW cameraName, ByRef<::GlobalNamespace::OVRPlugin::CameraIntrinsics> cameraIntrinsics, ByRef<::GlobalNamespace::OVRPlugin::CameraExtrinsics> cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetExternalCameraProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetExternalCameraProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraName), ::il2cpp_utils::ExtractType(cameraIntrinsics), ::il2cpp_utils::ExtractType(cameraExtrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraName, byref(cameraIntrinsics), byref(cameraExtrinsics));
}
// Autogenerated method: OVRPlugin.InitializeInsightPassthrough
bool GlobalNamespace::OVRPlugin::InitializeInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InitializeInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "InitializeInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ShutdownInsightPassthrough
bool GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ShutdownInsightPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.IsInsightPassthroughInitialized
bool GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsInsightPassthroughInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetInsightPassthroughInitializationState
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetInsightPassthroughInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.CreateInsightTriangleMesh
bool GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh(int layerId, ::ArrayW<::UnityEngine::Vector3> vertices, ::ArrayW<int> triangles, ByRef<uint64_t> meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "CreateInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, vertices, triangles, byref(meshHandle));
}
// Autogenerated method: OVRPlugin.DestroyInsightTriangleMesh
bool GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh(uint64_t meshHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyInsightTriangleMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshHandle);
}
// Autogenerated method: OVRPlugin.AddInsightPassthroughSurfaceGeometry
bool GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry(int layerId, uint64_t meshHandle, ::UnityEngine::Matrix4x4 T_world_model, ByRef<uint64_t> geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AddInsightPassthroughSurfaceGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(meshHandle), ::il2cpp_utils::ExtractType(T_world_model), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, meshHandle, T_world_model, byref(geometryInstanceHandle));
}
// Autogenerated method: OVRPlugin.DestroyInsightPassthroughGeometryInstance
bool GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance(uint64_t geometryInstanceHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "DestroyInsightPassthroughGeometryInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle);
}
// Autogenerated method: OVRPlugin.UpdateInsightPassthroughGeometryTransform
bool GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform(uint64_t geometryInstanceHandle, ::UnityEngine::Matrix4x4 transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "UpdateInsightPassthroughGeometryTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryInstanceHandle), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometryInstanceHandle, transform);
}
// Autogenerated method: OVRPlugin.SetInsightPassthroughStyle
bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int layerId, ::GlobalNamespace::OVRPlugin::InsightPassthroughStyle style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetInsightPassthroughStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerId), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerId, style);
}
// Autogenerated method: OVRPlugin.GetBoundaryDimensions
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::GetBoundaryDimensions(::GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin.GetBoundaryVisible
bool GlobalNamespace::OVRPlugin::GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetBoundaryVisible
bool GlobalNamespace::OVRPlugin::SetBoundaryVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin.GetSystemHeadsetType
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::GetSystemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSystemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::SystemHeadset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetActiveController
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetConnectedControllers
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.ToBool
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::ToBool(bool b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ToBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "ToBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: OVRPlugin.GetTrackingOriginType
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::GetTrackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TrackingOrigin, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetTrackingOriginType
bool GlobalNamespace::OVRPlugin::SetTrackingOriginType(::GlobalNamespace::OVRPlugin::TrackingOrigin originType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originType);
}
// Autogenerated method: OVRPlugin.GetTrackingCalibratedOrigin
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetTrackingCalibratedOrigin
bool GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.RecenterTrackingOrigin
bool GlobalNamespace::OVRPlugin::RecenterTrackingOrigin(::GlobalNamespace::OVRPlugin::RecenterFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterTrackingOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "RecenterTrackingOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: OVRPlugin.GetNodeFrustum2
bool GlobalNamespace::OVRPlugin::GetNodeFrustum2(::GlobalNamespace::OVRPlugin::Node nodeId, ByRef<::GlobalNamespace::OVRPlugin::Frustumf2> frustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNodeFrustum2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNodeFrustum2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Frustumf2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId, byref(frustum));
}
// Autogenerated method: OVRPlugin.GetDominantHand
::GlobalNamespace::OVRPlugin::Handedness GlobalNamespace::OVRPlugin::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SendEvent
bool GlobalNamespace::OVRPlugin::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: OVRPlugin.SetHeadPoseModifier
bool GlobalNamespace::OVRPlugin::SetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeRotation), ::il2cpp_utils::ExtractType(relativeTranslation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin.GetHeadPoseModifier
bool GlobalNamespace::OVRPlugin::GetHeadPoseModifier(ByRef<::GlobalNamespace::OVRPlugin::Quatf> relativeRotation, ByRef<::GlobalNamespace::OVRPlugin::Vector3f> relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Quatf&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Vector3f&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(relativeRotation), byref(relativeTranslation));
}
// Autogenerated method: OVRPlugin.IsPerfMetricsSupported
bool GlobalNamespace::OVRPlugin::IsPerfMetricsSupported(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::IsPerfMetricsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "IsPerfMetricsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetPerfMetricsFloat
::System::Nullable_1<float> GlobalNamespace::OVRPlugin::GetPerfMetricsFloat(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPerfMetricsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPerfMetricsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<float>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetPerfMetricsInt
::System::Nullable_1<int> GlobalNamespace::OVRPlugin::GetPerfMetricsInt(::GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetPerfMetricsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetPerfMetricsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perfMetrics)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, perfMetrics);
}
// Autogenerated method: OVRPlugin.GetTimeInSeconds
double GlobalNamespace::OVRPlugin::GetTimeInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetTimeInSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetTimeInSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetColorScaleAndOffset
bool GlobalNamespace::OVRPlugin::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset), ::il2cpp_utils::ExtractType(applyToAllLayers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRPlugin.AddCustomMetadata
bool GlobalNamespace::OVRPlugin::AddCustomMetadata(::StringW name, ::StringW param) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::AddCustomMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "AddCustomMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin.SetDeveloperMode
bool GlobalNamespace::OVRPlugin::SetDeveloperMode(::GlobalNamespace::OVRPlugin::Bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetDeveloperMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, active);
}
// Autogenerated method: OVRPlugin.GetAdaptiveGPUPerformanceScale
float GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetAdaptiveGPUPerformanceScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetHandTrackingEnabled
bool GlobalNamespace::OVRPlugin::GetHandTrackingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandTrackingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetHandState
bool GlobalNamespace::OVRPlugin::GetHandState(::GlobalNamespace::OVRPlugin::Step stepId, ::GlobalNamespace::OVRPlugin::Hand hand, ByRef<::GlobalNamespace::OVRPlugin::HandState> handState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHandState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHandState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepId), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(handState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepId, hand, byref(handState));
}
// Autogenerated method: OVRPlugin.GetSkeleton
bool GlobalNamespace::OVRPlugin::GetSkeleton(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Skeleton&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin.GetSkeleton2
bool GlobalNamespace::OVRPlugin::GetSkeleton2(::GlobalNamespace::OVRPlugin::SkeletonType skeletonType, ByRef<::GlobalNamespace::OVRPlugin::Skeleton2> skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSkeleton2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSkeleton2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeletonType), ::il2cpp_utils::ExtractType(skeleton)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeletonType, byref(skeleton));
}
// Autogenerated method: OVRPlugin.GetMesh
bool GlobalNamespace::OVRPlugin::GetMesh(::GlobalNamespace::OVRPlugin::MeshType meshType, ByRef<::GlobalNamespace::OVRPlugin::Mesh*> mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::OVRPlugin::Mesh*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshType, byref(mesh));
}
// Autogenerated method: OVRPlugin.GetLocalTrackingSpaceRecenterCount
int GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetLocalTrackingSpaceRecenterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetSystemHmd3DofModeEnabled
bool GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetClientColorDesc
bool GlobalNamespace::OVRPlugin::SetClientColorDesc(::GlobalNamespace::OVRPlugin::ColorSpace colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetClientColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetClientColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: OVRPlugin.GetHmdColorDesc
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::GetHmdColorDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetHmdColorDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetHmdColorDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ColorSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.PollEvent
bool GlobalNamespace::OVRPlugin::PollEvent(ByRef<::GlobalNamespace::OVRPlugin::EventDataBuffer> eventDataBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PollEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "PollEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventDataBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(eventDataBuffer));
}
// Autogenerated method: OVRPlugin.GetNativeOpenXRInstance
uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNativeOpenXRInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.GetNativeOpenXRSession
uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GetNativeOpenXRSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "GetNativeOpenXRSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin.SetKeyboardOverlayUV
bool GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV(::GlobalNamespace::OVRPlugin::Vector2f uv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin", "SetKeyboardOverlayUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uv)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uv);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/GUID
#include "GlobalNamespace/OVRPlugin_GUID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 a
[[deprecated]] int& GlobalNamespace::OVRPlugin::GUID::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 b
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::GUID::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 c
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::GUID::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d0
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d1
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d2
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d3
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d4
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d5
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d6
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte d7
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::GUID::dyn_d7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::GUID::dyn_d7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Bool False
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::Bool::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/Bool", "False"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Bool False
void GlobalNamespace::OVRPlugin::Bool::_set_False(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Bool", "False", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Bool True
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::Bool::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/Bool", "True"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Bool True
void GlobalNamespace::OVRPlugin::Bool::_set_True(::GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Bool", "True", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Bool::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Bool::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success
void GlobalNamespace::OVRPlugin::Result::_set_Success(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success_EventUnavailable
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success_EventUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success_EventUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success_EventUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success_EventUnavailable
void GlobalNamespace::OVRPlugin::Result::_set_Success_EventUnavailable(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success_EventUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success_EventUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Success_Pending
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Success_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Success_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Success_Pending"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Success_Pending
void GlobalNamespace::OVRPlugin::Result::_set_Success_Pending(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Success_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Success_Pending", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure
void GlobalNamespace::OVRPlugin::Result::_set_Failure(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InvalidParameter
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InvalidParameter
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidParameter(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_NotInitialized
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_NotInitialized
void GlobalNamespace::OVRPlugin::Result::_set_Failure_NotInitialized(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InvalidOperation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InvalidOperation
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidOperation(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_Unsupported
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_Unsupported
void GlobalNamespace::OVRPlugin::Result::_set_Failure_Unsupported(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_NotYetImplemented
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_NotYetImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_NotYetImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_NotYetImplemented"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_NotYetImplemented
void GlobalNamespace::OVRPlugin::Result::_set_Failure_NotYetImplemented(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_NotYetImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_NotYetImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_OperationFailed
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_OperationFailed
void GlobalNamespace::OVRPlugin::Result::_set_Failure_OperationFailed(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_InsufficientSize
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_InsufficientSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_InsufficientSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_InsufficientSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_InsufficientSize
void GlobalNamespace::OVRPlugin::Result::_set_Failure_InsufficientSize(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_InsufficientSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_InsufficientSize", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_DataIsInvalid
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_DataIsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_DataIsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_DataIsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_DataIsInvalid
void GlobalNamespace::OVRPlugin::Result::_set_Failure_DataIsInvalid(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_DataIsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_DataIsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Result Failure_DeprecatedOperation
::GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::Result::_get_Failure_DeprecatedOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_get_Failure_DeprecatedOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/Result", "Failure_DeprecatedOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Result Failure_DeprecatedOperation
void GlobalNamespace::OVRPlugin::Result::_set_Failure_DeprecatedOperation(::GlobalNamespace::OVRPlugin::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::_set_Failure_DeprecatedOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Result", "Failure_DeprecatedOperation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraStatus
#include "GlobalNamespace/OVRPlugin_CameraStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_None
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_None
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_None(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Connected
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Connected"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Connected
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Connected(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Connected", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrating
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrating"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrating
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrating(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrating", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_CalibrationFailed
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_CalibrationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_CalibrationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_CalibrationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_CalibrationFailed
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_CalibrationFailed(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_CalibrationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_CalibrationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrated
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_Calibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_Calibrated
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrated(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_Calibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_Calibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_ThirdPerson
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_ThirdPerson
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_ThirdPerson(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_ThirdPerson", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraStatus CameraStatus_EnumSize
::GlobalNamespace::OVRPlugin::CameraStatus GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_get_CameraStatus_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraStatus>("", "OVRPlugin/CameraStatus", "CameraStatus_EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraStatus CameraStatus_EnumSize
void GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_EnumSize(::GlobalNamespace::OVRPlugin::CameraStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::_set_CameraStatus_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraStatus", "CameraStatus_EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::CameraStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraAnchorType
#include "GlobalNamespace/OVRPlugin_CameraAnchorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_PreDefined
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_PreDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_PreDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_PreDefined"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_PreDefined
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_PreDefined(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_PreDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_PreDefined", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Custom
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Custom
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Custom(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Custom", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Count
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_Count
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Count(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_Count", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_EnumSize
::GlobalNamespace::OVRPlugin::CameraAnchorType GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_get_CameraAnchorType_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraAnchorType>("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraAnchorType CameraAnchorType_EnumSize
void GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_EnumSize(::GlobalNamespace::OVRPlugin::CameraAnchorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::_set_CameraAnchorType_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraAnchorType", "CameraAnchorType_EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::CameraAnchorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraAnchorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/XrApi
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi Unknown
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi Unknown
void GlobalNamespace::OVRPlugin::XrApi::_set_Unknown(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi CAPI
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi CAPI
void GlobalNamespace::OVRPlugin::XrApi::_set_CAPI(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi VRAPI
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi VRAPI
void GlobalNamespace::OVRPlugin::XrApi::_set_VRAPI(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi OpenXR
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi OpenXR
void GlobalNamespace::OVRPlugin::XrApi::_set_OpenXR(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "OpenXR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/XrApi EnumSize
::GlobalNamespace::OVRPlugin::XrApi GlobalNamespace::OVRPlugin::XrApi::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::XrApi>("", "OVRPlugin/XrApi", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/XrApi EnumSize
void GlobalNamespace::OVRPlugin::XrApi::_set_EnumSize(::GlobalNamespace::OVRPlugin::XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/XrApi", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::XrApi::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::XrApi::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye None
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye None
void GlobalNamespace::OVRPlugin::Eye::_set_None(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Left
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Left
void GlobalNamespace::OVRPlugin::Eye::_set_Left(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Right
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Right
void GlobalNamespace::OVRPlugin::Eye::_set_Right(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Eye Count
::GlobalNamespace::OVRPlugin::Eye GlobalNamespace::OVRPlugin::Eye::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Eye>("", "OVRPlugin/Eye", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Eye Count
void GlobalNamespace::OVRPlugin::Eye::_set_Count(::GlobalNamespace::OVRPlugin::Eye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Eye", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Eye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Eye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Tracker
#include "GlobalNamespace/OVRPlugin_Tracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker None
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker None
void GlobalNamespace::OVRPlugin::Tracker::_set_None(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker Zero
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker Zero
void GlobalNamespace::OVRPlugin::Tracker::_set_Zero(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker One
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker One
void GlobalNamespace::OVRPlugin::Tracker::_set_One(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker Two
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker Two
void GlobalNamespace::OVRPlugin::Tracker::_set_Two(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker Three
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker Three
void GlobalNamespace::OVRPlugin::Tracker::_set_Three(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Tracker Count
::GlobalNamespace::OVRPlugin::Tracker GlobalNamespace::OVRPlugin::Tracker::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Tracker>("", "OVRPlugin/Tracker", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Tracker Count
void GlobalNamespace::OVRPlugin::Tracker::_set_Count(::GlobalNamespace::OVRPlugin::Tracker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Tracker", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Tracker::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Tracker::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node None
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node None
void GlobalNamespace::OVRPlugin::Node::_set_None(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node EyeLeft
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_EyeLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_EyeLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "EyeLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node EyeLeft
void GlobalNamespace::OVRPlugin::Node::_set_EyeLeft(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_EyeLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "EyeLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node EyeRight
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_EyeRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_EyeRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "EyeRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node EyeRight
void GlobalNamespace::OVRPlugin::Node::_set_EyeRight(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_EyeRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "EyeRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node EyeCenter
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_EyeCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_EyeCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "EyeCenter"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node EyeCenter
void GlobalNamespace::OVRPlugin::Node::_set_EyeCenter(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_EyeCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "EyeCenter", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node HandLeft
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node HandLeft
void GlobalNamespace::OVRPlugin::Node::_set_HandLeft(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node HandRight
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node HandRight
void GlobalNamespace::OVRPlugin::Node::_set_HandRight(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node TrackerZero
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_TrackerZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_TrackerZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "TrackerZero"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node TrackerZero
void GlobalNamespace::OVRPlugin::Node::_set_TrackerZero(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_TrackerZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "TrackerZero", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node TrackerOne
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_TrackerOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_TrackerOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "TrackerOne"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node TrackerOne
void GlobalNamespace::OVRPlugin::Node::_set_TrackerOne(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_TrackerOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "TrackerOne", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node TrackerTwo
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_TrackerTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_TrackerTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "TrackerTwo"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node TrackerTwo
void GlobalNamespace::OVRPlugin::Node::_set_TrackerTwo(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_TrackerTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "TrackerTwo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node TrackerThree
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_TrackerThree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_TrackerThree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "TrackerThree"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node TrackerThree
void GlobalNamespace::OVRPlugin::Node::_set_TrackerThree(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_TrackerThree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "TrackerThree", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node Head
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node Head
void GlobalNamespace::OVRPlugin::Node::_set_Head(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node DeviceObjectZero
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_DeviceObjectZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_DeviceObjectZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "DeviceObjectZero"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node DeviceObjectZero
void GlobalNamespace::OVRPlugin::Node::_set_DeviceObjectZero(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_DeviceObjectZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "DeviceObjectZero", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Node Count
::GlobalNamespace::OVRPlugin::Node GlobalNamespace::OVRPlugin::Node::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Node>("", "OVRPlugin/Node", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Node Count
void GlobalNamespace::OVRPlugin::Node::_set_Count(::GlobalNamespace::OVRPlugin::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Node", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller None
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller None
void GlobalNamespace::OVRPlugin::Controller::_set_None(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller LTouch
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_LTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_LTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "LTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller LTouch
void GlobalNamespace::OVRPlugin::Controller::_set_LTouch(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_LTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "LTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller RTouch
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_RTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_RTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "RTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller RTouch
void GlobalNamespace::OVRPlugin::Controller::_set_RTouch(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_RTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "RTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller Touch
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller Touch
void GlobalNamespace::OVRPlugin::Controller::_set_Touch(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller Remote
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller Remote
void GlobalNamespace::OVRPlugin::Controller::_set_Remote(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "Remote", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller Gamepad
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_Gamepad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_Gamepad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "Gamepad"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller Gamepad
void GlobalNamespace::OVRPlugin::Controller::_set_Gamepad(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_Gamepad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "Gamepad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller LHand
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_LHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_LHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "LHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller LHand
void GlobalNamespace::OVRPlugin::Controller::_set_LHand(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_LHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "LHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller RHand
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_RHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_RHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "RHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller RHand
void GlobalNamespace::OVRPlugin::Controller::_set_RHand(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_RHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "RHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller Hands
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller Hands
void GlobalNamespace::OVRPlugin::Controller::_set_Hands(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller Active
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "Active"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller Active
void GlobalNamespace::OVRPlugin::Controller::_set_Active(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Controller All
::GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::Controller::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Controller>("", "OVRPlugin/Controller", "All"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Controller All
void GlobalNamespace::OVRPlugin::Controller::_set_All(::GlobalNamespace::OVRPlugin::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Controller", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Controller::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Controller::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Handedness Unsupported
::GlobalNamespace::OVRPlugin::Handedness GlobalNamespace::OVRPlugin::Handedness::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Handedness>("", "OVRPlugin/Handedness", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Handedness Unsupported
void GlobalNamespace::OVRPlugin::Handedness::_set_Unsupported(::GlobalNamespace::OVRPlugin::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Handedness", "Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Handedness LeftHanded
::GlobalNamespace::OVRPlugin::Handedness GlobalNamespace::OVRPlugin::Handedness::_get_LeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_get_LeftHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Handedness>("", "OVRPlugin/Handedness", "LeftHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Handedness LeftHanded
void GlobalNamespace::OVRPlugin::Handedness::_set_LeftHanded(::GlobalNamespace::OVRPlugin::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_set_LeftHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Handedness", "LeftHanded", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Handedness RightHanded
::GlobalNamespace::OVRPlugin::Handedness GlobalNamespace::OVRPlugin::Handedness::_get_RightHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_get_RightHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Handedness>("", "OVRPlugin/Handedness", "RightHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Handedness RightHanded
void GlobalNamespace::OVRPlugin::Handedness::_set_RightHanded(::GlobalNamespace::OVRPlugin::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::_set_RightHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Handedness", "RightHanded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Handedness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Handedness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin EyeLevel
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin EyeLevel
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_EyeLevel(::GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin FloorLevel
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin FloorLevel
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_FloorLevel(::GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin Stage
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin Stage
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Stage(::GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "Stage", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin View
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_View() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_get_View");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "View"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin View
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_View(::GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_set_View");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "View", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin Count
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin Count
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Count(::GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::TrackingOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/RecenterFlags
#include "GlobalNamespace/OVRPlugin_RecenterFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/RecenterFlags Default
::GlobalNamespace::OVRPlugin::RecenterFlags GlobalNamespace::OVRPlugin::RecenterFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::RecenterFlags>("", "OVRPlugin/RecenterFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/RecenterFlags Default
void GlobalNamespace::OVRPlugin::RecenterFlags::_set_Default(::GlobalNamespace::OVRPlugin::RecenterFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/RecenterFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/RecenterFlags IgnoreAll
::GlobalNamespace::OVRPlugin::RecenterFlags GlobalNamespace::OVRPlugin::RecenterFlags::_get_IgnoreAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_get_IgnoreAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::RecenterFlags>("", "OVRPlugin/RecenterFlags", "IgnoreAll"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/RecenterFlags IgnoreAll
void GlobalNamespace::OVRPlugin::RecenterFlags::_set_IgnoreAll(::GlobalNamespace::OVRPlugin::RecenterFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_set_IgnoreAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/RecenterFlags", "IgnoreAll", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/RecenterFlags Count
::GlobalNamespace::OVRPlugin::RecenterFlags GlobalNamespace::OVRPlugin::RecenterFlags::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::RecenterFlags>("", "OVRPlugin/RecenterFlags", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/RecenterFlags Count
void GlobalNamespace::OVRPlugin::RecenterFlags::_set_Count(::GlobalNamespace::OVRPlugin::RecenterFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/RecenterFlags", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::RecenterFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::RecenterFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/BatteryStatus
#include "GlobalNamespace/OVRPlugin_BatteryStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BatteryStatus Charging
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::BatteryStatus::_get_Charging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_get_Charging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BatteryStatus>("", "OVRPlugin/BatteryStatus", "Charging"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BatteryStatus Charging
void GlobalNamespace::OVRPlugin::BatteryStatus::_set_Charging(::GlobalNamespace::OVRPlugin::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_set_Charging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BatteryStatus", "Charging", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BatteryStatus Discharging
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::BatteryStatus::_get_Discharging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_get_Discharging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BatteryStatus>("", "OVRPlugin/BatteryStatus", "Discharging"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BatteryStatus Discharging
void GlobalNamespace::OVRPlugin::BatteryStatus::_set_Discharging(::GlobalNamespace::OVRPlugin::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_set_Discharging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BatteryStatus", "Discharging", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BatteryStatus Full
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::BatteryStatus::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BatteryStatus>("", "OVRPlugin/BatteryStatus", "Full"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BatteryStatus Full
void GlobalNamespace::OVRPlugin::BatteryStatus::_set_Full(::GlobalNamespace::OVRPlugin::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BatteryStatus", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BatteryStatus NotCharging
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::BatteryStatus::_get_NotCharging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_get_NotCharging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BatteryStatus>("", "OVRPlugin/BatteryStatus", "NotCharging"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BatteryStatus NotCharging
void GlobalNamespace::OVRPlugin::BatteryStatus::_set_NotCharging(::GlobalNamespace::OVRPlugin::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_set_NotCharging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BatteryStatus", "NotCharging", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BatteryStatus Unknown
::GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::BatteryStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BatteryStatus>("", "OVRPlugin/BatteryStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BatteryStatus Unknown
void GlobalNamespace::OVRPlugin::BatteryStatus::_set_Unknown(::GlobalNamespace::OVRPlugin::BatteryStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BatteryStatus", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::BatteryStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BatteryStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat Default
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat Default
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_Default(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat R8G8B8A8_sRGB
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R8G8B8A8_sRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R8G8B8A8_sRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "R8G8B8A8_sRGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat R8G8B8A8_sRGB
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R8G8B8A8_sRGB(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R8G8B8A8_sRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "R8G8B8A8_sRGB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat R8G8B8A8
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R8G8B8A8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R8G8B8A8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "R8G8B8A8"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat R8G8B8A8
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R8G8B8A8(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R8G8B8A8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "R8G8B8A8", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat R16G16B16A16_FP
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R16G16B16A16_FP(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat R11G11B10_FP
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R11G11B10_FP(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat B8G8R8A8_sRGB
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_B8G8R8A8_sRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_B8G8R8A8_sRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "B8G8R8A8_sRGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat B8G8R8A8_sRGB
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_B8G8R8A8_sRGB(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_B8G8R8A8_sRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "B8G8R8A8_sRGB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat B8G8R8A8
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_B8G8R8A8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_B8G8R8A8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "B8G8R8A8"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat B8G8R8A8
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_B8G8R8A8(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_B8G8R8A8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "B8G8R8A8", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat R5G6B5
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R5G6B5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_R5G6B5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "R5G6B5"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat R5G6B5
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R5G6B5(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_R5G6B5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "R5G6B5", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EyeTextureFormat EnumSize
::GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EyeTextureFormat>("", "OVRPlugin/EyeTextureFormat", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EyeTextureFormat EnumSize
void GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_EnumSize(::GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EyeTextureFormat", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::EyeTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EyeTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PlatformUI
#include "GlobalNamespace/OVRPlugin_PlatformUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PlatformUI None
::GlobalNamespace::OVRPlugin::PlatformUI GlobalNamespace::OVRPlugin::PlatformUI::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PlatformUI>("", "OVRPlugin/PlatformUI", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PlatformUI None
void GlobalNamespace::OVRPlugin::PlatformUI::_set_None(::GlobalNamespace::OVRPlugin::PlatformUI value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PlatformUI", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PlatformUI ConfirmQuit
::GlobalNamespace::OVRPlugin::PlatformUI GlobalNamespace::OVRPlugin::PlatformUI::_get_ConfirmQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_get_ConfirmQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PlatformUI>("", "OVRPlugin/PlatformUI", "ConfirmQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PlatformUI ConfirmQuit
void GlobalNamespace::OVRPlugin::PlatformUI::_set_ConfirmQuit(::GlobalNamespace::OVRPlugin::PlatformUI value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_set_ConfirmQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PlatformUI", "ConfirmQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PlatformUI GlobalMenuTutorial
::GlobalNamespace::OVRPlugin::PlatformUI GlobalNamespace::OVRPlugin::PlatformUI::_get_GlobalMenuTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_get_GlobalMenuTutorial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PlatformUI>("", "OVRPlugin/PlatformUI", "GlobalMenuTutorial"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PlatformUI GlobalMenuTutorial
void GlobalNamespace::OVRPlugin::PlatformUI::_set_GlobalMenuTutorial(::GlobalNamespace::OVRPlugin::PlatformUI value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::_set_GlobalMenuTutorial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PlatformUI", "GlobalMenuTutorial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::PlatformUI::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PlatformUI::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SystemRegion
#include "GlobalNamespace/OVRPlugin_SystemRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemRegion Unspecified
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::SystemRegion::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemRegion>("", "OVRPlugin/SystemRegion", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemRegion Unspecified
void GlobalNamespace::OVRPlugin::SystemRegion::_set_Unspecified(::GlobalNamespace::OVRPlugin::SystemRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemRegion", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemRegion Japan
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::SystemRegion::_get_Japan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_get_Japan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemRegion>("", "OVRPlugin/SystemRegion", "Japan"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemRegion Japan
void GlobalNamespace::OVRPlugin::SystemRegion::_set_Japan(::GlobalNamespace::OVRPlugin::SystemRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_set_Japan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemRegion", "Japan", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemRegion China
::GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::SystemRegion::_get_China() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_get_China");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemRegion>("", "OVRPlugin/SystemRegion", "China"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemRegion China
void GlobalNamespace::OVRPlugin::SystemRegion::_set_China(::GlobalNamespace::OVRPlugin::SystemRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::_set_China");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemRegion", "China", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::SystemRegion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemRegion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SystemHeadset
#include "GlobalNamespace/OVRPlugin_SystemHeadset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset None
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset None
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_None(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Oculus_Quest
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Oculus_Quest
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Quest(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Oculus_Quest_2
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Oculus_Quest_2
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Quest_2(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Placeholder_10
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Placeholder_10
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_10(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Placeholder_11
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Placeholder_11
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_11(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Placeholder_12
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Placeholder_12
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_12(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Placeholder_13
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Placeholder_13
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_13(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Placeholder_14
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Placeholder_14
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_14(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Rift_DK1
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Rift_DK1
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_DK1(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Rift_DK2
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Rift_DK2
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_DK2(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Rift_CV1
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Rift_CV1
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_CV1(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Rift_CB
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Rift_CB
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_CB(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Rift_S
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Rift_S
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_S(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Oculus_Link_Quest
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Oculus_Link_Quest
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Link_Quest(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset Oculus_Link_Quest_2
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset Oculus_Link_Quest_2
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Link_Quest_2(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4103
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4103
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4103(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4104
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4104
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4104(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4105
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4105
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4105(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4106
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4106
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4106(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4107
::GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SystemHeadset>("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SystemHeadset PC_Placeholder_4107
void GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4107(::GlobalNamespace::OVRPlugin::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SystemHeadset", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::SystemHeadset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SystemHeadset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape Quad
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape Quad
void GlobalNamespace::OVRPlugin::OverlayShape::_set_Quad(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "Quad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape Cylinder
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape Cylinder
void GlobalNamespace::OVRPlugin::OverlayShape::_set_Cylinder(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape Cubemap
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape Cubemap
void GlobalNamespace::OVRPlugin::OverlayShape::_set_Cubemap(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape OffcenterCubemap
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_OffcenterCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_OffcenterCubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "OffcenterCubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape OffcenterCubemap
void GlobalNamespace::OVRPlugin::OverlayShape::_set_OffcenterCubemap(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_OffcenterCubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "OffcenterCubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape Equirect
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_Equirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_Equirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "Equirect"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape Equirect
void GlobalNamespace::OVRPlugin::OverlayShape::_set_Equirect(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_Equirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "Equirect", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape ReconstructionPassthrough
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_ReconstructionPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_ReconstructionPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "ReconstructionPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape ReconstructionPassthrough
void GlobalNamespace::OVRPlugin::OverlayShape::_set_ReconstructionPassthrough(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_ReconstructionPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "ReconstructionPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape SurfaceProjectedPassthrough
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_SurfaceProjectedPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_SurfaceProjectedPassthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "SurfaceProjectedPassthrough"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape SurfaceProjectedPassthrough
void GlobalNamespace::OVRPlugin::OverlayShape::_set_SurfaceProjectedPassthrough(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_SurfaceProjectedPassthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "SurfaceProjectedPassthrough", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayShape Fisheye
::GlobalNamespace::OVRPlugin::OverlayShape GlobalNamespace::OVRPlugin::OverlayShape::_get_Fisheye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_get_Fisheye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayShape>("", "OVRPlugin/OverlayShape", "Fisheye"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayShape Fisheye
void GlobalNamespace::OVRPlugin::OverlayShape::_set_Fisheye(::GlobalNamespace::OVRPlugin::OverlayShape value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::_set_Fisheye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayShape", "Fisheye", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::OverlayShape::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayShape::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Step Render
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRPlugin::Step::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Step::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRPlugin/Step", "Render"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Step Render
void GlobalNamespace::OVRPlugin::Step::_set_Render(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Step::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Step", "Render", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Step Physics
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRPlugin::Step::_get_Physics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Step::_get_Physics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRPlugin/Step", "Physics"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Step Physics
void GlobalNamespace::OVRPlugin::Step::_set_Physics(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Step::_set_Physics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Step", "Physics", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Step::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Step::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDevice None
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRPlugin::CameraDevice::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDevice>("", "OVRPlugin/CameraDevice", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDevice None
void GlobalNamespace::OVRPlugin::CameraDevice::_set_None(::GlobalNamespace::OVRPlugin::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDevice", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDevice WebCamera0
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRPlugin::CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDevice>("", "OVRPlugin/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDevice WebCamera0
void GlobalNamespace::OVRPlugin::CameraDevice::_set_WebCamera0(::GlobalNamespace::OVRPlugin::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDevice WebCamera1
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRPlugin::CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDevice>("", "OVRPlugin/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDevice WebCamera1
void GlobalNamespace::OVRPlugin::CameraDevice::_set_WebCamera1(::GlobalNamespace::OVRPlugin::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDevice ZEDCamera
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRPlugin::CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDevice>("", "OVRPlugin/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDevice ZEDCamera
void GlobalNamespace::OVRPlugin::CameraDevice::_set_ZEDCamera(::GlobalNamespace::OVRPlugin::CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDevice", "ZEDCamera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::CameraDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraDeviceDepthSensingMode
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthSensingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDeviceDepthSensingMode Standard
::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode>("", "OVRPlugin/CameraDeviceDepthSensingMode", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDeviceDepthSensingMode Standard
void GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_set_Standard(::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDeviceDepthSensingMode", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDeviceDepthSensingMode Fill
::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode>("", "OVRPlugin/CameraDeviceDepthSensingMode", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDeviceDepthSensingMode Fill
void GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_set_Fill(::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDeviceDepthSensingMode", "Fill", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthSensingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/CameraDeviceDepthQuality
#include "GlobalNamespace/OVRPlugin_CameraDeviceDepthQuality.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDeviceDepthQuality Low
::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality>("", "OVRPlugin/CameraDeviceDepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDeviceDepthQuality Low
void GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_Low(::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDeviceDepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDeviceDepthQuality Medium
::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality>("", "OVRPlugin/CameraDeviceDepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDeviceDepthQuality Medium
void GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_Medium(::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDeviceDepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/CameraDeviceDepthQuality High
::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality>("", "OVRPlugin/CameraDeviceDepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/CameraDeviceDepthQuality High
void GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_High(::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/CameraDeviceDepthQuality", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::CameraDeviceDepthQuality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FixedFoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel Off
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Off(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel Low
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Low(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel Medium
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Medium(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel High
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_High(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel HighTop
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_HighTop(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/FixedFoveatedRenderingLevel EnumSize
::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel>("", "OVRPlugin/FixedFoveatedRenderingLevel", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/FixedFoveatedRenderingLevel EnumSize
void GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_EnumSize(::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/FixedFoveatedRenderingLevel", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TiledMultiResLevel
#include "GlobalNamespace/OVRPlugin_TiledMultiResLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel Off
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel Off
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_Off(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel LMSLow
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSLow(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel LMSMedium
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSMedium(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel LMSHigh
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSHigh(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel LMSHighTop
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSHighTop(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TiledMultiResLevel EnumSize
::GlobalNamespace::OVRPlugin::TiledMultiResLevel GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TiledMultiResLevel>("", "OVRPlugin/TiledMultiResLevel", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TiledMultiResLevel EnumSize
void GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_EnumSize(::GlobalNamespace::OVRPlugin::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TiledMultiResLevel", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::TiledMultiResLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TiledMultiResLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics App_CpuTime_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_App_CpuTime_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_App_CpuTime_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "App_CpuTime_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics App_CpuTime_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_App_CpuTime_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_App_CpuTime_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "App_CpuTime_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics App_GpuTime_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_App_GpuTime_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_App_GpuTime_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "App_GpuTime_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics App_GpuTime_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_App_GpuTime_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_App_GpuTime_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "App_GpuTime_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Compositor_CpuTime_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_CpuTime_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_CpuTime_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Compositor_CpuTime_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Compositor_CpuTime_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_CpuTime_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_CpuTime_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Compositor_CpuTime_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Compositor_GpuTime_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_GpuTime_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_GpuTime_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Compositor_GpuTime_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Compositor_GpuTime_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_GpuTime_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_GpuTime_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Compositor_GpuTime_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Compositor_DroppedFrameCount_Int
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_DroppedFrameCount_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Compositor_DroppedFrameCount_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Compositor_DroppedFrameCount_Int"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Compositor_DroppedFrameCount_Int
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_DroppedFrameCount_Int(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Compositor_DroppedFrameCount_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Compositor_DroppedFrameCount_Int", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics System_GpuUtilPercentage_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_GpuUtilPercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_GpuUtilPercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "System_GpuUtilPercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics System_GpuUtilPercentage_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_GpuUtilPercentage_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_GpuUtilPercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "System_GpuUtilPercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics System_CpuUtilAveragePercentage_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_CpuUtilAveragePercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_CpuUtilAveragePercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "System_CpuUtilAveragePercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics System_CpuUtilAveragePercentage_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_CpuUtilAveragePercentage_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_CpuUtilAveragePercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "System_CpuUtilAveragePercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics System_CpuUtilWorstPercentage_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_CpuUtilWorstPercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_System_CpuUtilWorstPercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "System_CpuUtilWorstPercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics System_CpuUtilWorstPercentage_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_CpuUtilWorstPercentage_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_System_CpuUtilWorstPercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "System_CpuUtilWorstPercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Device_CpuClockFrequencyInMHz_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_CpuClockFrequencyInMHz_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_CpuClockFrequencyInMHz_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Device_CpuClockFrequencyInMHz_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Device_CpuClockFrequencyInMHz_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_CpuClockFrequencyInMHz_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_CpuClockFrequencyInMHz_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Device_CpuClockFrequencyInMHz_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Device_GpuClockFrequencyInMHz_Float
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_GpuClockFrequencyInMHz_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_GpuClockFrequencyInMHz_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Device_GpuClockFrequencyInMHz_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Device_GpuClockFrequencyInMHz_Float
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_GpuClockFrequencyInMHz_Float(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_GpuClockFrequencyInMHz_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Device_GpuClockFrequencyInMHz_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Device_CpuClockLevel_Int
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_CpuClockLevel_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_CpuClockLevel_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Device_CpuClockLevel_Int"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Device_CpuClockLevel_Int
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_CpuClockLevel_Int(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_CpuClockLevel_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Device_CpuClockLevel_Int", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Device_GpuClockLevel_Int
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_GpuClockLevel_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Device_GpuClockLevel_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Device_GpuClockLevel_Int"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Device_GpuClockLevel_Int
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_GpuClockLevel_Int(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Device_GpuClockLevel_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Device_GpuClockLevel_Int", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics Count
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics Count
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_Count(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/PerfMetrics EnumSize
::GlobalNamespace::OVRPlugin::PerfMetrics GlobalNamespace::OVRPlugin::PerfMetrics::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PerfMetrics>("", "OVRPlugin/PerfMetrics", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/PerfMetrics EnumSize
void GlobalNamespace::OVRPlugin::PerfMetrics::_set_EnumSize(::GlobalNamespace::OVRPlugin::PerfMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PerfMetrics", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::PerfMetrics::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PerfMetrics::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OverlayFlag
#include "GlobalNamespace/OVRPlugin_OverlayFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag None
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag None
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_None(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag OnTop
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_OnTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_OnTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "OnTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag OnTop
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_OnTop(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_OnTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "OnTop", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag HeadLocked
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_HeadLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_HeadLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "HeadLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag HeadLocked
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_HeadLocked(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_HeadLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "HeadLocked", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag NoDepth
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_NoDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_NoDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "NoDepth"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag NoDepth
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_NoDepth(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_NoDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "NoDepth", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ExpensiveSuperSample
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ExpensiveSuperSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ExpensiveSuperSample");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ExpensiveSuperSample"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ExpensiveSuperSample
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ExpensiveSuperSample(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ExpensiveSuperSample");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ExpensiveSuperSample", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ShapeFlag_Quad
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ShapeFlag_Quad"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ShapeFlag_Quad
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Quad(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ShapeFlag_Quad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ShapeFlag_Cylinder
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ShapeFlag_Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ShapeFlag_Cylinder
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Cylinder(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ShapeFlag_Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ShapeFlag_Cubemap
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ShapeFlag_Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ShapeFlag_Cubemap
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Cubemap(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ShapeFlag_Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ShapeFlag_OffcenterCubemap
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_OffcenterCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlag_OffcenterCubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ShapeFlag_OffcenterCubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ShapeFlag_OffcenterCubemap
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_OffcenterCubemap(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlag_OffcenterCubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ShapeFlag_OffcenterCubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag ShapeFlagRangeMask
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlagRangeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_ShapeFlagRangeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "ShapeFlagRangeMask"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag ShapeFlagRangeMask
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlagRangeMask(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_ShapeFlagRangeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "ShapeFlagRangeMask", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/OverlayFlag Hidden
::GlobalNamespace::OVRPlugin::OverlayFlag GlobalNamespace::OVRPlugin::OverlayFlag::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::OverlayFlag>("", "OVRPlugin/OverlayFlag", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/OverlayFlag Hidden
void GlobalNamespace::OVRPlugin::OverlayFlag::_set_Hidden(::GlobalNamespace::OVRPlugin::OverlayFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OverlayFlag", "Hidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::OverlayFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OverlayFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Vector3f zero
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::Vector3f::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Vector3f>("", "OVRPlugin/Vector3f", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Vector3f zero
void GlobalNamespace::OVRPlugin::Vector3f::_set_zero(::GlobalNamespace::OVRPlugin::Vector3f value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Vector3f", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector3f::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector3f::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector3f::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Vector3f..cctor
void GlobalNamespace::OVRPlugin::Vector3f::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Vector3f", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Vector3f.ToString
::StringW GlobalNamespace::OVRPlugin::Vector3f::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector3f::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Vector4f zero
::GlobalNamespace::OVRPlugin::Vector4f GlobalNamespace::OVRPlugin::Vector4f::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Vector4f>("", "OVRPlugin/Vector4f", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Vector4f zero
void GlobalNamespace::OVRPlugin::Vector4f::_set_zero(::GlobalNamespace::OVRPlugin::Vector4f value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Vector4f", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector4f::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector4f::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector4f::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated]] float& GlobalNamespace::OVRPlugin::Vector4f::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Vector4f..cctor
void GlobalNamespace::OVRPlugin::Vector4f::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Vector4f", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Vector4f.ToString
::StringW GlobalNamespace::OVRPlugin::Vector4f::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4f::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Vector4s
#include "GlobalNamespace/OVRPlugin_Vector4s.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Vector4s zero
::GlobalNamespace::OVRPlugin::Vector4s GlobalNamespace::OVRPlugin::Vector4s::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Vector4s>("", "OVRPlugin/Vector4s", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Vector4s zero
void GlobalNamespace::OVRPlugin::Vector4s::_set_zero(::GlobalNamespace::OVRPlugin::Vector4s value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Vector4s", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 x
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::Vector4s::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 y
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::Vector4s::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 z
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::Vector4s::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 w
[[deprecated]] int16_t& GlobalNamespace::OVRPlugin::Vector4s::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Vector4s..cctor
void GlobalNamespace::OVRPlugin::Vector4s::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Vector4s", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Vector4s.ToString
::StringW GlobalNamespace::OVRPlugin::Vector4s::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Vector4s::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Quatf
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Quatf identity
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRPlugin::Quatf::_get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::_get_identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Quatf>("", "OVRPlugin/Quatf", "identity"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Quatf identity
void GlobalNamespace::OVRPlugin::Quatf::_set_identity(::GlobalNamespace::OVRPlugin::Quatf value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::_set_identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Quatf", "identity", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated]] float& GlobalNamespace::OVRPlugin::Quatf::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated]] float& GlobalNamespace::OVRPlugin::Quatf::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated]] float& GlobalNamespace::OVRPlugin::Quatf::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated]] float& GlobalNamespace::OVRPlugin::Quatf::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Quatf..cctor
void GlobalNamespace::OVRPlugin::Quatf::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Quatf", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Quatf.ToString
::StringW GlobalNamespace::OVRPlugin::Quatf::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Quatf::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Posef
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Posef identity
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::Posef::_get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::_get_identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Posef>("", "OVRPlugin/Posef", "identity"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Posef identity
void GlobalNamespace::OVRPlugin::Posef::_set_identity(::GlobalNamespace::OVRPlugin::Posef value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::_set_identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Posef", "identity", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Quatf Orientation
[[deprecated]] ::GlobalNamespace::OVRPlugin::Quatf& GlobalNamespace::OVRPlugin::Posef::dyn_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::dyn_Orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Orientation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Quatf*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f Position
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector3f& GlobalNamespace::OVRPlugin::Posef::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector3f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Posef..cctor
void GlobalNamespace::OVRPlugin::Posef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Posef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Posef.ToString
::StringW GlobalNamespace::OVRPlugin::Posef::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Posef::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/TextureRectMatrixf zero
::GlobalNamespace::OVRPlugin::TextureRectMatrixf GlobalNamespace::OVRPlugin::TextureRectMatrixf::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TextureRectMatrixf>("", "OVRPlugin/TextureRectMatrixf", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/TextureRectMatrixf zero
void GlobalNamespace::OVRPlugin::TextureRectMatrixf::_set_zero(::GlobalNamespace::OVRPlugin::TextureRectMatrixf value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TextureRectMatrixf", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect leftRect
[[deprecated]] ::UnityEngine::Rect& GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_leftRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_leftRect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect rightRect
[[deprecated]] ::UnityEngine::Rect& GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_rightRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_rightRect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 leftScaleBias
[[deprecated]] ::UnityEngine::Vector4& GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_leftScaleBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_leftScaleBias");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftScaleBias"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 rightScaleBias
[[deprecated]] ::UnityEngine::Vector4& GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_rightScaleBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::dyn_rightScaleBias");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightScaleBias"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/TextureRectMatrixf..cctor
void GlobalNamespace::OVRPlugin::TextureRectMatrixf::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/TextureRectMatrixf", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/TextureRectMatrixf.ToString
::StringW GlobalNamespace::OVRPlugin::TextureRectMatrixf::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TextureRectMatrixf::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/PoseStatef identity
::GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::PoseStatef::_get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::_get_identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::PoseStatef>("", "OVRPlugin/PoseStatef", "identity"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/PoseStatef identity
void GlobalNamespace::OVRPlugin::PoseStatef::_set_identity(::GlobalNamespace::OVRPlugin::PoseStatef value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::_set_identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/PoseStatef", "identity", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Posef Pose
[[deprecated]] ::GlobalNamespace::OVRPlugin::Posef& GlobalNamespace::OVRPlugin::PoseStatef::dyn_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_Pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Posef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f Velocity
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector3f& GlobalNamespace::OVRPlugin::PoseStatef::dyn_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Velocity"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector3f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f Acceleration
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector3f& GlobalNamespace::OVRPlugin::PoseStatef::dyn_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_Acceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Acceleration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector3f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f AngularVelocity
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector3f& GlobalNamespace::OVRPlugin::PoseStatef::dyn_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AngularVelocity"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector3f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f AngularAcceleration
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector3f& GlobalNamespace::OVRPlugin::PoseStatef::dyn_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_AngularAcceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AngularAcceleration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector3f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Time
[[deprecated]] double& GlobalNamespace::OVRPlugin::PoseStatef::dyn_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::dyn_Time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/PoseStatef..cctor
void GlobalNamespace::OVRPlugin::PoseStatef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::PoseStatef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/PoseStatef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/ControllerState4
#include "GlobalNamespace/OVRPlugin_ControllerState4.hpp"
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ConnectedControllers
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState4::dyn_ConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_ConnectedControllers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedControllers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Buttons
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Buttons");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buttons"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Touches
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Touches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Touches");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Touches"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NearTouches
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState4::dyn_NearTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_NearTouches");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NearTouches"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LIndexTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LIndexTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LIndexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RIndexTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RIndexTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RIndexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LHandTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LHandTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LHandTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RHandTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RHandTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RHandTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f LThumbstick
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LThumbstick");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f RThumbstick
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RThumbstick");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f LTouchpad
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LTouchpad");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f RTouchpad
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RTouchpad");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte LBatteryPercentRemaining
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LBatteryPercentRemaining");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LBatteryPercentRemaining"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte RBatteryPercentRemaining
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RBatteryPercentRemaining");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RBatteryPercentRemaining"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte LRecenterCount
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_LRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_LRecenterCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LRecenterCount"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte RRecenterCount
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_RRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_RRecenterCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RRecenterCount"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_27
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_26
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_25
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_24
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_23
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_22
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_21
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_20
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_19
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_18
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_17
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_16
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_15
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_14
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_13
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_12
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_11
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_10
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_09
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_09() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_09");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_09"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_08
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_08() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_08");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_08"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_07
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_07() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_07");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_07"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_06
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_06() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_06");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_06"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_05
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_05() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_05");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_05"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_04
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_04() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_04");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_04"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_03
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_03"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_02
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_02"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_01
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_01"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Reserved_00
[[deprecated]] uint8_t& GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::dyn_Reserved_00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reserved_00"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/ControllerState4..ctor
GlobalNamespace::OVRPlugin::ControllerState4::ControllerState4(::GlobalNamespace::OVRPlugin::ControllerState2 cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState4::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
// Including type: OVRPlugin/ControllerState
#include "GlobalNamespace/OVRPlugin_ControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ConnectedControllers
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState2::dyn_ConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_ConnectedControllers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedControllers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Buttons
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState2::dyn_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_Buttons");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buttons"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Touches
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState2::dyn_Touches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_Touches");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Touches"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NearTouches
[[deprecated]] uint& GlobalNamespace::OVRPlugin::ControllerState2::dyn_NearTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_NearTouches");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NearTouches"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LIndexTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState2::dyn_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_LIndexTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LIndexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RIndexTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState2::dyn_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_RIndexTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RIndexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LHandTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState2::dyn_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_LHandTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LHandTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RHandTrigger
[[deprecated]] float& GlobalNamespace::OVRPlugin::ControllerState2::dyn_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_RHandTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RHandTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f LThumbstick
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState2::dyn_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_LThumbstick");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f RThumbstick
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState2::dyn_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_RThumbstick");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f LTouchpad
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState2::dyn_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_LTouchpad");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f RTouchpad
[[deprecated]] ::GlobalNamespace::OVRPlugin::Vector2f& GlobalNamespace::OVRPlugin::ControllerState2::dyn_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::dyn_RTouchpad");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Vector2f*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/ControllerState2..ctor
GlobalNamespace::OVRPlugin::ControllerState2::ControllerState2(::GlobalNamespace::OVRPlugin::ControllerState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ControllerState2::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Sizei zero
::GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::Sizei::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Sizei>("", "OVRPlugin/Sizei", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Sizei zero
void GlobalNamespace::OVRPlugin::Sizei::_set_zero(::GlobalNamespace::OVRPlugin::Sizei value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Sizei", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 w
[[deprecated]] int& GlobalNamespace::OVRPlugin::Sizei::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 h
[[deprecated]] int& GlobalNamespace::OVRPlugin::Sizei::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Sizei..cctor
void GlobalNamespace::OVRPlugin::Sizei::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Sizei", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Sizei.Equals
bool GlobalNamespace::OVRPlugin::Sizei::Equals(::GlobalNamespace::OVRPlugin::Sizei other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::OVRPlugin::Sizei), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OVRPlugin/Sizei.Equals
bool GlobalNamespace::OVRPlugin::Sizei::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPlugin/Sizei.GetHashCode
int GlobalNamespace::OVRPlugin::Sizei::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizei::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Sizef
#include "GlobalNamespace/OVRPlugin_Sizef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Sizef zero
::GlobalNamespace::OVRPlugin::Sizef GlobalNamespace::OVRPlugin::Sizef::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizef::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Sizef>("", "OVRPlugin/Sizef", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Sizef zero
void GlobalNamespace::OVRPlugin::Sizef::_set_zero(::GlobalNamespace::OVRPlugin::Sizef value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizef::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Sizef", "zero", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated]] float& GlobalNamespace::OVRPlugin::Sizef::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizef::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single h
[[deprecated]] float& GlobalNamespace::OVRPlugin::Sizef::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizef::dyn_h");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/Sizef..cctor
void GlobalNamespace::OVRPlugin::Sizef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Sizef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Sizef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0x697A94
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoundaryType OuterBoundary
::GlobalNamespace::OVRPlugin::BoundaryType GlobalNamespace::OVRPlugin::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoundaryType>("", "OVRPlugin/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoundaryType OuterBoundary
void GlobalNamespace::OVRPlugin::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRPlugin::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoundaryType PlayArea
::GlobalNamespace::OVRPlugin::BoundaryType GlobalNamespace::OVRPlugin::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoundaryType>("", "OVRPlugin/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoundaryType PlayArea
void GlobalNamespace::OVRPlugin::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRPlugin::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerLayout Stereo
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVRPlugin::LayerLayout::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerLayout>("", "OVRPlugin/LayerLayout", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerLayout Stereo
void GlobalNamespace::OVRPlugin::LayerLayout::_set_Stereo(::GlobalNamespace::OVRPlugin::LayerLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerLayout", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerLayout Mono
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVRPlugin::LayerLayout::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerLayout>("", "OVRPlugin/LayerLayout", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerLayout Mono
void GlobalNamespace::OVRPlugin::LayerLayout::_set_Mono(::GlobalNamespace::OVRPlugin::LayerLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerLayout", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerLayout DoubleWide
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVRPlugin::LayerLayout::_get_DoubleWide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_get_DoubleWide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerLayout>("", "OVRPlugin/LayerLayout", "DoubleWide"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerLayout DoubleWide
void GlobalNamespace::OVRPlugin::LayerLayout::_set_DoubleWide(::GlobalNamespace::OVRPlugin::LayerLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_set_DoubleWide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerLayout", "DoubleWide", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerLayout Array
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVRPlugin::LayerLayout::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerLayout>("", "OVRPlugin/LayerLayout", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerLayout Array
void GlobalNamespace::OVRPlugin::LayerLayout::_set_Array(::GlobalNamespace::OVRPlugin::LayerLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerLayout", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerLayout EnumSize
::GlobalNamespace::OVRPlugin::LayerLayout GlobalNamespace::OVRPlugin::LayerLayout::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerLayout>("", "OVRPlugin/LayerLayout", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerLayout EnumSize
void GlobalNamespace::OVRPlugin::LayerLayout::_set_EnumSize(::GlobalNamespace::OVRPlugin::LayerLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerLayout", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::LayerLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/LayerFlags
#include "GlobalNamespace/OVRPlugin_LayerFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags Static
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "Static"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags Static
void GlobalNamespace::OVRPlugin::LayerFlags::_set_Static(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags LoadingScreen
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_LoadingScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_LoadingScreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "LoadingScreen"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags LoadingScreen
void GlobalNamespace::OVRPlugin::LayerFlags::_set_LoadingScreen(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_LoadingScreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "LoadingScreen", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags SymmetricFov
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_SymmetricFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_SymmetricFov");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "SymmetricFov"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags SymmetricFov
void GlobalNamespace::OVRPlugin::LayerFlags::_set_SymmetricFov(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_SymmetricFov");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "SymmetricFov", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags TextureOriginAtBottomLeft
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_TextureOriginAtBottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_TextureOriginAtBottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "TextureOriginAtBottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags TextureOriginAtBottomLeft
void GlobalNamespace::OVRPlugin::LayerFlags::_set_TextureOriginAtBottomLeft(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_TextureOriginAtBottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "TextureOriginAtBottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags ChromaticAberrationCorrection
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_ChromaticAberrationCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_ChromaticAberrationCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "ChromaticAberrationCorrection"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags ChromaticAberrationCorrection
void GlobalNamespace::OVRPlugin::LayerFlags::_set_ChromaticAberrationCorrection(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_ChromaticAberrationCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "ChromaticAberrationCorrection", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags NoAllocation
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_NoAllocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_NoAllocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "NoAllocation"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags NoAllocation
void GlobalNamespace::OVRPlugin::LayerFlags::_set_NoAllocation(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_NoAllocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "NoAllocation", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags ProtectedContent
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_ProtectedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_ProtectedContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "ProtectedContent"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags ProtectedContent
void GlobalNamespace::OVRPlugin::LayerFlags::_set_ProtectedContent(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_ProtectedContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "ProtectedContent", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags AndroidSurfaceSwapChain
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_AndroidSurfaceSwapChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_AndroidSurfaceSwapChain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "AndroidSurfaceSwapChain"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags AndroidSurfaceSwapChain
void GlobalNamespace::OVRPlugin::LayerFlags::_set_AndroidSurfaceSwapChain(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_AndroidSurfaceSwapChain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "AndroidSurfaceSwapChain", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/LayerFlags BicubicFiltering
::GlobalNamespace::OVRPlugin::LayerFlags GlobalNamespace::OVRPlugin::LayerFlags::_get_BicubicFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_get_BicubicFiltering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::LayerFlags>("", "OVRPlugin/LayerFlags", "BicubicFiltering"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/LayerFlags BicubicFiltering
void GlobalNamespace::OVRPlugin::LayerFlags::_set_BicubicFiltering(::GlobalNamespace::OVRPlugin::LayerFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::_set_BicubicFiltering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/LayerFlags", "BicubicFiltering", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::LayerFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/OverlayShape Shape
[[deprecated]] ::GlobalNamespace::OVRPlugin::OverlayShape& GlobalNamespace::OVRPlugin::LayerDesc::dyn_Shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_Shape");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Shape"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::OverlayShape*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/LayerLayout Layout
[[deprecated]] ::GlobalNamespace::OVRPlugin::LayerLayout& GlobalNamespace::OVRPlugin::LayerDesc::dyn_Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_Layout");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Layout"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::LayerLayout*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Sizei TextureSize
[[deprecated]] ::GlobalNamespace::OVRPlugin::Sizei& GlobalNamespace::OVRPlugin::LayerDesc::dyn_TextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_TextureSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Sizei*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MipLevels
[[deprecated]] int& GlobalNamespace::OVRPlugin::LayerDesc::dyn_MipLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_MipLevels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MipLevels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SampleCount
[[deprecated]] int& GlobalNamespace::OVRPlugin::LayerDesc::dyn_SampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_SampleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/EyeTextureFormat Format
[[deprecated]] ::GlobalNamespace::OVRPlugin::EyeTextureFormat& GlobalNamespace::OVRPlugin::LayerDesc::dyn_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_Format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Format"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LayerFlags
[[deprecated]] int& GlobalNamespace::OVRPlugin::LayerDesc::dyn_LayerFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_LayerFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LayerFlags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Fovf[] Fov
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Fovf>& GlobalNamespace::OVRPlugin::LayerDesc::dyn_Fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_Fov");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fov"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Fovf>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Rectf[] VisibleRect
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Rectf>& GlobalNamespace::OVRPlugin::LayerDesc::dyn_VisibleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_VisibleRect");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisibleRect"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Rectf>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Sizei MaxViewportSize
[[deprecated]] ::GlobalNamespace::OVRPlugin::Sizei& GlobalNamespace::OVRPlugin::LayerDesc::dyn_MaxViewportSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_MaxViewportSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxViewportSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Sizei*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/EyeTextureFormat DepthFormat
[[deprecated]] ::GlobalNamespace::OVRPlugin::EyeTextureFormat& GlobalNamespace::OVRPlugin::LayerDesc::dyn_DepthFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_DepthFormat");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DepthFormat"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/EyeTextureFormat MotionVectorFormat
[[deprecated]] ::GlobalNamespace::OVRPlugin::EyeTextureFormat& GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorFormat");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MotionVectorFormat"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/EyeTextureFormat MotionVectorDepthFormat
[[deprecated]] ::GlobalNamespace::OVRPlugin::EyeTextureFormat& GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorDepthFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorDepthFormat");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MotionVectorDepthFormat"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::EyeTextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Sizei MotionVectorTextureSize
[[deprecated]] ::GlobalNamespace::OVRPlugin::Sizei& GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::dyn_MotionVectorTextureSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MotionVectorTextureSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::Sizei*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPlugin/LayerDesc.ToString
::StringW GlobalNamespace::OVRPlugin::LayerDesc::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::LayerDesc::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/BlendFactor
#include "GlobalNamespace/OVRPlugin_BlendFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor Zero
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor Zero
void GlobalNamespace::OVRPlugin::BlendFactor::_set_Zero(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor One
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor One
void GlobalNamespace::OVRPlugin::BlendFactor::_set_One(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor SrcAlpha
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_SrcAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_SrcAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "SrcAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor SrcAlpha
void GlobalNamespace::OVRPlugin::BlendFactor::_set_SrcAlpha(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_SrcAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "SrcAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor OneMinusSrcAlpha
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_OneMinusSrcAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_OneMinusSrcAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "OneMinusSrcAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor OneMinusSrcAlpha
void GlobalNamespace::OVRPlugin::BlendFactor::_set_OneMinusSrcAlpha(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_OneMinusSrcAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "OneMinusSrcAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor DstAlpha
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_DstAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_DstAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "DstAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor DstAlpha
void GlobalNamespace::OVRPlugin::BlendFactor::_set_DstAlpha(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_DstAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "DstAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BlendFactor OneMinusDstAlpha
::GlobalNamespace::OVRPlugin::BlendFactor GlobalNamespace::OVRPlugin::BlendFactor::_get_OneMinusDstAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_get_OneMinusDstAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BlendFactor>("", "OVRPlugin/BlendFactor", "OneMinusDstAlpha"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BlendFactor OneMinusDstAlpha
void GlobalNamespace::OVRPlugin::BlendFactor::_set_OneMinusDstAlpha(::GlobalNamespace::OVRPlugin::BlendFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::_set_OneMinusDstAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BlendFactor", "OneMinusDstAlpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::BlendFactor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BlendFactor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TrackingConfidence
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingConfidence Low
::GlobalNamespace::OVRPlugin::TrackingConfidence GlobalNamespace::OVRPlugin::TrackingConfidence::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingConfidence::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingConfidence>("", "OVRPlugin/TrackingConfidence", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingConfidence Low
void GlobalNamespace::OVRPlugin::TrackingConfidence::_set_Low(::GlobalNamespace::OVRPlugin::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingConfidence::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingConfidence", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingConfidence High
::GlobalNamespace::OVRPlugin::TrackingConfidence GlobalNamespace::OVRPlugin::TrackingConfidence::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingConfidence::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::TrackingConfidence>("", "OVRPlugin/TrackingConfidence", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingConfidence High
void GlobalNamespace::OVRPlugin::TrackingConfidence::_set_High(::GlobalNamespace::OVRPlugin::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingConfidence::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingConfidence", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::TrackingConfidence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::TrackingConfidence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand None
::GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand None
void GlobalNamespace::OVRPlugin::Hand::_set_None(::GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand HandLeft
::GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand HandLeft
void GlobalNamespace::OVRPlugin::Hand::_set_HandLeft(::GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand HandRight
::GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand HandRight
void GlobalNamespace::OVRPlugin::Hand::_set_HandRight(::GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Hand::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Hand::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandStatus
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus HandTracked
::GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_HandTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_get_HandTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "HandTracked"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus HandTracked
void GlobalNamespace::OVRPlugin::HandStatus::_set_HandTracked(::GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_set_HandTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "HandTracked", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus InputStateValid
::GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_InputStateValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_get_InputStateValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "InputStateValid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus InputStateValid
void GlobalNamespace::OVRPlugin::HandStatus::_set_InputStateValid(::GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_set_InputStateValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "InputStateValid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus SystemGestureInProgress
::GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_SystemGestureInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_get_SystemGestureInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "SystemGestureInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus SystemGestureInProgress
void GlobalNamespace::OVRPlugin::HandStatus::_set_SystemGestureInProgress(::GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_set_SystemGestureInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "SystemGestureInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus DominantHand
::GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_DominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_get_DominantHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "DominantHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus DominantHand
void GlobalNamespace::OVRPlugin::HandStatus::_set_DominantHand(::GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_set_DominantHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "DominantHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus MenuPressed
::GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_MenuPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_get_MenuPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "MenuPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus MenuPressed
void GlobalNamespace::OVRPlugin::HandStatus::_set_MenuPressed(::GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::_set_MenuPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "MenuPressed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::HandStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/BoneId
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Invalid
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Invalid
void GlobalNamespace::OVRPlugin::BoneId::_set_Invalid(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Start
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Start
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Start(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_WristRoot
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_WristRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_WristRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_WristRoot"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_WristRoot
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_WristRoot(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_WristRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_WristRoot", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_ForearmStub
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ForearmStub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ForearmStub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_ForearmStub"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_ForearmStub
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ForearmStub(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ForearmStub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_ForearmStub", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb0
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb0"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb0
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb0(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb1
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb1(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb2
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb2(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb3
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb3(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index1
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index1(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index2
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index2(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index3
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index3(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle1
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle1(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle2
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle2(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle3
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle3(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring1
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring1(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring2
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring2(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring3
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring3(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky0
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky0"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky0
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky0(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky1
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky1(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky2
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky2(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky3
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky3(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_MaxSkinnable
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MaxSkinnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MaxSkinnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_MaxSkinnable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_MaxSkinnable
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MaxSkinnable(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MaxSkinnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_MaxSkinnable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_ThumbTip
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_ThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_ThumbTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ThumbTip(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_ThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_IndexTip
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_IndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_IndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_IndexTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_IndexTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_IndexTip(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_IndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_IndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_MiddleTip
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_MiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_MiddleTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MiddleTip(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_MiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_RingTip
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_RingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_RingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_RingTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_RingTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_RingTip(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_RingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_RingTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_PinkyTip
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_PinkyTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_PinkyTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_PinkyTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_PinkyTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_PinkyTip(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_PinkyTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_PinkyTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_End
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Hand_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_End"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_End
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_End(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Hand_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Max
::GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Max
void GlobalNamespace::OVRPlugin::BoneId::_set_Max(::GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::BoneId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::BoneId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandFinger
#include "GlobalNamespace/OVRPlugin_HandFinger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Thumb
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Thumb
void GlobalNamespace::OVRPlugin::HandFinger::_set_Thumb(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Index
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Index
void GlobalNamespace::OVRPlugin::HandFinger::_set_Index(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Middle
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Middle
void GlobalNamespace::OVRPlugin::HandFinger::_set_Middle(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Ring
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Ring
void GlobalNamespace::OVRPlugin::HandFinger::_set_Ring(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Pinky
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Pinky
void GlobalNamespace::OVRPlugin::HandFinger::_set_Pinky(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Max
::GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Max
void GlobalNamespace::OVRPlugin::HandFinger::_set_Max(::GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::HandFinger::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFinger::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandFingerPinch
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Thumb
::GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Thumb
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Thumb(::GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Index
::GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Index
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Index(::GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Middle
::GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Middle
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Middle(::GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Ring
::GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Ring
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Ring(::GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Pinky
::GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Pinky
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Pinky(::GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Pinky", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::HandFingerPinch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::HandFingerPinch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SkeletonConstants
#include "GlobalNamespace/OVRPlugin_SkeletonConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonConstants MaxHandBones
::GlobalNamespace::OVRPlugin::SkeletonConstants GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxHandBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxHandBones");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonConstants>("", "OVRPlugin/SkeletonConstants", "MaxHandBones"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonConstants MaxHandBones
void GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxHandBones(::GlobalNamespace::OVRPlugin::SkeletonConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxHandBones");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonConstants", "MaxHandBones", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonConstants MaxBones
::GlobalNamespace::OVRPlugin::SkeletonConstants GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBones");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonConstants>("", "OVRPlugin/SkeletonConstants", "MaxBones"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonConstants MaxBones
void GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBones(::GlobalNamespace::OVRPlugin::SkeletonConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBones");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonConstants", "MaxBones", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonConstants MaxBoneCapsules
::GlobalNamespace::OVRPlugin::SkeletonConstants GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBoneCapsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBoneCapsules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonConstants>("", "OVRPlugin/SkeletonConstants", "MaxBoneCapsules"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonConstants MaxBoneCapsules
void GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBoneCapsules(::GlobalNamespace::OVRPlugin::SkeletonConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBoneCapsules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonConstants", "MaxBoneCapsules", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::SkeletonConstants::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonConstants::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SkeletonType
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType None
::GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType None
void GlobalNamespace::OVRPlugin::SkeletonType::_set_None(::GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType HandLeft
::GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType HandLeft
void GlobalNamespace::OVRPlugin::SkeletonType::_set_HandLeft(::GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType HandRight
::GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType HandRight
void GlobalNamespace::OVRPlugin::SkeletonType::_set_HandRight(::GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::SkeletonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::SkeletonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/MeshConstants
#include "GlobalNamespace/OVRPlugin_MeshConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshConstants MaxVertices
::GlobalNamespace::OVRPlugin::MeshConstants GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::MeshConstants>("", "OVRPlugin/MeshConstants", "MaxVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshConstants MaxVertices
void GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxVertices(::GlobalNamespace::OVRPlugin::MeshConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshConstants", "MaxVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshConstants MaxIndices
::GlobalNamespace::OVRPlugin::MeshConstants GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::MeshConstants>("", "OVRPlugin/MeshConstants", "MaxIndices"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshConstants MaxIndices
void GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxIndices(::GlobalNamespace::OVRPlugin::MeshConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshConstants", "MaxIndices", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::MeshConstants::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshConstants::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType None
::GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType None
void GlobalNamespace::OVRPlugin::MeshType::_set_None(::GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType HandLeft
::GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType HandLeft
void GlobalNamespace::OVRPlugin::MeshType::_set_HandLeft(::GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType HandRight
::GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType HandRight
void GlobalNamespace::OVRPlugin::MeshType::_set_HandRight(::GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "HandRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::MeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::MeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/MeshType Type
[[deprecated]] ::GlobalNamespace::OVRPlugin::MeshType& GlobalNamespace::OVRPlugin::Mesh::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::MeshType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumVertices
[[deprecated]] uint& GlobalNamespace::OVRPlugin::Mesh::dyn_NumVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_NumVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumVertices"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumIndices
[[deprecated]] uint& GlobalNamespace::OVRPlugin::Mesh::dyn_NumIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_NumIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumIndices"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f[] VertexPositions
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>& GlobalNamespace::OVRPlugin::Mesh::dyn_VertexPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_VertexPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16[] Indices
[[deprecated]] ::ArrayW<int16_t>& GlobalNamespace::OVRPlugin::Mesh::dyn_Indices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_Indices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Indices"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector3f[] VertexNormals
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>& GlobalNamespace::OVRPlugin::Mesh::dyn_VertexNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_VertexNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexNormals"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector3f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector2f[] VertexUV0
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector2f>& GlobalNamespace::OVRPlugin::Mesh::dyn_VertexUV0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_VertexUV0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexUV0"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector2f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector4s[] BlendIndices
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector4s>& GlobalNamespace::OVRPlugin::Mesh::dyn_BlendIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_BlendIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlendIndices"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector4s>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/Vector4f[] BlendWeights
[[deprecated]] ::ArrayW<::GlobalNamespace::OVRPlugin::Vector4f>& GlobalNamespace::OVRPlugin::Mesh::dyn_BlendWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Mesh::dyn_BlendWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlendWeights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRPlugin::Vector4f>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/ColorSpace
#include "GlobalNamespace/OVRPlugin_ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Unknown
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Unknown
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Unknown(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Unmanaged
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Unmanaged
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Unmanaged(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rec_2020
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rec_2020
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_2020(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rec_709
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rec_709
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_709(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rift_CV1
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rift_CV1
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_CV1(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Rift_S
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Rift_S
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_S(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Quest
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Quest
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Quest(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace P3
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace P3
void GlobalNamespace::OVRPlugin::ColorSpace::_set_P3(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/ColorSpace Adobe_RGB
::GlobalNamespace::OVRPlugin::ColorSpace GlobalNamespace::OVRPlugin::ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::ColorSpace>("", "OVRPlugin/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/ColorSpace Adobe_RGB
void GlobalNamespace::OVRPlugin::ColorSpace::_set_Adobe_RGB(::GlobalNamespace::OVRPlugin::ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::ColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::ColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/EventType
#include "GlobalNamespace/OVRPlugin_EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType Unknown
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType Unknown
void GlobalNamespace::OVRPlugin::EventType::_set_Unknown(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/EventType DisplayRefreshRateChanged
::GlobalNamespace::OVRPlugin::EventType GlobalNamespace::OVRPlugin::EventType::_get_DisplayRefreshRateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_get_DisplayRefreshRateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::EventType>("", "OVRPlugin/EventType", "DisplayRefreshRateChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/EventType DisplayRefreshRateChanged
void GlobalNamespace::OVRPlugin::EventType::_set_DisplayRefreshRateChanged(::GlobalNamespace::OVRPlugin::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::_set_DisplayRefreshRateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/EventType", "DisplayRefreshRateChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/InsightPassthroughColorMapType
#include "GlobalNamespace/OVRPlugin_InsightPassthroughColorMapType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType None
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType None
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_None(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToRgba
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToRgba() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToRgba");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToRgba"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToRgba
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToRgba(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToRgba");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToRgba", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToMono
::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToMono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_get_MonoToMono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType>("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToMono"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughColorMapType MonoToMono
void GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToMono(::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::_set_MonoToMono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughColorMapType", "MonoToMono", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughColorMapType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/InsightPassthroughStyleFlags
#include "GlobalNamespace/OVRPlugin_InsightPassthroughStyleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureOpacityFactor
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureOpacityFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureOpacityFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureOpacityFactor"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureOpacityFactor
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureOpacityFactor(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureOpacityFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureOpacityFactor", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasEdgeColor
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasEdgeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasEdgeColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasEdgeColor"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasEdgeColor
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasEdgeColor(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasEdgeColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasEdgeColor", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureColorMap
::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureColorMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_get_HasTextureColorMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags>("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureColorMap"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/InsightPassthroughStyleFlags HasTextureColorMap
void GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureColorMap(::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::_set_HasTextureColorMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/InsightPassthroughStyleFlags", "HasTextureColorMap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::InsightPassthroughStyleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D cachedTexture
::UnityEngine::Texture2D* GlobalNamespace::OVRPlugin::Media::_get_cachedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::_get_cachedTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture2D*>("", "OVRPlugin/Media", "cachedTexture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D cachedTexture
void GlobalNamespace::OVRPlugin::Media::_set_cachedTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::_set_cachedTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media", "cachedTexture", value));
}
// Autogenerated method: OVRPlugin/Media..cctor
void GlobalNamespace::OVRPlugin::Media::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Initialize
bool GlobalNamespace::OVRPlugin::Media::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Shutdown
bool GlobalNamespace::OVRPlugin::Media::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetInitialized
bool GlobalNamespace::OVRPlugin::Media::GetInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Update
bool GlobalNamespace::OVRPlugin::Media::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetMrcActivationMode
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcActivationMode
bool GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: OVRPlugin/Media.SetPlatformInitialized
bool GlobalNamespace::OVRPlugin::Media::SetPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetPlatformInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetPlatformInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetPlatformCameraMode
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::GetPlatformCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetPlatformCameraMode
bool GlobalNamespace::OVRPlugin::Media::SetPlatformCameraMode(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetPlatformCameraMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetPlatformCameraMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: OVRPlugin/Media.IsMrcEnabled
bool GlobalNamespace::OVRPlugin::Media::IsMrcEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.IsMrcActivated
bool GlobalNamespace::OVRPlugin::Media::IsMrcActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.UseMrcDebugCamera
bool GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcInputVideoBufferType
bool GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType videoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(videoBufferType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, videoBufferType);
}
// Autogenerated method: OVRPlugin/Media.GetMrcInputVideoBufferType
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameSize
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameWidth), ::il2cpp_utils::ExtractType(frameHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameSize
void GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize(ByRef<int> frameWidth, ByRef<int> frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(frameWidth), byref(frameHeight));
}
// Autogenerated method: OVRPlugin/Media.SetMrcAudioSampleRate
bool GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/Media.GetMrcAudioSampleRate
int GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped(bool imageFlipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(imageFlipped)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, imageFlipped);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(::System::IntPtr textureHandle, ::System::IntPtr fgTextureHandle, ::ArrayW<float> audioData, int audioFrames, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureHandle), ::il2cpp_utils::ExtractType(fgTextureHandle), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioFrames), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textureHandle, fgTextureHandle, audioData, audioFrames, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(::UnityEngine::RenderTexture* frame, ::ArrayW<float> audioData, int audioFrames, int audioChannels, double timestamp, double poseTime, ByRef<int> outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractType(audioFrames), ::il2cpp_utils::ExtractType(audioChannels), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(poseTime), ::il2cpp_utils::ExtractType(outSyncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame, audioData, audioFrames, audioChannels, timestamp, poseTime, byref(outSyncId));
}
// Autogenerated method: OVRPlugin/Media.SyncMrcFrame
bool GlobalNamespace::OVRPlugin::Media::SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SyncMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/Media.SetAvailableQueueIndexVulkan
bool GlobalNamespace::OVRPlugin::Media::SetAvailableQueueIndexVulkan(uint queueIndexVk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetAvailableQueueIndexVulkan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetAvailableQueueIndexVulkan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queueIndexVk)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, queueIndexVk);
}
// Autogenerated method: OVRPlugin/Media.SetMrcHeadsetControllerPose
bool GlobalNamespace::OVRPlugin::Media::SetMrcHeadsetControllerPose(::GlobalNamespace::OVRPlugin::Posef headsetPose, ::GlobalNamespace::OVRPlugin::Posef leftControllerPose, ::GlobalNamespace::OVRPlugin::Posef rightControllerPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::SetMrcHeadsetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcHeadsetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headsetPose), ::il2cpp_utils::ExtractType(leftControllerPose), ::il2cpp_utils::ExtractType(rightControllerPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headsetPose, leftControllerPose, rightControllerPose);
}
// Autogenerated method: OVRPlugin/Media.IsCastingToRemoteClient
bool GlobalNamespace::OVRPlugin::Media::IsCastingToRemoteClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::IsCastingToRemoteClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsCastingToRemoteClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Automatic
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Automatic
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Disabled
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Disabled
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
::GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Media::MrcActivationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::MrcActivationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/PlatformCameraMode
#include "GlobalNamespace/OVRPlugin_Media_PlatformCameraMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode Disabled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode Disabled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Disabled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode Initialized
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode Initialized
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Initialized(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode UserControlled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_UserControlled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_UserControlled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "UserControlled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode UserControlled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_UserControlled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_UserControlled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "UserControlled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode SmartNavigated
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SmartNavigated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SmartNavigated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "SmartNavigated"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode SmartNavigated
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SmartNavigated(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SmartNavigated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "SmartNavigated", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode StabilizedPoV
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_StabilizedPoV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_StabilizedPoV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "StabilizedPoV"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode StabilizedPoV
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_StabilizedPoV(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_StabilizedPoV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "StabilizedPoV", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode RemoteDroneControlled
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteDroneControlled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteDroneControlled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "RemoteDroneControlled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode RemoteDroneControlled
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteDroneControlled(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteDroneControlled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "RemoteDroneControlled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode RemoteSpatialMapped
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteSpatialMapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_RemoteSpatialMapped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "RemoteSpatialMapped"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode RemoteSpatialMapped
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteSpatialMapped(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_RemoteSpatialMapped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "RemoteSpatialMapped", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode SpectatorMode
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SpectatorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_SpectatorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "SpectatorMode"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode SpectatorMode
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SpectatorMode(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_SpectatorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "SpectatorMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode MobileMRC
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_MobileMRC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_MobileMRC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "MobileMRC"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode MobileMRC
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_MobileMRC(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_MobileMRC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "MobileMRC", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/PlatformCameraMode EnumSize
::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode>("", "OVRPlugin/Media/PlatformCameraMode", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/PlatformCameraMode EnumSize
void GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/PlatformCameraMode", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::PlatformCameraMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType Memory
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "Memory"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType Memory
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "Memory", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize(::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Ktx
#include "GlobalNamespace/OVRPlugin_Ktx.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPlugin/Ktx.LoadKtxFromMemory
::System::IntPtr GlobalNamespace::OVRPlugin::Ktx::LoadKtxFromMemory(::System::IntPtr dataPtr, uint length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::LoadKtxFromMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "LoadKtxFromMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataPtr), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataPtr, length);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureWidth
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureWidth(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureHeight
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureHeight(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.TranscodeKtxTexture
bool GlobalNamespace::OVRPlugin::Ktx::TranscodeKtxTexture(::System::IntPtr texture, uint format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::TranscodeKtxTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "TranscodeKtxTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, format);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureSize
uint GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureSize(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: OVRPlugin/Ktx.GetKtxTextureData
bool GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureData(::System::IntPtr texture, ::System::IntPtr textureData, uint bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::GetKtxTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "GetKtxTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(textureData), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, textureData, bufferSize);
}
// Autogenerated method: OVRPlugin/Ktx.DestroyKtxTexture
bool GlobalNamespace::OVRPlugin::Ktx::DestroyKtxTexture(::System::IntPtr texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::Ktx::DestroyKtxTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/Ktx", "DestroyKtxTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0.ovrp_GetEyeTextureSize
::GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize(::GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", "ovrp_GetEyeTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Sizei, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_1
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_1.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_1", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_1", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1.ovrp_SetOverlayQuad2
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2(::GlobalNamespace::OVRPlugin::Bool onTop, ::GlobalNamespace::OVRPlugin::Bool headLocked, ::System::IntPtr texture, ::System::IntPtr device, ::GlobalNamespace::OVRPlugin::Posef pose, ::GlobalNamespace::OVRPlugin::Vector3f scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", "ovrp_SetOverlayQuad2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onTop), ::il2cpp_utils::ExtractType(headLocked), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onTop, headLocked, texture, device, pose, scale);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_2
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_2.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_2", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_2", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_GetNodePose
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_SetControllerVibration
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration(uint controllerMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask, frequency, amplitude);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_3
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_3.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_1_3", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_3", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeVelocity
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeAcceleration
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration(::GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_5_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_0_5_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_5_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_5_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_0_5_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_5_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_0_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_0_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRPlugin/OVRP_1_0_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_0_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingOriginType
::GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::TrackingOrigin, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_SetTrackingOriginType
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType(::GlobalNamespace::OVRPlugin::TrackingOrigin originType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_SetTrackingOriginType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originType);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingCalibratedOrigin
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_RecenterTrackingOrigin
::GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin(uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_RecenterTrackingOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
