// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String AccessToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_AccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_AccessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ServiceProvider ServiceProvider
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ServiceProvider& Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_ServiceProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServiceProvider"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ServiceProvider*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LinkedAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LinkedAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccount
#include "Oculus/Platform/Models/LinkedAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean StreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LivestreamingStartStatus StreamingResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LivestreamingStartStatus& Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LivestreamingStartStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CommentsVisible
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsPaused
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean LivestreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LivestreamingType
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CommentCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ReactionCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TotalViews
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalViews"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList Candidates
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList*& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Candidates"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CanMatch
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TraceId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TraceId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult EnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.RoomList Rooms
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::RoomList*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rooms"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::RoomList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshotOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshotOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshot
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshot"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 AverageWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AverageWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MatchesInLastHourCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchesInLastHourCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxExpectedWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxExpectedWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Pool
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pool"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 RecentMatchPercentage
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecentMatchPercentage"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String RequestHash
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult MatchmakingEnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingEnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User UserOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 DrawCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 LossCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_LossCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_LossCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 SkillLevel
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillMean
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillMean"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillStandardDeviation
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillStandardDeviation"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 WinCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_WinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_WinCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WinCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicrophoneAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncDisconnectReason DisconnectReason
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncDisconnectReason& Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectReason"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncDisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncConnection::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncConnectionStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncConnectionStatus& Oculus::Platform::Models::NetSyncConnection::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncConnectionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ZoneId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Muted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::NetSyncSession::dyn_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VoipGroup
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoipGroup"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSessionList Sessions
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSessionList*& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sessions"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSessionList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSession Session
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSession*& Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Session"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Decibels
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decibels"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Distance
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
::Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::OrgScopedID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::OrgScopedID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Party::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User LeaderOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_LeaderOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_LeaderOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Leader
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_Leader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Leader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leader"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PartyUpdateAction Action
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PartyUpdateAction& Oculus::Platform::Models::PartyUpdateNotification::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PartyUpdateAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 PartyId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PartyId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UpdateTimestamp
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTimestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserAlias
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Id
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Pid::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Pid::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.UInt64> pingTimeUsec
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint64_t>& Oculus::Platform::Models::PingResult::dyn_pingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_pingTimeUsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTimeUsec"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PlatformInitializeResult Result
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PlatformInitializeResult& Oculus::Platform::Models::PlatformInitialize::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PlatformInitialize::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PlatformInitializeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String FormattedPrice
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_FormattedPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_FormattedPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormattedPrice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime ExpirationTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime GrantTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_GrantTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_GrantTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrantTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RejoinDialogResult
#include "Oculus/Platform/Models/RejoinDialogResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean RejoinSelected
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::RejoinDialogResult::dyn_RejoinSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RejoinDialogResult::dyn_RejoinSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RejoinSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ApplicationID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ApplicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ApplicationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> DataStore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::Room::dyn_DataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_DataStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataStore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsMembershipLocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::Room::dyn_IsMembershipLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_IsMembershipLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsMembershipLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinPolicy JoinPolicy
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinPolicy& Oculus::Platform::Models::Room::dyn_JoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_JoinPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinPolicy"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinability Joinability
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinability& Oculus::Platform::Models::Room::dyn_Joinability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Joinability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joinability"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinability*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxUsers
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User OwnerOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_OwnerOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_OwnerOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Owner
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Owner"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList TeamsOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_TeamsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_TeamsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList Teams
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_Teams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Teams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teams"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomType Type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomType& Oculus::Platform::Models::Room::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 Version
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime SentTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.ApplicationInviteList Invites
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::ApplicationInviteList*& Oculus::Platform::Models::SendInvitesResult::dyn_Invites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SendInvitesResult::dyn_Invites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Invites"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::ApplicationInviteList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Metric
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_Metric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_Metric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metric"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList AssignedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Team::dyn_AssignedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_AssignedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MaxUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MinUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MinUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MinUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Team::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String InviteToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_InviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_InviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceLobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceLobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceLobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceLobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceMatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceMatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceMatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceMatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::UserAndRoom::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.P2PManager
#include "Oculus/Platform/Samples/VrVoiceChat/P2PManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single UPDATE_DELAY
float Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_UPDATE_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_UPDATE_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "UPDATE_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single UPDATE_DELAY
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_UPDATE_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_UPDATE_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "UPDATE_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte PACKET_SIZE
uint8_t Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte PACKET_SIZE
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_SIZE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte PACKET_FORMAT
uint8_t Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte PACKET_FORMAT
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_FORMAT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_FORMAT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_remoteID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_remoteID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_remoteID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState m_state
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeForNextUpdate
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_timeForNextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_timeForNextUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeForNextUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] sendTransformBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_sendTransformBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_sendTransformBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendTransformBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] receiveTransformBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receiveTransformBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receiveTransformBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveTransformBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 receivedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 receivedPositionPrior
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPositionPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPositionPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedPositionPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion receivedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion receivedRotationPrior
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotationPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotationPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRotationPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single receivedTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.get_Connected
bool Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.get_ShouldSendHeadUpdate
bool Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_ShouldSendHeadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_ShouldSendHeadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldSendHeadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.ConnectTo
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.Disconnect
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.PeerConnectRequestCallback
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::PeerConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::PeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.ConnectionStateChangedCallback
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectionStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.SendHeadTransform
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::SendHeadTransform(::UnityEngine::Transform* headTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::SendHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headTransform);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.PackFloat
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::PackFloat(float f, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::PackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.GetRemoteHeadTransform
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::GetRemoteHeadTransform(::UnityEngine::Transform* headTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::GetRemoteHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoteHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headTransform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager_--c__DisplayClass31_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.P2PManager
#include "Oculus/Platform/Samples/VrVoiceChat/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.VoipManager
#include "Oculus/Platform/Samples/VrVoiceChat/VoipManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrVoiceChat.PlatformManager s_instance
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager* Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager*>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrVoiceChat.PlatformManager s_instance
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_invitesList
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitesList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invitesList"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_invitePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invitePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_remoteHead
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_remoteHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_remoteHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State m_currentState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.RoomManager m_roomManager
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrVoiceChat::RoomManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_roomManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_roomManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roomManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::RoomManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.P2PManager m_p2pManager
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrVoiceChat::P2PManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_p2pManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_p2pManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2pManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::P2PManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.VoipManager m_voipManager
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrVoiceChat::VoipManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_voipManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_voipManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_voipManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::VoipManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_CurrentState
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Update
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Awake
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Start
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.OnApplicationQuit
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.CallFriendOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::CallFriendOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::CallFriendOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallFriendOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.HangupOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::HangupOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::HangupOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HangupOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.QuitOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::QuitOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::QuitOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.AnswerCallOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::AnswerCallOnClick(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::AnswerCallOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "AnswerCallOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.TransitionToState
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TransitionToState(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newState);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.SetBackgroundColorForState
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetBackgroundColorForState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetBackgroundColorForState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "SetBackgroundColorForState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.SetActiveInvites
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetActiveInvites(::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>* invites) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetActiveInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "SetActiveInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invites)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invites);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State INITIALIZING
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_INITIALIZING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_INITIALIZING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "INITIALIZING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State INITIALIZING
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_INITIALIZING(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_INITIALIZING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "INITIALIZING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_TO_CALL_OR_ANSWER
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_TO_CALL_OR_ANSWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_TO_CALL_OR_ANSWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_TO_CALL_OR_ANSWER"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_TO_CALL_OR_ANSWER
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_TO_CALL_OR_ANSWER(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_TO_CALL_OR_ANSWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_TO_CALL_OR_ANSWER", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_FOR_ANSWER
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_FOR_ANSWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_FOR_ANSWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_FOR_ANSWER"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_FOR_ANSWER
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_FOR_ANSWER(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_FOR_ANSWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_FOR_ANSWER", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State CONNECTED_IN_A_ROOM
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_CONNECTED_IN_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_CONNECTED_IN_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "CONNECTED_IN_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State CONNECTED_IN_A_ROOM
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_CONNECTED_IN_A_ROOM(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_CONNECTED_IN_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "CONNECTED_IN_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State HANGUP
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_HANGUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_HANGUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "HANGUP"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State HANGUP
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_HANGUP(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_HANGUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "HANGUP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager_--c__DisplayClass31_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite invite
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::dyn_invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::dyn_invite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invite"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0.<SetActiveInvites>b__0
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::$SetActiveInvites$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::<SetActiveInvites>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetActiveInvites>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.RoomManager
#include "Oculus/Platform/Samples/VrVoiceChat/RoomManager.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single INVITE_POLL_FREQ_SECONDS
float Oculus::Platform::Samples::VrVoiceChat::RoomManager::_get_INVITE_POLL_FREQ_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::_get_INVITE_POLL_FREQ_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", "INVITE_POLL_FREQ_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single INVITE_POLL_FREQ_SECONDS
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::_set_INVITE_POLL_FREQ_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::_set_INVITE_POLL_FREQ_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", "INVITE_POLL_FREQ_SECONDS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_roomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_roomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_roomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_remoteUser
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_remoteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_remoteUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextPollTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_nextPollTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_nextPollTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextPollTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> m_pendingRoomRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_pendingRoomRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_pendingRoomRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingRoomRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite> m_invites
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_invites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_invites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invites"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_RemoteUserID
uint64_t Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_RemoteOculusID
::StringW Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_ShouldPollInviteList
bool Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_ShouldPollInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_ShouldPollInviteList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldPollInviteList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.LaunchedFromAcceptingInviteCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::LaunchedFromAcceptingInviteCallback(::Oculus::Platform::Message_1<::StringW>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::LaunchedFromAcceptingInviteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchedFromAcceptingInviteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CheckForLaunchInvite
bool Oculus::Platform::Samples::VrVoiceChat::RoomManager::CheckForLaunchInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CheckForLaunchInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForLaunchInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CreateRoomAndLaunchInviteMenu
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateRoomAndLaunchInviteMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateRoomAndLaunchInviteMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRoomAndLaunchInviteMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CreateAndJoinPrivateRoomCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateAndJoinPrivateRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateAndJoinPrivateRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndJoinPrivateRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.OnLaunchInviteWorkflowComplete
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::OnLaunchInviteWorkflowComplete(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::OnLaunchInviteWorkflowComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchInviteWorkflowComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.UpdateActiveInvitesList
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::UpdateActiveInvitesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::UpdateActiveInvitesList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActiveInvitesList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.GetRoomInviteNotificationsCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInviteNotificationsCallback(::Oculus::Platform::Message* msg_untyped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInviteNotificationsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg_untyped)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg_untyped);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.GetRoomInfoCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInfoCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInfoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInfoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.JoinExistingRoom
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinExistingRoom(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinExistingRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinExistingRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.JoinRoomCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.RoomUpdateCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::RoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::RoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.LeaveCurrentRoom
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::LeaveCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::LeaveCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite
#include "Oculus/Platform/Samples/VrVoiceChat/RoomManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_RoomID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OwnerID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_OwnerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_OwnerID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite..ctor
// ABORTED elsewhere.  Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::Invite(uint64_t roomID, ::StringW owner)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.VREyeRaycaster
#include "Oculus/Platform/Samples/VrVoiceChat/VREyeRaycaster.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VREyeRaycaster.Update
void Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.VoipManager
#include "Oculus/Platform/Samples/VrVoiceChat/VoipManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_remoteID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState m_state
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.GameObject m_remoteHead
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.get_Connected
bool Oculus::Platform::Samples::VrVoiceChat::VoipManager::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.ConnectTo
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.Disconnect
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.VoipConnectRequestCallback
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.VoipStateChangedCallback
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.AIPlayer
#include "Oculus/Platform/Samples/VrHoops/AIPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AIPlayer.FixedUpdate
void Oculus::Platform::Samples::VrHoops::AIPlayer::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AIPlayer::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.AchievementsManager
#include "Oculus/Platform/Samples/VrHoops/AchievementsManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LIKES_TO_WIN
::StringW Oculus::Platform::Samples::VrHoops::AchievementsManager::_get_LIKES_TO_WIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::_get_LIKES_TO_WIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "AchievementsManager", "LIKES_TO_WIN"));
}
// Autogenerated static field setter
// Set static field: static private System.String LIKES_TO_WIN
void Oculus::Platform::Samples::VrHoops::AchievementsManager::_set_LIKES_TO_WIN(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::_set_LIKES_TO_WIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "AchievementsManager", "LIKES_TO_WIN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_likesToWinUnlocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::VrHoops::AchievementsManager::dyn_m_likesToWinUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::dyn_m_likesToWinUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_likesToWinUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.get_LikesToWin
bool Oculus::Platform::Samples::VrHoops::AchievementsManager::get_LikesToWin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::get_LikesToWin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LikesToWin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.CheckForAchievmentUpdates
void Oculus::Platform::Samples::VrHoops::AchievementsManager::CheckForAchievmentUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::CheckForAchievmentUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAchievmentUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.RecordWinForLocalUser
void Oculus::Platform::Samples::VrHoops::AchievementsManager::RecordWinForLocalUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::RecordWinForLocalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordWinForLocalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.<CheckForAchievmentUpdates>b__4_0
void Oculus::Platform::Samples::VrHoops::AchievementsManager::$CheckForAchievmentUpdates$b__4_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementProgressList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::<CheckForAchievmentUpdates>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForAchievmentUpdates>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.BallEjector
#include "Oculus/Platform/Samples/VrHoops/BallEjector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.Camera2DController
#include "Oculus/Platform/Samples/VrHoops/Camera2DController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Camera2DController.Update
void Oculus::Platform::Samples::VrHoops::Camera2DController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Camera2DController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.DetectBasket
#include "Oculus/Platform/Samples/VrHoops/DetectBasket.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase m_phase
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase& Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_phase"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.Player m_owningPlayer
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::Player*& Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_owningPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_owningPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_owningPlayer"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.set_Player
void Oculus::Platform::Samples::VrHoops::DetectBasket::set_Player(::Oculus::Platform::Samples::VrHoops::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::set_Player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.OnTriggerEnter
void Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.OnTriggerExit
void Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase
#include "Oculus/Platform/Samples/VrHoops/DetectBasket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase NONE
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase NONE
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_NONE(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase TOP
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_TOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_TOP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "TOP"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase TOP
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_TOP(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_TOP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "TOP", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTH
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTH
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTH(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTTOM
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTTOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTTOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTTOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTTOM
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTTOM(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTTOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTTOM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.FlyText
#include "Oculus/Platform/Samples/VrHoops/FlyText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single LIFESPAN
float Oculus::Platform::Samples::VrHoops::FlyText::_get_LIFESPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::_get_LIFESPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "FlyText", "LIFESPAN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LIFESPAN
void Oculus::Platform::Samples::VrHoops::FlyText::_set_LIFESPAN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::_set_LIFESPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "FlyText", "LIFESPAN", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 m_movePerFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_movePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_movePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movePerFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_eol
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_eol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_eol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eol"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.FlyText.Start
void Oculus::Platform::Samples::VrHoops::FlyText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.FlyText.Update
void Oculus::Platform::Samples::VrHoops::FlyText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.GoalMover
#include "Oculus/Platform/Samples/VrHoops/GoalMover.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOVE_TOLERANCE
float Oculus::Platform::Samples::VrHoops::GoalMover::_get_MOVE_TOLERANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::_get_MOVE_TOLERANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "GoalMover", "MOVE_TOLERANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOVE_TOLERANCE
void Oculus::Platform::Samples::VrHoops::GoalMover::_set_MOVE_TOLERANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::_set_MOVE_TOLERANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "GoalMover", "MOVE_TOLERANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single MAX_OFFSET
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_MAX_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_MAX_OFFSET");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MAX_OFFSET"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speed
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_expectedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_expectedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_expectedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_expectedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_moveDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_moveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_moveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_moveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_nextMoveDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_nextMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_nextMoveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextMoveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_ExpectedPosition
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_ExpectedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_ExpectedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_ExpectedPosition
void Oculus::Platform::Samples::VrHoops::GoalMover::set_ExpectedPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_ExpectedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_MoveDirection
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_MoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_MoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_MoveDirection
void Oculus::Platform::Samples::VrHoops::GoalMover::set_MoveDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_MoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_NextMoveDirection
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_NextMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_NextMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_NextMoveDirection
void Oculus::Platform::Samples::VrHoops::GoalMover::set_NextMoveDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_NextMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.Start
void Oculus::Platform::Samples::VrHoops::GoalMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.FixedUpdate
void Oculus::Platform::Samples::VrHoops::GoalMover::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnMostWinsLeaderboardUpdated.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnHighScoreLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String MOST_MATCHES_WON
::StringW Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_MOST_MATCHES_WON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_MOST_MATCHES_WON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "MOST_MATCHES_WON"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOST_MATCHES_WON
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_MOST_MATCHES_WON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_MOST_MATCHES_WON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "MOST_MATCHES_WON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HIGHEST_MATCH_SCORE
::StringW Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_HIGHEST_MATCH_SCORE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_HIGHEST_MATCH_SCORE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "HIGHEST_MATCH_SCORE"));
}
// Autogenerated static field setter
// Set static field: static private System.String HIGHEST_MATCH_SCORE
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_HIGHEST_MATCH_SCORE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_HIGHEST_MATCH_SCORE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "HIGHEST_MATCH_SCORE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOP_N_COUNT
int Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_TOP_N_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_TOP_N_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "TOP_N_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOP_N_COUNT
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_TOP_N_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_TOP_N_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "TOP_N_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LEADERBOARD_POLL_FREQ
float Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_LEADERBOARD_POLL_FREQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_LEADERBOARD_POLL_FREQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "LEADERBOARD_POLL_FREQ"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LEADERBOARD_POLL_FREQ
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_LEADERBOARD_POLL_FREQ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_LEADERBOARD_POLL_FREQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "LEADERBOARD_POLL_FREQ", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextCheckTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_nextCheckTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_nextCheckTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextCheckTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedDictionary`2<System.Int32,Oculus.Platform.Models.LeaderboardEntry> m_mostWins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_foundLocalUserMostWinsEntry
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserMostWinsEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserMostWinsEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_foundLocalUserMostWinsEntry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_numWins
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_numWins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_numWins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numWins"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated m_mostWinsCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWinsCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWinsCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWinsCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedDictionary`2<System.Int32,Oculus.Platform.Models.LeaderboardEntry> m_highScores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highScores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_foundLocalUserHighScore
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserHighScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserHighScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_foundLocalUserHighScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated m_highScoreCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScoreCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScoreCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highScoreCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.set_MostWinsLeaderboardUpdatedCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_MostWinsLeaderboardUpdatedCallback(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_MostWinsLeaderboardUpdatedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MostWinsLeaderboardUpdatedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.set_HighScoreLeaderboardUpdatedCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_HighScoreLeaderboardUpdatedCallback(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_HighScoreLeaderboardUpdatedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighScoreLeaderboardUpdatedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.CheckForUpdates
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::CheckForUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::CheckForUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.QueryMostWinsLeaderboard
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryMostWinsLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryMostWinsLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryMostWinsLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.MostWinsGetEntriesCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::MostWinsGetEntriesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::MostWinsGetEntriesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MostWinsGetEntriesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.QueryHighScoreLeaderboard
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryHighScoreLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryHighScoreLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryHighScoreLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.HighestScoreGetEntriesCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::HighestScoreGetEntriesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::HighestScoreGetEntriesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestScoreGetEntriesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.SubmitMatchScores
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::SubmitMatchScores(bool wonMatch, uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::SubmitMatchScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitMatchScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wonMatch), ::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wonMatch, score);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnMostWinsLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.Invoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::Invoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::BeginInvoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, entries, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.EndInvoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnHighScoreLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.Invoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::Invoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::BeginInvoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, entries, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.EndInvoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.LocalPlayer
#include "Oculus/Platform/Samples/VrHoops/LocalPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LocalPlayer.Update
void Oculus::Platform::Samples::VrHoops::LocalPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LocalPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LocalPlayer.set_Score
void Oculus::Platform::Samples::VrHoops::LocalPlayer::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LocalPlayer::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchController
#include "Oculus/Platform/Samples/VrHoops/MatchController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.PlayerArea
#include "Oculus/Platform/Samples/VrHoops/PlayerArea.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_timerText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_timerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_timerText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timerText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_idleCameraTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_idleCameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_idleCameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_idleCameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_matchmakeButtonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_matchmakeButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_matchmakeButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmakeButtonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.PlayerArea[] m_playerAreas
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Platform::Samples::VrHoops::PlayerArea*>& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_playerAreas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_playerAreas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerAreas"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrHoops::PlayerArea*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 PRACTICE_WARMUP_TIME
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_PRACTICE_WARMUP_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_PRACTICE_WARMUP_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PRACTICE_WARMUP_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_WARMUP_TIME
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_WARMUP_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_WARMUP_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_WARMUP_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_TIME
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_COOLDOWN_TIME
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_COOLDOWN_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_COOLDOWN_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_COOLDOWN_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_mostWinsLeaderboard
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_mostWinsLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_mostWinsLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWinsLeaderboard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_highestScoresLeaderboard
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_highestScoresLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_highestScoresLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highestScoresLeaderboard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_leaderboardEntryPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_leaderboardEntryPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_leaderboardEntryPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaderboardEntryPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_flytext
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_flytext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_flytext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flytext"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State m_currentState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::MatchController::State& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchController::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextStateTransitionTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_nextStateTransitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_nextStateTransitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextStateTransitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_localSlot
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_localSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_localSlot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_localSlot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.get_MatchStartTime
float Oculus::Platform::Samples::VrHoops::MatchController::get_MatchStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::get_MatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.set_MatchStartTime
void Oculus::Platform::Samples::VrHoops::MatchController::set_MatchStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::set_MatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.Start
void Oculus::Platform::Samples::VrHoops::MatchController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.Update
void Oculus::Platform::Samples::VrHoops::MatchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.TransitionToState
void Oculus::Platform::Samples::VrHoops::MatchController::TransitionToState(::Oculus::Platform::Samples::VrHoops::MatchController::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.UpdateCheckForNextTimedTransition
void Oculus::Platform::Samples::VrHoops::MatchController::UpdateCheckForNextTimedTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::UpdateCheckForNextTimedTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCheckForNextTimedTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.UpdateMatchTimer
void Oculus::Platform::Samples::VrHoops::MatchController::UpdateMatchTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::UpdateMatchTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMatchTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.SetupForIdle
void Oculus::Platform::Samples::VrHoops::MatchController::SetupForIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::SetupForIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupForIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.SetupForPractice
void Oculus::Platform::Samples::VrHoops::MatchController::SetupForPractice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::SetupForPractice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupForPractice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MatchPlayerAddedCallback
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchController::MatchPlayerAddedCallback(int slot, ::Oculus::Platform::Models::User* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(user)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, slot, user);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MoveCameraToIdlePosition
void Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToIdlePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToIdlePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToIdlePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MoveCameraToMatchPosition
void Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToMatchPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToMatchPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToMatchPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.StartPracticeMatch
void Oculus::Platform::Samples::VrHoops::MatchController::StartPracticeMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::StartPracticeMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPracticeMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.PlayOnlineOrCancel
void Oculus::Platform::Samples::VrHoops::MatchController::PlayOnlineOrCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::PlayOnlineOrCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOnlineOrCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.OnMatchFoundCallback
void Oculus::Platform::Samples::VrHoops::MatchController::OnMatchFoundCallback(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::OnMatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.StartTimeOfferCallback
float Oculus::Platform::Samples::VrHoops::MatchController::StartTimeOfferCallback(float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MostWinsLeaderboardCallback
void Oculus::Platform::Samples::VrHoops::MatchController::MostWinsLeaderboardCallback(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MostWinsLeaderboardCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MostWinsLeaderboardCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entries)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.HighestScoreLeaderboardCallback
void Oculus::Platform::Samples::VrHoops::MatchController::HighestScoreLeaderboardCallback(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::HighestScoreLeaderboardCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestScoreLeaderboardCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entries)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.CalculateMatchResults
void Oculus::Platform::Samples::VrHoops::MatchController::CalculateMatchResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::CalculateMatchResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMatchResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.DisplayAchievementFlytext
void Oculus::Platform::Samples::VrHoops::MatchController::DisplayAchievementFlytext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::DisplayAchievementFlytext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayAchievementFlytext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State
#include "Oculus/Platform/Samples/VrHoops/MatchController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State UNKNOWN
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State UNKNOWN
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_UNKNOWN(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State NONE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State NONE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_NONE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_START_PRACTICE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_START_PRACTICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_START_PRACTICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_START_PRACTICE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_START_PRACTICE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_START_PRACTICE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_START_PRACTICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_START_PRACTICE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PRACTICING
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PRACTICING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PRACTICING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PRACTICING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PRACTICING
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PRACTICING(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PRACTICING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PRACTICING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_RESULTS_PRACTICE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_RESULTS_PRACTICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_RESULTS_PRACTICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_RESULTS_PRACTICE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_RESULTS_PRACTICE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_RESULTS_PRACTICE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_RESULTS_PRACTICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_RESULTS_PRACTICE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_FOR_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_FOR_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_FOR_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_FOR_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_FOR_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_FOR_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_FOR_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_FOR_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_SETUP_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_SETUP_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_SETUP_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_SETUP_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_SETUP_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_SETUP_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_SETUP_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_SETUP_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PLAYING_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PLAYING_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PLAYING_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PLAYING_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PLAYING_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PLAYING_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PLAYING_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PLAYING_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_MATCH_RESULTS
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_MATCH_RESULTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_MATCH_RESULTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_MATCH_RESULTS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_MATCH_RESULTS
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_MATCH_RESULTS(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_MATCH_RESULTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_MATCH_RESULTS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrHoops::MatchController::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnEnqueueResult.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnMatchPlayerAdded.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String NORMAL_POOL
::StringW Oculus::Platform::Samples::VrHoops::MatchmakingManager::_get_NORMAL_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::_get_NORMAL_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "MatchmakingManager", "NORMAL_POOL"));
}
// Autogenerated static field setter
// Set static field: static private System.String NORMAL_POOL
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::_set_NORMAL_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::_set_NORMAL_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchmakingManager", "NORMAL_POOL", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_matchRoom
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_matchRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_matchRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchRoom"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Models.User> m_remotePlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Models::User*>*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Models::User*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult m_enqueueCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_enqueueCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_enqueueCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enqueueCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded m_playerCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_playerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_playerCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.get_EnqueueResultCallback
::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_EnqueueResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_EnqueueResultCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnqueueResultCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.set_EnqueueResultCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_EnqueueResultCallback(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_EnqueueResultCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnqueueResultCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.get_MatchPlayerAddedCallback
::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded* Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_MatchPlayerAddedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.set_MatchPlayerAddedCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_MatchPlayerAddedCallback(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.QueueForMatch
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::QueueForMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::QueueForMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueForMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingEnqueueCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingEnqueueCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingEnqueueCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingEnqueueCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchFoundCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchFoundCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingJoinRoomCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingJoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingJoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingJoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingRoomUpdateCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingRoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingRoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingRoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.EndMatch
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::EndMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::EndMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.LeaveQueue
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::LeaveQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::LeaveQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnEnqueueResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.Invoke
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::Invoke(bool successful) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, successful);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::BeginInvoke(bool successful, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, successful, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.EndInvoke
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnMatchPlayerAdded.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.Invoke
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke(int slot, ::Oculus::Platform::Models::User* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, slot, user);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke(int slot, ::Oculus::Platform::Models::User* user, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, slot, user, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.EndInvoke
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager
#include "Oculus/Platform/Samples/VrHoops/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData
#include "Oculus/Platform/Samples/VrHoops/P2PManager_RemotePlayerData.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer
#include "Oculus/Platform/Samples/VrHoops/P2PManager_StartTimeOffer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte TIME_SYNC_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte TIME_SYNC_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 TIME_SYNC_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 TIME_SYNC_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TIME_SYNC_MESSAGE_COUNT
int Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TIME_SYNC_MESSAGE_COUNT
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte START_TIME_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte START_TIME_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 START_TIME_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 START_TIME_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte BACKBOARD_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte BACKBOARD_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 BACKBOARD_UPDATE_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 BACKBOARD_UPDATE_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte LOCAL_BALLS_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte LOCAL_BALLS_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOCAL_BALLS_UPDATE_DELAY
float Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOCAL_BALLS_UPDATE_DELAY
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte SCORE_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte SCORE_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 SCORE_UPDATE_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 SCORE_UPDATE_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData> m_remotePlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeForNextBallUpdate
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_timeForNextBallUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_timeForNextBallUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeForNextBallUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Platform.Samples.VrHoops.P2PNetworkBall> m_localBalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_localBalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_localBalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_localBalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] readBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,System.Collections.Generic.List`1<System.Single>> m_remoteSyncTimeCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<float>*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSyncTimeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSyncTimeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteSyncTimeCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,System.Single> m_remoteSentTimeCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, float>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSentTimeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSentTimeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteSentTimeCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer m_startTimeOfferCallback
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_startTimeOfferCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_startTimeOfferCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startTimeOfferCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.get_StartTimeOfferCallback
::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer* Oculus::Platform::Samples::VrHoops::P2PManager::get_StartTimeOfferCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::get_StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.set_StartTimeOfferCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::set_StartTimeOfferCallback(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::set_StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UpdateNetwork
void Oculus::Platform::Samples::VrHoops::P2PManager::UpdateNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UpdateNetwork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.AddRemotePlayer
void Oculus::Platform::Samples::VrHoops::P2PManager::AddRemotePlayer(::Oculus::Platform::Samples::VrHoops::RemotePlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::AddRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.DisconnectAll
void Oculus::Platform::Samples::VrHoops::P2PManager::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::DisconnectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PeerConnectRequestCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::PeerConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ConnectionStateChangedCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::ConnectionStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendTimeSyncMessage
void Oculus::Platform::Samples::VrHoops::P2PManager::SendTimeSyncMessage(uint64_t remoteID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendTimeSyncMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTimeSyncMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReadTimeSyncMessage
void Oculus::Platform::Samples::VrHoops::P2PManager::ReadTimeSyncMessage(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReadTimeSyncMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTimeSyncMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ShiftRemoteTime
float Oculus::Platform::Samples::VrHoops::P2PManager::ShiftRemoteTime(uint64_t remoteID, float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ShiftRemoteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftRemoteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(remoteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteID, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.OfferMatchStartTime
void Oculus::Platform::Samples::VrHoops::P2PManager::OfferMatchStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::OfferMatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OfferMatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveMatchStartTimeOffer
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveMatchStartTimeOffer(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveMatchStartTimeOffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMatchStartTimeOffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::SendBackboardUpdate(float time, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 moveDir, ::UnityEngine::Vector3 nextMoveDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(moveDir), ::il2cpp_utils::ExtractType(nextMoveDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, pos, moveDir, nextMoveDir);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBackboardUpdate(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.AddNetworkBall
void Oculus::Platform::Samples::VrHoops::P2PManager::AddNetworkBall(::UnityEngine::GameObject* ball) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::AddNetworkBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNetworkBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ball)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ball);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.RemoveNetworkBall
void Oculus::Platform::Samples::VrHoops::P2PManager::RemoveNetworkBall(::UnityEngine::GameObject* ball) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemoveNetworkBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNetworkBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ball)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ball);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendLocalBallTransforms
void Oculus::Platform::Samples::VrHoops::P2PManager::SendLocalBallTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendLocalBallTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLocalBallTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveBallTransforms
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBallTransforms(uint64_t remoteID, ::ArrayW<uint8_t> msg, uint64_t msgLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBallTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveBallTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(msgLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg, msgLength);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendScoreUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::SendScoreUpdate(uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendScoreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendScoreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveScoredUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveScoredUpdate(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveScoredUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveScoredUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackVector3
void Oculus::Platform::Samples::VrHoops::P2PManager::PackVector3(::UnityEngine::Vector3 vec, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vec, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackVector3
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PManager::UnpackVector3(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackQuaternion
void Oculus::Platform::Samples::VrHoops::P2PManager::PackQuaternion(::UnityEngine::Quaternion quat, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quat), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quat, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackFloat
void Oculus::Platform::Samples::VrHoops::P2PManager::PackFloat(float value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackFloat
float Oculus::Platform::Samples::VrHoops::P2PManager::UnpackFloat(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackTime
float Oculus::Platform::Samples::VrHoops::P2PManager::UnpackTime(uint64_t remoteID, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteID, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackInt32
void Oculus::Platform::Samples::VrHoops::P2PManager::PackInt32(int value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackInt32
int Oculus::Platform::Samples::VrHoops::P2PManager::UnpackInt32(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackUint32
void Oculus::Platform::Samples::VrHoops::P2PManager::PackUint32(uint value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackUint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackUint32
uint Oculus::Platform::Samples::VrHoops::P2PManager::UnpackUint32(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackUint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackUint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackBool
void Oculus::Platform::Samples::VrHoops::P2PManager::PackBool(bool value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackBool
bool Oculus::Platform::Samples::VrHoops::P2PManager::UnpackBool(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData
#include "Oculus/Platform/Samples/VrHoops/P2PManager_RemotePlayerData.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.PeerConnectionState state
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Samples.VrHoops.RemotePlayer player
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::RemotePlayer*& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::RemotePlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single remoteTimeOffset
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_remoteTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_remoteTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastReceivedBallsTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_lastReceivedBallsTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_lastReceivedBallsTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastReceivedBallsTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Platform.Samples.VrHoops.P2PNetworkBall> activeBalls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>*& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_activeBalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_activeBalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeBalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer
#include "Oculus/Platform/Samples/VrHoops/P2PManager_StartTimeOffer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.Invoke
float Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::Invoke(float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::BeginInvoke(float remoteTime, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, remoteTime, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.EndInvoke
float Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollisionTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_lastCollisionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_lastCollisionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollisionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.get_velocity
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.Awake
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.IsHeld
bool Oculus::Platform::Samples::VrHoops::P2PNetworkBall::IsHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::IsHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.ProcessRemoteUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::ProcessRemoteUpdate(float remoteTime, bool isHeld, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 vel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::ProcessRemoteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemoteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime), ::il2cpp_utils::ExtractType(isHeld), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(vel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteTime, isHeld, pos, vel);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.estimatePosition
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimatePosition(::UnityEngine::Vector3 startPosition, ::UnityEngine::Vector3 startVelocty, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "estimatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(startVelocty), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, startPosition, startVelocty, time);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.estimateVelocity
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimateVelocity(::UnityEngine::Vector3 startVelocity, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "estimateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startVelocity), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, startVelocity, time);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.OnCollisionEnter
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.OnDestroy
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.GoalMover
#include "Oculus/Platform/Samples/VrHoops/GoalMover.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.GoalMover m_goal
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::GoalMover*& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::GoalMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_lastSentMoveDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_lastSentMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_lastSentMoveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastSentMoveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_sendUpdates
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_sendUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_sendUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sendUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.set_SendUpdates
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::set_SendUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::set_SendUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.Awake
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.FixedUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.SendBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::SendBackboardUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::SendBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.RemoteBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::RemoteBackboardUpdate(float remoteTime, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 moveDir, ::UnityEngine::Vector3 nextMoveDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::RemoteBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(moveDir), ::il2cpp_utils::ExtractType(nextMoveDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteTime, pos, moveDir, nextMoveDir);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlatformManager
#include "Oculus/Platform/Samples/VrHoops/PlatformManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager
#include "Oculus/Platform/Samples/VrHoops/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.AchievementsManager
#include "Oculus/Platform/Samples/VrHoops/AchievementsManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrHoops.PlatformManager s_instance
::Oculus::Platform::Samples::VrHoops::PlatformManager* Oculus::Platform::Samples::VrHoops::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager*>("Oculus.Platform.Samples.VrHoops", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrHoops.PlatformManager s_instance
void Oculus::Platform::Samples::VrHoops::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrHoops::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager m_matchmaking
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_matchmaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmaking"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PManager m_p2p
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::P2PManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_p2p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_p2p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2p"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager m_leaderboards
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_leaderboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_leaderboards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaderboards"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.AchievementsManager m_achievements
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::AchievementsManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_achievements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_achievements"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::AchievementsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State m_currentState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::PlatformManager::State& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::PlatformManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Matchmaking
::Oculus::Platform::Samples::VrHoops::MatchmakingManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Matchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Matchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_P2P
::Oculus::Platform::Samples::VrHoops::P2PManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_P2P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_P2P");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_P2P", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Leaderboards
::Oculus::Platform::Samples::VrHoops::LeaderboardManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Leaderboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Leaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Leaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::LeaderboardManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Achievements
::Oculus::Platform::Samples::VrHoops::AchievementsManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Achievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Achievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::AchievementsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_CurrentState
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::PlatformManager::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Update
void Oculus::Platform::Samples::VrHoops::PlatformManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Awake
void Oculus::Platform::Samples::VrHoops::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Start
void Oculus::Platform::Samples::VrHoops::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrHoops::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrHoops::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrHoops::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.QuitButtonPressed
void Oculus::Platform::Samples::VrHoops::PlatformManager::QuitButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::QuitButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.OnApplicationQuit
void Oculus::Platform::Samples::VrHoops::PlatformManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.TransitionToState
void Oculus::Platform::Samples::VrHoops::PlatformManager::TransitionToState(::Oculus::Platform::Samples::VrHoops::PlatformManager::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State
#include "Oculus/Platform/Samples/VrHoops/PlatformManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State INITIALIZING
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_INITIALIZING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_INITIALIZING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "INITIALIZING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State INITIALIZING
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_INITIALIZING(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_INITIALIZING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "INITIALIZING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State WAITING_TO_PRACTICE_OR_MATCHMAKE
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_WAITING_TO_PRACTICE_OR_MATCHMAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_WAITING_TO_PRACTICE_OR_MATCHMAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "WAITING_TO_PRACTICE_OR_MATCHMAKE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State WAITING_TO_PRACTICE_OR_MATCHMAKE
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_WAITING_TO_PRACTICE_OR_MATCHMAKE(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_WAITING_TO_PRACTICE_OR_MATCHMAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "WAITING_TO_PRACTICE_OR_MATCHMAKE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State MATCH_TRANSITION
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_MATCH_TRANSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_MATCH_TRANSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "MATCH_TRANSITION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State MATCH_TRANSITION
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_MATCH_TRANSITION(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_MATCH_TRANSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "MATCH_TRANSITION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_LOCAL_MATCH
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_LOCAL_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_LOCAL_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_LOCAL_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_LOCAL_MATCH
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_LOCAL_MATCH(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_LOCAL_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_LOCAL_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_NETWORKED_MATCH
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_NETWORKED_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_NETWORKED_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_NETWORKED_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_NETWORKED_MATCH
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_NETWORKED_MATCH(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_NETWORKED_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_NETWORKED_MATCH", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrHoops::PlatformManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.BallEjector
#include "Oculus/Platform/Samples/VrHoops/BallEjector.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 MAX_BALLS
uint Oculus::Platform::Samples::VrHoops::Player::_get_MAX_BALLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_MAX_BALLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "Player", "MAX_BALLS"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MAX_BALLS
void Oculus::Platform::Samples::VrHoops::Player::_set_MAX_BALLS(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_MAX_BALLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "MAX_BALLS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single INITIAL_FORCE
float Oculus::Platform::Samples::VrHoops::Player::_get_INITIAL_FORCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_INITIAL_FORCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "Player", "INITIAL_FORCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single INITIAL_FORCE
void Oculus::Platform::Samples::VrHoops::Player::_set_INITIAL_FORCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_INITIAL_FORCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "INITIAL_FORCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single RESPAWN_SECONDS
float Oculus::Platform::Samples::VrHoops::Player::_get_RESPAWN_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_RESPAWN_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "Player", "RESPAWN_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RESPAWN_SECONDS
void Oculus::Platform::Samples::VrHoops::Player::_set_RESPAWN_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_RESPAWN_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "RESPAWN_SECONDS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_score
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrHoops::Player::dyn_m_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_score"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_scoreUI
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_scoreUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_scoreUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scoreUI"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ballPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.BallEjector m_ballEjector
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::BallEjector*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballEjector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballEjector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballEjector"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::BallEjector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<UnityEngine.GameObject> m_balls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_balls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_balls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_balls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_heldBall
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_heldBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_heldBall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_heldBall"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextSpawnTime
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Samples::VrHoops::Player::dyn_m_nextSpawnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_nextSpawnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextSpawnTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.get_Score
uint Oculus::Platform::Samples::VrHoops::Player::get_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::get_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 4));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.set_Score
void Oculus::Platform::Samples::VrHoops::Player::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.set_BallPrefab
void Oculus::Platform::Samples::VrHoops::Player::set_BallPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::set_BallPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BallPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.get_HasBall
bool Oculus::Platform::Samples::VrHoops::Player::get_HasBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::get_HasBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.Start
void Oculus::Platform::Samples::VrHoops::Player::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.CreateBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::CreateBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::CreateBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.CheckSpawnBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::CheckSpawnBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::CheckSpawnBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSpawnBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.ShootBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::ShootBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::ShootBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShootBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.OnDestroy
void Oculus::Platform::Samples::VrHoops::Player::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlayerArea
#include "Oculus/Platform/Samples/VrHoops/PlayerArea.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ballPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_ballPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_ballPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_playerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_nameText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PNetworkGoal m_p2pGoal
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_p2pGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_p2pGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2pGoal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.get_Player
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::PlayerArea::get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::get_Player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.get_NameText
::UnityEngine::UI::Text* Oculus::Platform::Samples::VrHoops::PlayerArea::get_NameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::get_NameText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.Awake
void Oculus::Platform::Samples::VrHoops::PlayerArea::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_user
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_user");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_user"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PNetworkGoal m_goal
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*& Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_User
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_User(::Oculus::Platform::Models::User* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_User");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_User", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.get_ID
uint64_t Oculus::Platform::Samples::VrHoops::RemotePlayer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.get_Goal
::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal* Oculus::Platform::Samples::VrHoops::RemotePlayer::get_Goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::get_Goal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Goal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_Goal
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Goal(::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Goal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Goal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.ReceiveRemoteScore
void Oculus::Platform::Samples::VrHoops::RemotePlayer::ReceiveRemoteScore(uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::ReceiveRemoteScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRemoteScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_Score
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.VREyeRaycaster
#include "Oculus/Platform/Samples/VrHoops/VREyeRaycaster.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.VREyeRaycaster.Update
void Oculus::Platform::Samples::VrHoops::VREyeRaycaster::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 y
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.EyeCamera
#include "Oculus/Platform/Samples/VrBoardGame/EyeCamera.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider m_gazeTracker
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gazeTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gazeTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gazeTracker"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_currentPiece
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition m_boardPosition
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::BoardPosition*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_boardPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_boardPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_boardPosition"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::BoardPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.EyeCamera.Update
void Oculus::Platform::Samples::VrBoardGame::EyeCamera::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameBoard
#include "Oculus/Platform/Samples/VrBoardGame/GameBoard.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 LENGTH_X
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_X"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LENGTH_X
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_X(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LENGTH_Y
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_Y"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LENGTH_Y
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_Y(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_Y", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_PLAYERS
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_MAX_PLAYERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_MAX_PLAYERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "MAX_PLAYERS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_PLAYERS
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_MAX_PLAYERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_MAX_PLAYERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "MAX_PLAYERS", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] m_playerColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_playerColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_playerColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_proposedMoveColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_proposedMoveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_proposedMoveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proposedMoveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_scores
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scores"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition[] m_positions
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_positions"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Platform.Samples.VrBoardGame.GameBoard/Oculus.Platform.Samples.VrBoardGame.PositionInfo[,] m_pieces
[[deprecated("Use field access instead!")]] ::ArrayW<::Oculus::Platform::Samples::VrBoardGame::GameBoard::PositionInfo>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_pieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_pieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieces"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrBoardGame::GameBoard::PositionInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.Reset
void Oculus::Platform::Samples::VrBoardGame::GameBoard::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.IsFull
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::IsFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.CanPlayerMoveToPostion
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerMoveToPostion(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerMoveToPostion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayerMoveToPostion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.CanPlayerPowerUpPosition
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerPowerUpPosition(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerPowerUpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayerPowerUpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddPiece
void Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPiece(int player, ::UnityEngine::GameObject* prefab, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, prefab, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddProposedPiece
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPiece(::UnityEngine::GameObject* prefab, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProposedPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, pos);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddPowerPiece
void Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPowerPiece(int player, ::UnityEngine::GameObject* prefab, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPowerPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPowerPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, prefab, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddProposedPowerPiece
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPowerPiece(::UnityEngine::GameObject* prefab, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPowerPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProposedPowerPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, pos);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.Create
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::Create(::UnityEngine::GameObject* prefab, ::UnityEngine::GameObject* parent, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos, ::UnityEngine::Vector3 off) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(off)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, parent, pos, off);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.GetPlayerScore
int Oculus::Platform::Samples::VrBoardGame::GameBoard::GetPlayerScore(int player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::GetPlayerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.UpdateScores
void Oculus::Platform::Samples::VrBoardGame::GameBoard::UpdateScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::UpdateScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameBoard
#include "Oculus/Platform/Samples/VrBoardGame/GameBoard.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.MatchmakingManager m_matchmaking
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_matchmaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmaking"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameBoard m_board
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GameBoard*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_board() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_board");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_board"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_pieceA
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieceA"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_pieceB
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieceB"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_powerPiece
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_powerPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_unusableColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unusableColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unusableColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_unusableColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_unselectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unselectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unselectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_unselectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_selectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_selectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_highlightedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_highlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlightedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_ballCountText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_ballCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_ballCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballCountText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_player0Text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player0Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player0Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_player0Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_player1Text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player1Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player1Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_player1Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState m_state
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GameController::GameState& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_interestedPiece
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_interestedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_interestedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_interestedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_selectedPiece
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_selectedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_proposedPiece
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_proposedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_proposedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proposedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_powerBallcount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerBallcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerBallcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_powerBallcount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_opponentName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_opponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_opponentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_opponentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.Start
void Oculus::Platform::Samples::VrBoardGame::GameController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.Update
void Oculus::Platform::Samples::VrBoardGame::GameController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TransitionToState
void Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToState(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TransitionToNextState
void Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToNextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToNextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.PerFrameStateUpdate
void Oculus::Platform::Samples::VrBoardGame::GameController::PerFrameStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::PerFrameStateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerFrameStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.PracticeButtonPressed
void Oculus::Platform::Samples::VrBoardGame::GameController::PracticeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::PracticeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PracticeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MakeAIMove
void Oculus::Platform::Samples::VrBoardGame::GameController::MakeAIMove(int player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MakeAIMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeAIMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartOnlineMatch
void Oculus::Platform::Samples::VrBoardGame::GameController::StartOnlineMatch(::StringW opponentName, bool localUserGoesFirst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartOnlineMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOnlineMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opponentName), ::il2cpp_utils::ExtractType(localUserGoesFirst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opponentName, localUserGoesFirst);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MakeRemoteMove
void Oculus::Platform::Samples::VrBoardGame::GameController::MakeRemoteMove(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece piece, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MakeRemoteMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRemoteMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MarkRemoteTurnComplete
void Oculus::Platform::Samples::VrBoardGame::GameController::MarkRemoteTurnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MarkRemoteTurnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkRemoteTurnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.RemoteMatchEnded
void Oculus::Platform::Samples::VrBoardGame::GameController::RemoteMatchEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::RemoteMatchEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteMatchEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartedLookingAtPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPiece(::Oculus::Platform::Samples::VrBoardGame::GamePiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartedLookingAtPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StoppedLookingAtPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::StoppedLookingAtPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StoppedLookingAtPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoppedLookingAtPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartedLookingAtPosition
void Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPosition(::Oculus::Platform::Samples::VrBoardGame::BoardPosition* position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartedLookingAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.ClearProposedMove
void Oculus::Platform::Samples::VrBoardGame::GameController::ClearProposedMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::ClearProposedMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearProposedMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TrySelectPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::TrySelectPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TrySelectPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySelectPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TryPlacePiece
void Oculus::Platform::Samples::VrBoardGame::GameController::TryPlacePiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TryPlacePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlacePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.QuitButtonPressed
void Oculus::Platform::Samples::VrBoardGame::GameController::QuitButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::QuitButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.AddPowerballs
void Oculus::Platform::Samples::VrBoardGame::GameController::AddPowerballs(uint count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::AddPowerballs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPowerballs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.UpdateScores
void Oculus::Platform::Samples::VrBoardGame::GameController::UpdateScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::UpdateScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.UpdateGamePieceColors
void Oculus::Platform::Samples::VrBoardGame::GameController::UpdateGamePieceColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::UpdateGamePieceColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGamePieceColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState None
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState None
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_None(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingMyTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingMyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingMyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingMyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingMyTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingMyTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingMyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingMyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingAiTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingAiTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingAiTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingAiTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingAiTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingAiTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingAiTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingAiTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchMyTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchMyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchMyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchMyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchMyTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchMyTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchMyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchMyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchRemoteTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchRemoteTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchRemoteTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchRemoteTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchRemoteTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchRemoteTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchRemoteTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchRemoteTurn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrBoardGame::GameController::GameState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece m_type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabA
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabA"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabB
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabB"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabPower
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabPower"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition m_position
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Samples::VrBoardGame::BoardPosition*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_position"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::BoardPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Type
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Position
::Oculus::Platform::Samples::VrBoardGame::BoardPosition* Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.set_Position
void Oculus::Platform::Samples::VrBoardGame::GamePiece::set_Position(::Oculus::Platform::Samples::VrBoardGame::BoardPosition* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Prefab
::UnityEngine::GameObject* Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.PrefabFor
::UnityEngine::GameObject* Oculus::Platform::Samples::VrBoardGame::GamePiece::PrefabFor(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::PrefabFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece A
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "A"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece A
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_A(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "A", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece B
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "B"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece B
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_B(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "B", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece PowerBall
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_PowerBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_PowerBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "PowerBall"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece PowerBall
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_PowerBall(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_PowerBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "PowerBall", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
