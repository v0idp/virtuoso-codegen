// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderID
[[deprecated]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime SentTime
[[deprecated]] ::System::DateTime& Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SendInvitesResult
#include "Oculus/Platform/Models/SendInvitesResult.hpp"
// Including type: Oculus.Platform.Models.ApplicationInviteList
#include "Oculus/Platform/Models/ApplicationInviteList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.ApplicationInviteList Invites
[[deprecated]] ::Oculus::Platform::Models::ApplicationInviteList*& Oculus::Platform::Models::SendInvitesResult::dyn_Invites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SendInvitesResult::dyn_Invites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Invites"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::ApplicationInviteList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Metric
[[deprecated]] int64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_Metric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_Metric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metric"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList AssignedUsers
[[deprecated]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Team::dyn_AssignedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_AssignedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MaxUsers
[[deprecated]] int& Oculus::Platform::Models::Team::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MinUsers
[[deprecated]] int& Oculus::Platform::Models::Team::dyn_MinUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MinUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated]] ::StringW& Oculus::Platform::Models::Team::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String InviteToken
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_InviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_InviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceLobbySessionId
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceLobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceLobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceLobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceMatchSessionId
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceMatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceMatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceMatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::UserAndRoom::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated]] bool& Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.P2PManager
#include "Oculus/Platform/Samples/VrVoiceChat/P2PManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single UPDATE_DELAY
float Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_UPDATE_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_UPDATE_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "UPDATE_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single UPDATE_DELAY
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_UPDATE_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_UPDATE_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "UPDATE_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte PACKET_SIZE
uint8_t Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte PACKET_SIZE
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_SIZE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte PACKET_FORMAT
uint8_t Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_get_PACKET_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte PACKET_FORMAT
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_FORMAT(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::_set_PACKET_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", "PACKET_FORMAT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_remoteID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_remoteID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_remoteID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState m_state
[[deprecated]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeForNextUpdate
[[deprecated]] float& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_timeForNextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_m_timeForNextUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeForNextUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] sendTransformBuffer
[[deprecated]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_sendTransformBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_sendTransformBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendTransformBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] receiveTransformBuffer
[[deprecated]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receiveTransformBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receiveTransformBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveTransformBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 receivedPosition
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 receivedPositionPrior
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPositionPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedPositionPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedPositionPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion receivedRotation
[[deprecated]] ::UnityEngine::Quaternion& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion receivedRotationPrior
[[deprecated]] ::UnityEngine::Quaternion& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotationPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedRotationPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRotationPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single receivedTime
[[deprecated]] float& Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::dyn_receivedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.get_Connected
bool Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.get_ShouldSendHeadUpdate
bool Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_ShouldSendHeadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::get_ShouldSendHeadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldSendHeadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "P2PManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.ConnectTo
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.Disconnect
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.PeerConnectRequestCallback
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::PeerConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::PeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.ConnectionStateChangedCallback
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectionStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::ConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.SendHeadTransform
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::SendHeadTransform(::UnityEngine::Transform* headTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::SendHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headTransform);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.PackFloat
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::PackFloat(float f, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::PackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.P2PManager.GetRemoteHeadTransform
void Oculus::Platform::Samples::VrVoiceChat::P2PManager::GetRemoteHeadTransform(::UnityEngine::Transform* headTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::P2PManager::GetRemoteHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoteHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headTransform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager_--c__DisplayClass31_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.P2PManager
#include "Oculus/Platform/Samples/VrVoiceChat/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrVoiceChat.VoipManager
#include "Oculus/Platform/Samples/VrVoiceChat/VoipManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrVoiceChat.PlatformManager s_instance
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager* Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager*>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrVoiceChat.PlatformManager s_instance
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_invitesList
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitesList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invitesList"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_invitePrefab
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_invitePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invitePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_camera
[[deprecated]] ::UnityEngine::Camera*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_remoteHead
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_remoteHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_remoteHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State m_currentState
[[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.RoomManager m_roomManager
[[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::RoomManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_roomManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_roomManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roomManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::RoomManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.P2PManager m_p2pManager
[[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::P2PManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_p2pManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_p2pManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2pManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::P2PManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrVoiceChat.VoipManager m_voipManager
[[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::VoipManager*& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_voipManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_voipManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_voipManager"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::VoipManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated]] ::StringW& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_CurrentState
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Update
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Awake
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.Start
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.OnApplicationQuit
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.CallFriendOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::CallFriendOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::CallFriendOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallFriendOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.HangupOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::HangupOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::HangupOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HangupOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.QuitOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::QuitOnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::QuitOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.AnswerCallOnClick
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::AnswerCallOnClick(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::AnswerCallOnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "AnswerCallOnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.TransitionToState
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TransitionToState(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newState);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.SetBackgroundColorForState
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetBackgroundColorForState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetBackgroundColorForState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "SetBackgroundColorForState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager.SetActiveInvites
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetActiveInvites(::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>* invites) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::SetActiveInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", "SetActiveInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invites)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invites);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State INITIALIZING
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_INITIALIZING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_INITIALIZING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "INITIALIZING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State INITIALIZING
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_INITIALIZING(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_INITIALIZING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "INITIALIZING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_TO_CALL_OR_ANSWER
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_TO_CALL_OR_ANSWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_TO_CALL_OR_ANSWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_TO_CALL_OR_ANSWER"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_TO_CALL_OR_ANSWER
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_TO_CALL_OR_ANSWER(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_TO_CALL_OR_ANSWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_TO_CALL_OR_ANSWER", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_FOR_ANSWER
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_FOR_ANSWER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_WAITING_FOR_ANSWER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_FOR_ANSWER"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State WAITING_FOR_ANSWER
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_FOR_ANSWER(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_WAITING_FOR_ANSWER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "WAITING_FOR_ANSWER", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State CONNECTED_IN_A_ROOM
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_CONNECTED_IN_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_CONNECTED_IN_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "CONNECTED_IN_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State CONNECTED_IN_A_ROOM
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_CONNECTED_IN_A_ROOM(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_CONNECTED_IN_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "CONNECTED_IN_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State HANGUP
::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_HANGUP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_get_HANGUP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State>("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "HANGUP"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.State HANGUP
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_HANGUP(::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::_set_HANGUP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "PlatformManager/State", "HANGUP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0
#include "Oculus/Platform/Samples/VrVoiceChat/PlatformManager_--c__DisplayClass31_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite invite
[[deprecated]] ::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite& Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::dyn_invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::dyn_invite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invite"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.PlatformManager/Oculus.Platform.Samples.VrVoiceChat.<>c__DisplayClass31_0.<SetActiveInvites>b__0
void Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::$SetActiveInvites$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::PlatformManager::$$c__DisplayClass31_0::<SetActiveInvites>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetActiveInvites>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.RoomManager
#include "Oculus/Platform/Samples/VrVoiceChat/RoomManager.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single INVITE_POLL_FREQ_SECONDS
float Oculus::Platform::Samples::VrVoiceChat::RoomManager::_get_INVITE_POLL_FREQ_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::_get_INVITE_POLL_FREQ_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", "INVITE_POLL_FREQ_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single INVITE_POLL_FREQ_SECONDS
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::_set_INVITE_POLL_FREQ_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::_set_INVITE_POLL_FREQ_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", "INVITE_POLL_FREQ_SECONDS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_roomID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_roomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_roomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_remoteUser
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_remoteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_remoteUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextPollTime
[[deprecated]] float& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_nextPollTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_nextPollTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextPollTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> m_pendingRoomRequests
[[deprecated]] ::System::Collections::Generic::HashSet_1<uint64_t>*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_pendingRoomRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_pendingRoomRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingRoomRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite> m_invites
[[deprecated]] ::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>*& Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_invites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::dyn_m_invites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invites"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_RemoteUserID
uint64_t Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_RemoteOculusID
::StringW Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_RemoteOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.get_ShouldPollInviteList
bool Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_ShouldPollInviteList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::get_ShouldPollInviteList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldPollInviteList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager..cctor
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrVoiceChat", "RoomManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.LaunchedFromAcceptingInviteCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::LaunchedFromAcceptingInviteCallback(::Oculus::Platform::Message_1<::StringW>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::LaunchedFromAcceptingInviteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchedFromAcceptingInviteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CheckForLaunchInvite
bool Oculus::Platform::Samples::VrVoiceChat::RoomManager::CheckForLaunchInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CheckForLaunchInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForLaunchInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CreateRoomAndLaunchInviteMenu
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateRoomAndLaunchInviteMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateRoomAndLaunchInviteMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRoomAndLaunchInviteMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.CreateAndJoinPrivateRoomCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateAndJoinPrivateRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::CreateAndJoinPrivateRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndJoinPrivateRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.OnLaunchInviteWorkflowComplete
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::OnLaunchInviteWorkflowComplete(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::OnLaunchInviteWorkflowComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchInviteWorkflowComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.UpdateActiveInvitesList
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::UpdateActiveInvitesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::UpdateActiveInvitesList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActiveInvitesList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.GetRoomInviteNotificationsCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInviteNotificationsCallback(::Oculus::Platform::Message* msg_untyped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInviteNotificationsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg_untyped)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg_untyped);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.GetRoomInfoCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInfoCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::GetRoomInfoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInfoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.JoinExistingRoom
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinExistingRoom(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinExistingRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinExistingRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.JoinRoomCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::JoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.RoomUpdateCallback
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::RoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::RoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager.LeaveCurrentRoom
void Oculus::Platform::Samples::VrVoiceChat::RoomManager::LeaveCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::LeaveCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite
#include "Oculus/Platform/Samples/VrVoiceChat/RoomManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_RoomID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OwnerID
[[deprecated]] ::StringW& Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_OwnerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::dyn_OwnerID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.RoomManager/Oculus.Platform.Samples.VrVoiceChat.Invite..ctor
// ABORTED elsewhere.  Oculus::Platform::Samples::VrVoiceChat::RoomManager::Invite::Invite(uint64_t roomID, ::StringW owner)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.VREyeRaycaster
#include "Oculus/Platform/Samples/VrVoiceChat/VREyeRaycaster.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VREyeRaycaster.Update
void Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VREyeRaycaster::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrVoiceChat.VoipManager
#include "Oculus/Platform/Samples/VrVoiceChat/VoipManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_remoteID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState m_state
[[deprecated]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.GameObject m_remoteHead
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::dyn_m_remoteHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.get_Connected
bool Oculus::Platform::Samples::VrVoiceChat::VoipManager::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.ConnectTo
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.Disconnect
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.VoipConnectRequestCallback
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrVoiceChat.VoipManager.VoipStateChangedCallback
void Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrVoiceChat::VoipManager::VoipStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.AIPlayer
#include "Oculus/Platform/Samples/VrHoops/AIPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AIPlayer.FixedUpdate
void Oculus::Platform::Samples::VrHoops::AIPlayer::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AIPlayer::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.AchievementsManager
#include "Oculus/Platform/Samples/VrHoops/AchievementsManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LIKES_TO_WIN
::StringW Oculus::Platform::Samples::VrHoops::AchievementsManager::_get_LIKES_TO_WIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::_get_LIKES_TO_WIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "AchievementsManager", "LIKES_TO_WIN"));
}
// Autogenerated static field setter
// Set static field: static private System.String LIKES_TO_WIN
void Oculus::Platform::Samples::VrHoops::AchievementsManager::_set_LIKES_TO_WIN(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::_set_LIKES_TO_WIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "AchievementsManager", "LIKES_TO_WIN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_likesToWinUnlocked
[[deprecated]] bool& Oculus::Platform::Samples::VrHoops::AchievementsManager::dyn_m_likesToWinUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::dyn_m_likesToWinUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_likesToWinUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.get_LikesToWin
bool Oculus::Platform::Samples::VrHoops::AchievementsManager::get_LikesToWin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::get_LikesToWin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LikesToWin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.CheckForAchievmentUpdates
void Oculus::Platform::Samples::VrHoops::AchievementsManager::CheckForAchievmentUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::CheckForAchievmentUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAchievmentUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.RecordWinForLocalUser
void Oculus::Platform::Samples::VrHoops::AchievementsManager::RecordWinForLocalUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::RecordWinForLocalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordWinForLocalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.AchievementsManager.<CheckForAchievmentUpdates>b__4_0
void Oculus::Platform::Samples::VrHoops::AchievementsManager::$CheckForAchievmentUpdates$b__4_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementProgressList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::AchievementsManager::<CheckForAchievmentUpdates>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForAchievmentUpdates>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.BallEjector
#include "Oculus/Platform/Samples/VrHoops/BallEjector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.Camera2DController
#include "Oculus/Platform/Samples/VrHoops/Camera2DController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Camera2DController.Update
void Oculus::Platform::Samples::VrHoops::Camera2DController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Camera2DController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.DetectBasket
#include "Oculus/Platform/Samples/VrHoops/DetectBasket.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase m_phase
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase& Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_phase"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.Player m_owningPlayer
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::Player*& Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_owningPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::dyn_m_owningPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_owningPlayer"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.set_Player
void Oculus::Platform::Samples::VrHoops::DetectBasket::set_Player(::Oculus::Platform::Samples::VrHoops::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::set_Player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.OnTriggerEnter
void Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.DetectBasket.OnTriggerExit
void Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase
#include "Oculus/Platform/Samples/VrHoops/DetectBasket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase NONE
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase NONE
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_NONE(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase TOP
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_TOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_TOP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "TOP"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase TOP
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_TOP(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_TOP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "TOP", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTH
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTH
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTH(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTTOM
::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTTOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_get_BOTTOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase>("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTTOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.DetectBasket/Oculus.Platform.Samples.VrHoops.BasketPhase BOTTOM
void Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTTOM(::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::_set_BOTTOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "DetectBasket/BasketPhase", "BOTTOM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::DetectBasket::BasketPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.FlyText
#include "Oculus/Platform/Samples/VrHoops/FlyText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single LIFESPAN
float Oculus::Platform::Samples::VrHoops::FlyText::_get_LIFESPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::_get_LIFESPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "FlyText", "LIFESPAN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LIFESPAN
void Oculus::Platform::Samples::VrHoops::FlyText::_set_LIFESPAN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::_set_LIFESPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "FlyText", "LIFESPAN", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3 m_movePerFrame
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_movePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_movePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movePerFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_eol
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_eol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::dyn_m_eol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eol"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.FlyText.Start
void Oculus::Platform::Samples::VrHoops::FlyText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.FlyText.Update
void Oculus::Platform::Samples::VrHoops::FlyText::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::FlyText::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.GoalMover
#include "Oculus/Platform/Samples/VrHoops/GoalMover.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOVE_TOLERANCE
float Oculus::Platform::Samples::VrHoops::GoalMover::_get_MOVE_TOLERANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::_get_MOVE_TOLERANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "GoalMover", "MOVE_TOLERANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOVE_TOLERANCE
void Oculus::Platform::Samples::VrHoops::GoalMover::_set_MOVE_TOLERANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::_set_MOVE_TOLERANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "GoalMover", "MOVE_TOLERANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single MAX_OFFSET
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_MAX_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_MAX_OFFSET");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MAX_OFFSET"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speed
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_expectedPosition
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_expectedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_expectedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_expectedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_moveDirection
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_moveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_moveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_moveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_nextMoveDirection
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_nextMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::dyn_m_nextMoveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextMoveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_ExpectedPosition
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_ExpectedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_ExpectedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_ExpectedPosition
void Oculus::Platform::Samples::VrHoops::GoalMover::set_ExpectedPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_ExpectedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_MoveDirection
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_MoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_MoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_MoveDirection
void Oculus::Platform::Samples::VrHoops::GoalMover::set_MoveDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_MoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.get_NextMoveDirection
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::GoalMover::get_NextMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::get_NextMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.set_NextMoveDirection
void Oculus::Platform::Samples::VrHoops::GoalMover::set_NextMoveDirection(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::set_NextMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.Start
void Oculus::Platform::Samples::VrHoops::GoalMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.GoalMover.FixedUpdate
void Oculus::Platform::Samples::VrHoops::GoalMover::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::GoalMover::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnMostWinsLeaderboardUpdated.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnHighScoreLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String MOST_MATCHES_WON
::StringW Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_MOST_MATCHES_WON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_MOST_MATCHES_WON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "MOST_MATCHES_WON"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOST_MATCHES_WON
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_MOST_MATCHES_WON(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_MOST_MATCHES_WON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "MOST_MATCHES_WON", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HIGHEST_MATCH_SCORE
::StringW Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_HIGHEST_MATCH_SCORE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_HIGHEST_MATCH_SCORE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "HIGHEST_MATCH_SCORE"));
}
// Autogenerated static field setter
// Set static field: static private System.String HIGHEST_MATCH_SCORE
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_HIGHEST_MATCH_SCORE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_HIGHEST_MATCH_SCORE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "HIGHEST_MATCH_SCORE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOP_N_COUNT
int Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_TOP_N_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_TOP_N_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "TOP_N_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOP_N_COUNT
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_TOP_N_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_TOP_N_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "TOP_N_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LEADERBOARD_POLL_FREQ
float Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_LEADERBOARD_POLL_FREQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_get_LEADERBOARD_POLL_FREQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "LEADERBOARD_POLL_FREQ"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LEADERBOARD_POLL_FREQ
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_LEADERBOARD_POLL_FREQ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::_set_LEADERBOARD_POLL_FREQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "LeaderboardManager", "LEADERBOARD_POLL_FREQ", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextCheckTime
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_nextCheckTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_nextCheckTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextCheckTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedDictionary`2<System.Int32,Oculus.Platform.Models.LeaderboardEntry> m_mostWins
[[deprecated]] ::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_foundLocalUserMostWinsEntry
[[deprecated]] bool& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserMostWinsEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserMostWinsEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_foundLocalUserMostWinsEntry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_numWins
[[deprecated]] int64_t& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_numWins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_numWins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numWins"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated m_mostWinsCallback
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWinsCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_mostWinsCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWinsCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.SortedDictionary`2<System.Int32,Oculus.Platform.Models.LeaderboardEntry> m_highScores
[[deprecated]] ::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highScores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_foundLocalUserHighScore
[[deprecated]] bool& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserHighScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_foundLocalUserHighScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_foundLocalUserHighScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated m_highScoreCallback
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*& Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScoreCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::dyn_m_highScoreCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highScoreCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.set_MostWinsLeaderboardUpdatedCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_MostWinsLeaderboardUpdatedCallback(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_MostWinsLeaderboardUpdatedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MostWinsLeaderboardUpdatedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.set_HighScoreLeaderboardUpdatedCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_HighScoreLeaderboardUpdatedCallback(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::set_HighScoreLeaderboardUpdatedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighScoreLeaderboardUpdatedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.CheckForUpdates
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::CheckForUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::CheckForUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.QueryMostWinsLeaderboard
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryMostWinsLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryMostWinsLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryMostWinsLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.MostWinsGetEntriesCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::MostWinsGetEntriesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::MostWinsGetEntriesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MostWinsGetEntriesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.QueryHighScoreLeaderboard
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryHighScoreLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::QueryHighScoreLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueryHighScoreLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.HighestScoreGetEntriesCallback
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::HighestScoreGetEntriesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::HighestScoreGetEntriesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestScoreGetEntriesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager.SubmitMatchScores
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::SubmitMatchScores(bool wonMatch, uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::SubmitMatchScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitMatchScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wonMatch), ::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wonMatch, score);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnMostWinsLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.Invoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::Invoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::BeginInvoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, entries, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnMostWinsLeaderboardUpdated.EndInvoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnMostWinsLeaderboardUpdated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager_OnHighScoreLeaderboardUpdated.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.Invoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::Invoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::BeginInvoke(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, entries, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LeaderboardManager/Oculus.Platform.Samples.VrHoops.OnHighScoreLeaderboardUpdated.EndInvoke
void Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::LeaderboardManager::OnHighScoreLeaderboardUpdated*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.LocalPlayer
#include "Oculus/Platform/Samples/VrHoops/LocalPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LocalPlayer.Update
void Oculus::Platform::Samples::VrHoops::LocalPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LocalPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.LocalPlayer.set_Score
void Oculus::Platform::Samples::VrHoops::LocalPlayer::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::LocalPlayer::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchController
#include "Oculus/Platform/Samples/VrHoops/MatchController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.PlayerArea
#include "Oculus/Platform/Samples/VrHoops/PlayerArea.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.Collections.Generic.SortedDictionary`2
#include "System/Collections/Generic/SortedDictionary_2.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntry
#include "Oculus/Platform/Models/LeaderboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_timerText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_timerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_timerText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timerText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera m_camera
[[deprecated]] ::UnityEngine::Camera*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_idleCameraTransform
[[deprecated]] ::UnityEngine::Transform*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_idleCameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_idleCameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_idleCameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_matchmakeButtonText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_matchmakeButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_matchmakeButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmakeButtonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.PlayerArea[] m_playerAreas
[[deprecated]] ::ArrayW<::Oculus::Platform::Samples::VrHoops::PlayerArea*>& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_playerAreas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_playerAreas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerAreas"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrHoops::PlayerArea*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 PRACTICE_WARMUP_TIME
[[deprecated]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_PRACTICE_WARMUP_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_PRACTICE_WARMUP_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PRACTICE_WARMUP_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_WARMUP_TIME
[[deprecated]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_WARMUP_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_WARMUP_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_WARMUP_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_TIME
[[deprecated]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 MATCH_COOLDOWN_TIME
[[deprecated]] uint& Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_COOLDOWN_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_MATCH_COOLDOWN_TIME");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MATCH_COOLDOWN_TIME"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_mostWinsLeaderboard
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_mostWinsLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_mostWinsLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mostWinsLeaderboard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_highestScoresLeaderboard
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_highestScoresLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_highestScoresLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highestScoresLeaderboard"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_leaderboardEntryPrefab
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_leaderboardEntryPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_leaderboardEntryPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaderboardEntryPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_flytext
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_flytext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_flytext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flytext"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State m_currentState
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::MatchController::State& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchController::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextStateTransitionTime
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_nextStateTransitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_nextStateTransitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextStateTransitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_localSlot
[[deprecated]] int& Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_localSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::dyn_m_localSlot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_localSlot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.get_MatchStartTime
float Oculus::Platform::Samples::VrHoops::MatchController::get_MatchStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::get_MatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.set_MatchStartTime
void Oculus::Platform::Samples::VrHoops::MatchController::set_MatchStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::set_MatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.Start
void Oculus::Platform::Samples::VrHoops::MatchController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.Update
void Oculus::Platform::Samples::VrHoops::MatchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.TransitionToState
void Oculus::Platform::Samples::VrHoops::MatchController::TransitionToState(::Oculus::Platform::Samples::VrHoops::MatchController::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.UpdateCheckForNextTimedTransition
void Oculus::Platform::Samples::VrHoops::MatchController::UpdateCheckForNextTimedTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::UpdateCheckForNextTimedTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCheckForNextTimedTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.UpdateMatchTimer
void Oculus::Platform::Samples::VrHoops::MatchController::UpdateMatchTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::UpdateMatchTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMatchTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.SetupForIdle
void Oculus::Platform::Samples::VrHoops::MatchController::SetupForIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::SetupForIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupForIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.SetupForPractice
void Oculus::Platform::Samples::VrHoops::MatchController::SetupForPractice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::SetupForPractice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupForPractice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MatchPlayerAddedCallback
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchController::MatchPlayerAddedCallback(int slot, ::Oculus::Platform::Models::User* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(user)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, slot, user);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MoveCameraToIdlePosition
void Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToIdlePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToIdlePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToIdlePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MoveCameraToMatchPosition
void Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToMatchPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MoveCameraToMatchPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveCameraToMatchPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.StartPracticeMatch
void Oculus::Platform::Samples::VrHoops::MatchController::StartPracticeMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::StartPracticeMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPracticeMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.PlayOnlineOrCancel
void Oculus::Platform::Samples::VrHoops::MatchController::PlayOnlineOrCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::PlayOnlineOrCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOnlineOrCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.OnMatchFoundCallback
void Oculus::Platform::Samples::VrHoops::MatchController::OnMatchFoundCallback(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::OnMatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.StartTimeOfferCallback
float Oculus::Platform::Samples::VrHoops::MatchController::StartTimeOfferCallback(float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.MostWinsLeaderboardCallback
void Oculus::Platform::Samples::VrHoops::MatchController::MostWinsLeaderboardCallback(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::MostWinsLeaderboardCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MostWinsLeaderboardCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entries)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.HighestScoreLeaderboardCallback
void Oculus::Platform::Samples::VrHoops::MatchController::HighestScoreLeaderboardCallback(::System::Collections::Generic::SortedDictionary_2<int, ::Oculus::Platform::Models::LeaderboardEntry*>* entries) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::HighestScoreLeaderboardCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestScoreLeaderboardCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entries)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entries);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.CalculateMatchResults
void Oculus::Platform::Samples::VrHoops::MatchController::CalculateMatchResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::CalculateMatchResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateMatchResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchController.DisplayAchievementFlytext
void Oculus::Platform::Samples::VrHoops::MatchController::DisplayAchievementFlytext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::DisplayAchievementFlytext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisplayAchievementFlytext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State
#include "Oculus/Platform/Samples/VrHoops/MatchController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State UNKNOWN
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State UNKNOWN
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_UNKNOWN(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State NONE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State NONE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_NONE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_START_PRACTICE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_START_PRACTICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_START_PRACTICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_START_PRACTICE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_START_PRACTICE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_START_PRACTICE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_START_PRACTICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_START_PRACTICE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PRACTICING
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PRACTICING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PRACTICING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PRACTICING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PRACTICING
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PRACTICING(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PRACTICING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PRACTICING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_RESULTS_PRACTICE
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_RESULTS_PRACTICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_RESULTS_PRACTICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_RESULTS_PRACTICE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_RESULTS_PRACTICE
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_RESULTS_PRACTICE(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_RESULTS_PRACTICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_RESULTS_PRACTICE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_FOR_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_FOR_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_FOR_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_FOR_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_FOR_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_FOR_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_FOR_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_FOR_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_SETUP_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_SETUP_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_WAITING_TO_SETUP_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_SETUP_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State WAITING_TO_SETUP_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_SETUP_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_WAITING_TO_SETUP_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "WAITING_TO_SETUP_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PLAYING_MATCH
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PLAYING_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_PLAYING_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PLAYING_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State PLAYING_MATCH
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PLAYING_MATCH(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_PLAYING_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "PLAYING_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_MATCH_RESULTS
::Oculus::Platform::Samples::VrHoops::MatchController::State Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_MATCH_RESULTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_get_VIEWING_MATCH_RESULTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::MatchController::State>("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_MATCH_RESULTS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.MatchController/Oculus.Platform.Samples.VrHoops.State VIEWING_MATCH_RESULTS
void Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_MATCH_RESULTS(::Oculus::Platform::Samples::VrHoops::MatchController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::_set_VIEWING_MATCH_RESULTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchController/State", "VIEWING_MATCH_RESULTS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrHoops::MatchController::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchController::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnEnqueueResult.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnMatchPlayerAdded.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String NORMAL_POOL
::StringW Oculus::Platform::Samples::VrHoops::MatchmakingManager::_get_NORMAL_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::_get_NORMAL_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrHoops", "MatchmakingManager", "NORMAL_POOL"));
}
// Autogenerated static field setter
// Set static field: static private System.String NORMAL_POOL
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::_set_NORMAL_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::_set_NORMAL_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "MatchmakingManager", "NORMAL_POOL", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_matchRoom
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_matchRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_matchRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchRoom"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Models.User> m_remotePlayers
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Models::User*>*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Models::User*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult m_enqueueCallback
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_enqueueCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_enqueueCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enqueueCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded m_playerCallback
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*& Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_playerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::dyn_m_playerCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.get_EnqueueResultCallback
::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_EnqueueResultCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_EnqueueResultCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnqueueResultCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.set_EnqueueResultCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_EnqueueResultCallback(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_EnqueueResultCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnqueueResultCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.get_MatchPlayerAddedCallback
::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded* Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_MatchPlayerAddedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::get_MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.set_MatchPlayerAddedCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_MatchPlayerAddedCallback(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::set_MatchPlayerAddedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MatchPlayerAddedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.QueueForMatch
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::QueueForMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::QueueForMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueForMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingEnqueueCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingEnqueueCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingEnqueueCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingEnqueueCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchFoundCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchFoundCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingJoinRoomCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingJoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingJoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingJoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.MatchmakingRoomUpdateCallback
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingRoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::MatchmakingRoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingRoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.EndMatch
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::EndMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::EndMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager.LeaveQueue
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::LeaveQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::LeaveQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnEnqueueResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.Invoke
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::Invoke(bool successful) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, successful);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::BeginInvoke(bool successful, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, successful, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnEnqueueResult.EndInvoke
void Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnEnqueueResult*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager_OnMatchPlayerAdded.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.Invoke
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke(int slot, ::Oculus::Platform::Models::User* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, slot, user);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke(int slot, ::Oculus::Platform::Models::User* user, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, slot, user, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.MatchmakingManager/Oculus.Platform.Samples.VrHoops.OnMatchPlayerAdded.EndInvoke
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::MatchmakingManager::OnMatchPlayerAdded*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager
#include "Oculus/Platform/Samples/VrHoops/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData
#include "Oculus/Platform/Samples/VrHoops/P2PManager_RemotePlayerData.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer
#include "Oculus/Platform/Samples/VrHoops/P2PManager_StartTimeOffer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte TIME_SYNC_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte TIME_SYNC_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 TIME_SYNC_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 TIME_SYNC_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TIME_SYNC_MESSAGE_COUNT
int Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_TIME_SYNC_MESSAGE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TIME_SYNC_MESSAGE_COUNT
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_TIME_SYNC_MESSAGE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "TIME_SYNC_MESSAGE_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte START_TIME_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte START_TIME_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 START_TIME_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_START_TIME_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 START_TIME_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_START_TIME_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "START_TIME_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte BACKBOARD_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte BACKBOARD_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 BACKBOARD_UPDATE_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_BACKBOARD_UPDATE_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 BACKBOARD_UPDATE_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_BACKBOARD_UPDATE_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "BACKBOARD_UPDATE_MESSAGE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte LOCAL_BALLS_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte LOCAL_BALLS_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOCAL_BALLS_UPDATE_DELAY
float Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_DELAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_LOCAL_BALLS_UPDATE_DELAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_DELAY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOCAL_BALLS_UPDATE_DELAY
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_DELAY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_LOCAL_BALLS_UPDATE_DELAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "LOCAL_BALLS_UPDATE_DELAY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte SCORE_UPDATE_MESSAGE
uint8_t Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte SCORE_UPDATE_MESSAGE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 SCORE_UPDATE_MESSAGE_SIZE
uint Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_get_SCORE_UPDATE_MESSAGE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 SCORE_UPDATE_MESSAGE_SIZE
void Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE_SIZE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::_set_SCORE_UPDATE_MESSAGE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "P2PManager", "SCORE_UPDATE_MESSAGE_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData> m_remotePlayers
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remotePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remotePlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_timeForNextBallUpdate
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_timeForNextBallUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_timeForNextBallUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeForNextBallUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Platform.Samples.VrHoops.P2PNetworkBall> m_localBalls
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_localBalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_localBalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_localBalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] readBuffer
[[deprecated]] ::ArrayW<uint8_t>& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,System.Collections.Generic.List`1<System.Single>> m_remoteSyncTimeCache
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<float>*>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSyncTimeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSyncTimeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteSyncTimeCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::List_1<float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.UInt64,System.Single> m_remoteSentTimeCache
[[deprecated]] ::System::Collections::Generic::Dictionary_2<uint64_t, float>*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSentTimeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_remoteSentTimeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remoteSentTimeCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer m_startTimeOfferCallback
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*& Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_startTimeOfferCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::dyn_m_startTimeOfferCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startTimeOfferCallback"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.get_StartTimeOfferCallback
::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer* Oculus::Platform::Samples::VrHoops::P2PManager::get_StartTimeOfferCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::get_StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.set_StartTimeOfferCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::set_StartTimeOfferCallback(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::set_StartTimeOfferCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartTimeOfferCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UpdateNetwork
void Oculus::Platform::Samples::VrHoops::P2PManager::UpdateNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UpdateNetwork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.AddRemotePlayer
void Oculus::Platform::Samples::VrHoops::P2PManager::AddRemotePlayer(::Oculus::Platform::Samples::VrHoops::RemotePlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::AddRemotePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRemotePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.DisconnectAll
void Oculus::Platform::Samples::VrHoops::P2PManager::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::DisconnectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PeerConnectRequestCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::PeerConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ConnectionStateChangedCallback
void Oculus::Platform::Samples::VrHoops::P2PManager::ConnectionStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendTimeSyncMessage
void Oculus::Platform::Samples::VrHoops::P2PManager::SendTimeSyncMessage(uint64_t remoteID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendTimeSyncMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTimeSyncMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReadTimeSyncMessage
void Oculus::Platform::Samples::VrHoops::P2PManager::ReadTimeSyncMessage(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReadTimeSyncMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadTimeSyncMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ShiftRemoteTime
float Oculus::Platform::Samples::VrHoops::P2PManager::ShiftRemoteTime(uint64_t remoteID, float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ShiftRemoteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShiftRemoteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(remoteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteID, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.OfferMatchStartTime
void Oculus::Platform::Samples::VrHoops::P2PManager::OfferMatchStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::OfferMatchStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OfferMatchStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveMatchStartTimeOffer
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveMatchStartTimeOffer(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveMatchStartTimeOffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMatchStartTimeOffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::SendBackboardUpdate(float time, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 moveDir, ::UnityEngine::Vector3 nextMoveDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(moveDir), ::il2cpp_utils::ExtractType(nextMoveDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, pos, moveDir, nextMoveDir);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBackboardUpdate(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.AddNetworkBall
void Oculus::Platform::Samples::VrHoops::P2PManager::AddNetworkBall(::UnityEngine::GameObject* ball) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::AddNetworkBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNetworkBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ball)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ball);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.RemoveNetworkBall
void Oculus::Platform::Samples::VrHoops::P2PManager::RemoveNetworkBall(::UnityEngine::GameObject* ball) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemoveNetworkBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNetworkBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ball)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ball);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendLocalBallTransforms
void Oculus::Platform::Samples::VrHoops::P2PManager::SendLocalBallTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendLocalBallTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLocalBallTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveBallTransforms
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBallTransforms(uint64_t remoteID, ::ArrayW<uint8_t> msg, uint64_t msgLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveBallTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveBallTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(msgLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg, msgLength);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.SendScoreUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::SendScoreUpdate(uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::SendScoreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendScoreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.ReceiveScoredUpdate
void Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveScoredUpdate(uint64_t remoteID, ::ArrayW<uint8_t> msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::ReceiveScoredUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveScoredUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteID, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackVector3
void Oculus::Platform::Samples::VrHoops::P2PManager::PackVector3(::UnityEngine::Vector3 vec, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vec, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackVector3
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PManager::UnpackVector3(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackQuaternion
void Oculus::Platform::Samples::VrHoops::P2PManager::PackQuaternion(::UnityEngine::Quaternion quat, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quat), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quat, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackFloat
void Oculus::Platform::Samples::VrHoops::P2PManager::PackFloat(float value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackFloat
float Oculus::Platform::Samples::VrHoops::P2PManager::UnpackFloat(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackTime
float Oculus::Platform::Samples::VrHoops::P2PManager::UnpackTime(uint64_t remoteID, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteID), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteID, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackInt32
void Oculus::Platform::Samples::VrHoops::P2PManager::PackInt32(int value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackInt32
int Oculus::Platform::Samples::VrHoops::P2PManager::UnpackInt32(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackUint32
void Oculus::Platform::Samples::VrHoops::P2PManager::PackUint32(uint value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackUint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackUint32
uint Oculus::Platform::Samples::VrHoops::P2PManager::UnpackUint32(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackUint32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackUint32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.PackBool
void Oculus::Platform::Samples::VrHoops::P2PManager::PackBool(bool value, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::PackBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, buf, byref(offset));
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager.UnpackBool
bool Oculus::Platform::Samples::VrHoops::P2PManager::UnpackBool(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::UnpackBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnpackBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.RemotePlayerData
#include "Oculus/Platform/Samples/VrHoops/P2PManager_RemotePlayerData.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.PeerConnectionState state
[[deprecated]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Samples.VrHoops.RemotePlayer player
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::RemotePlayer*& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::RemotePlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single remoteTimeOffset
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_remoteTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_remoteTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastReceivedBallsTime
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_lastReceivedBallsTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_lastReceivedBallsTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastReceivedBallsTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.Int32,Oculus.Platform.Samples.VrHoops.P2PNetworkBall> activeBalls
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>*& Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_activeBalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::RemotePlayerData::dyn_activeBalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeBalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Oculus::Platform::Samples::VrHoops::P2PNetworkBall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer
#include "Oculus/Platform/Samples/VrHoops/P2PManager_StartTimeOffer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.Invoke
float Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::Invoke(float remoteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, remoteTime);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.BeginInvoke
::System::IAsyncResult* Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::BeginInvoke(float remoteTime, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, remoteTime, callback, object);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PManager/Oculus.Platform.Samples.VrHoops.StartTimeOffer.EndInvoke
float Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::P2PManager::StartTimeOffer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkBall
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkBall.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single lastCollisionTime
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_lastCollisionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_lastCollisionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCollisionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rigidBody
[[deprecated]] ::UnityEngine::Rigidbody*& Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_rigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::dyn_rigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.get_velocity
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.Awake
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.IsHeld
bool Oculus::Platform::Samples::VrHoops::P2PNetworkBall::IsHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::IsHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.ProcessRemoteUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::ProcessRemoteUpdate(float remoteTime, bool isHeld, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 vel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::ProcessRemoteUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemoteUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime), ::il2cpp_utils::ExtractType(isHeld), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(vel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteTime, isHeld, pos, vel);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.estimatePosition
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimatePosition(::UnityEngine::Vector3 startPosition, ::UnityEngine::Vector3 startVelocty, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "estimatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(startVelocty), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, startPosition, startVelocty, time);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.estimateVelocity
::UnityEngine::Vector3 Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimateVelocity(::UnityEngine::Vector3 startVelocity, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::estimateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "estimateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startVelocity), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, startVelocity, time);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.OnCollisionEnter
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkBall.OnDestroy
void Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkBall::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.GoalMover
#include "Oculus/Platform/Samples/VrHoops/GoalMover.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.GoalMover m_goal
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::GoalMover*& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::GoalMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_lastSentMoveDirection
[[deprecated]] ::UnityEngine::Vector3& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_lastSentMoveDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_lastSentMoveDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastSentMoveDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_sendUpdates
[[deprecated]] bool& Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_sendUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::dyn_m_sendUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sendUpdates"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.set_SendUpdates
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::set_SendUpdates(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::set_SendUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.Awake
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.FixedUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.SendBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::SendBackboardUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::SendBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal.RemoteBackboardUpdate
void Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::RemoteBackboardUpdate(float remoteTime, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 moveDir, ::UnityEngine::Vector3 nextMoveDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal::RemoteBackboardUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteBackboardUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteTime), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(moveDir), ::il2cpp_utils::ExtractType(nextMoveDir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteTime, pos, moveDir, nextMoveDir);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlatformManager
#include "Oculus/Platform/Samples/VrHoops/PlatformManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.MatchmakingManager
#include "Oculus/Platform/Samples/VrHoops/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PManager
#include "Oculus/Platform/Samples/VrHoops/P2PManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.LeaderboardManager
#include "Oculus/Platform/Samples/VrHoops/LeaderboardManager.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.AchievementsManager
#include "Oculus/Platform/Samples/VrHoops/AchievementsManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrHoops.PlatformManager s_instance
::Oculus::Platform::Samples::VrHoops::PlatformManager* Oculus::Platform::Samples::VrHoops::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager*>("Oculus.Platform.Samples.VrHoops", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrHoops.PlatformManager s_instance
void Oculus::Platform::Samples::VrHoops::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrHoops::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.MatchmakingManager m_matchmaking
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::MatchmakingManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_matchmaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmaking"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::MatchmakingManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PManager m_p2p
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::P2PManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_p2p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_p2p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2p"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.LeaderboardManager m_leaderboards
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::LeaderboardManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_leaderboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_leaderboards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaderboards"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::LeaderboardManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.AchievementsManager m_achievements
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::AchievementsManager*& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_achievements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_achievements"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::AchievementsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State m_currentState
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::PlatformManager::State& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::PlatformManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated]] ::StringW& Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Matchmaking
::Oculus::Platform::Samples::VrHoops::MatchmakingManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Matchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Matchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::MatchmakingManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_P2P
::Oculus::Platform::Samples::VrHoops::P2PManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_P2P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_P2P");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_P2P", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Leaderboards
::Oculus::Platform::Samples::VrHoops::LeaderboardManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Leaderboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Leaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Leaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::LeaderboardManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_Achievements
::Oculus::Platform::Samples::VrHoops::AchievementsManager* Oculus::Platform::Samples::VrHoops::PlatformManager::get_Achievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_Achievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_Achievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::AchievementsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_CurrentState
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::PlatformManager::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Update
void Oculus::Platform::Samples::VrHoops::PlatformManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Awake
void Oculus::Platform::Samples::VrHoops::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.Start
void Oculus::Platform::Samples::VrHoops::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrHoops::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrHoops::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrHoops::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.QuitButtonPressed
void Oculus::Platform::Samples::VrHoops::PlatformManager::QuitButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::QuitButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.OnApplicationQuit
void Oculus::Platform::Samples::VrHoops::PlatformManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlatformManager.TransitionToState
void Oculus::Platform::Samples::VrHoops::PlatformManager::TransitionToState(::Oculus::Platform::Samples::VrHoops::PlatformManager::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrHoops", "PlatformManager", "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State
#include "Oculus/Platform/Samples/VrHoops/PlatformManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State INITIALIZING
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_INITIALIZING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_INITIALIZING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "INITIALIZING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State INITIALIZING
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_INITIALIZING(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_INITIALIZING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "INITIALIZING", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State WAITING_TO_PRACTICE_OR_MATCHMAKE
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_WAITING_TO_PRACTICE_OR_MATCHMAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_WAITING_TO_PRACTICE_OR_MATCHMAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "WAITING_TO_PRACTICE_OR_MATCHMAKE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State WAITING_TO_PRACTICE_OR_MATCHMAKE
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_WAITING_TO_PRACTICE_OR_MATCHMAKE(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_WAITING_TO_PRACTICE_OR_MATCHMAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "WAITING_TO_PRACTICE_OR_MATCHMAKE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State MATCH_TRANSITION
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_MATCH_TRANSITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_MATCH_TRANSITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "MATCH_TRANSITION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State MATCH_TRANSITION
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_MATCH_TRANSITION(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_MATCH_TRANSITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "MATCH_TRANSITION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_LOCAL_MATCH
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_LOCAL_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_LOCAL_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_LOCAL_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_LOCAL_MATCH
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_LOCAL_MATCH(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_LOCAL_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_LOCAL_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_NETWORKED_MATCH
::Oculus::Platform::Samples::VrHoops::PlatformManager::State Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_NETWORKED_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_get_PLAYING_A_NETWORKED_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrHoops::PlatformManager::State>("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_NETWORKED_MATCH"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrHoops.PlatformManager/Oculus.Platform.Samples.VrHoops.State PLAYING_A_NETWORKED_MATCH
void Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_NETWORKED_MATCH(::Oculus::Platform::Samples::VrHoops::PlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::_set_PLAYING_A_NETWORKED_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "PlatformManager/State", "PLAYING_A_NETWORKED_MATCH", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrHoops::PlatformManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlatformManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.BallEjector
#include "Oculus/Platform/Samples/VrHoops/BallEjector.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 MAX_BALLS
uint Oculus::Platform::Samples::VrHoops::Player::_get_MAX_BALLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_MAX_BALLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Oculus.Platform.Samples.VrHoops", "Player", "MAX_BALLS"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MAX_BALLS
void Oculus::Platform::Samples::VrHoops::Player::_set_MAX_BALLS(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_MAX_BALLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "MAX_BALLS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single INITIAL_FORCE
float Oculus::Platform::Samples::VrHoops::Player::_get_INITIAL_FORCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_INITIAL_FORCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "Player", "INITIAL_FORCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single INITIAL_FORCE
void Oculus::Platform::Samples::VrHoops::Player::_set_INITIAL_FORCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_INITIAL_FORCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "INITIAL_FORCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single RESPAWN_SECONDS
float Oculus::Platform::Samples::VrHoops::Player::_get_RESPAWN_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_get_RESPAWN_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrHoops", "Player", "RESPAWN_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RESPAWN_SECONDS
void Oculus::Platform::Samples::VrHoops::Player::_set_RESPAWN_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::_set_RESPAWN_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrHoops", "Player", "RESPAWN_SECONDS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_score
[[deprecated]] uint& Oculus::Platform::Samples::VrHoops::Player::dyn_m_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_score"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_scoreUI
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_scoreUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_scoreUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scoreUI"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ballPrefab
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.BallEjector m_ballEjector
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::BallEjector*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballEjector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_ballEjector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballEjector"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::BallEjector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<UnityEngine.GameObject> m_balls
[[deprecated]] ::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_balls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_balls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_balls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_heldBall
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::Player::dyn_m_heldBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_heldBall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_heldBall"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_nextSpawnTime
[[deprecated]] float& Oculus::Platform::Samples::VrHoops::Player::dyn_m_nextSpawnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::dyn_m_nextSpawnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextSpawnTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.get_Score
uint Oculus::Platform::Samples::VrHoops::Player::get_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::get_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 4));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.set_Score
void Oculus::Platform::Samples::VrHoops::Player::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.set_BallPrefab
void Oculus::Platform::Samples::VrHoops::Player::set_BallPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::set_BallPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BallPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.get_HasBall
bool Oculus::Platform::Samples::VrHoops::Player::get_HasBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::get_HasBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.Start
void Oculus::Platform::Samples::VrHoops::Player::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.CreateBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::CreateBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::CreateBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.CheckSpawnBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::CheckSpawnBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::CheckSpawnBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSpawnBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.ShootBall
::UnityEngine::GameObject* Oculus::Platform::Samples::VrHoops::Player::ShootBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::ShootBall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShootBall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.Player.OnDestroy
void Oculus::Platform::Samples::VrHoops::Player::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::Player::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.PlayerArea
#include "Oculus/Platform/Samples/VrHoops/PlayerArea.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.Player
#include "Oculus/Platform/Samples/VrHoops/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ballPrefab
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_ballPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_ballPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_playerHead
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_nameText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PNetworkGoal m_p2pGoal
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*& Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_p2pGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::dyn_m_p2pGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_p2pGoal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.get_Player
::Oculus::Platform::Samples::VrHoops::Player* Oculus::Platform::Samples::VrHoops::PlayerArea::get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::get_Player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.get_NameText
::UnityEngine::UI::Text* Oculus::Platform::Samples::VrHoops::PlayerArea::get_NameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::get_NameText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.PlayerArea.Awake
void Oculus::Platform::Samples::VrHoops::PlayerArea::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::PlayerArea::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.RemotePlayer
#include "Oculus/Platform/Samples/VrHoops/RemotePlayer.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Samples.VrHoops.P2PNetworkGoal
#include "Oculus/Platform/Samples/VrHoops/P2PNetworkGoal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_user
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_user");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_user"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrHoops.P2PNetworkGoal m_goal
[[deprecated]] ::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*& Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::dyn_m_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_goal"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_User
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_User(::Oculus::Platform::Models::User* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_User");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_User", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.get_ID
uint64_t Oculus::Platform::Samples::VrHoops::RemotePlayer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.get_Goal
::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal* Oculus::Platform::Samples::VrHoops::RemotePlayer::get_Goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::get_Goal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Goal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_Goal
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Goal(::Oculus::Platform::Samples::VrHoops::P2PNetworkGoal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Goal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Goal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.ReceiveRemoteScore
void Oculus::Platform::Samples::VrHoops::RemotePlayer::ReceiveRemoteScore(uint score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::ReceiveRemoteScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRemoteScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.RemotePlayer.set_Score
void Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Score(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::RemotePlayer::set_Score");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Platform::Samples::VrHoops::Player*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrHoops.VREyeRaycaster
#include "Oculus/Platform/Samples/VrHoops/VREyeRaycaster.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrHoops.VREyeRaycaster.Update
void Oculus::Platform::Samples::VrHoops::VREyeRaycaster::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrHoops::VREyeRaycaster::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 x
[[deprecated]] int& Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 y
[[deprecated]] int& Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::BoardPosition::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.EyeCamera
#include "Oculus/Platform/Samples/VrBoardGame/EyeCamera.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem m_eventSystem
[[deprecated]] ::UnityEngine::EventSystems::EventSystem*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider m_gazeTracker
[[deprecated]] ::UnityEngine::SphereCollider*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gazeTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_gazeTracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gazeTracker"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button m_currentButton
[[deprecated]] ::UnityEngine::UI::Button*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_currentPiece
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_currentPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition m_boardPosition
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::BoardPosition*& Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_boardPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::dyn_m_boardPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_boardPosition"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::BoardPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.EyeCamera.Update
void Oculus::Platform::Samples::VrBoardGame::EyeCamera::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::EyeCamera::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameBoard
#include "Oculus/Platform/Samples/VrBoardGame/GameBoard.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 LENGTH_X
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_X"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LENGTH_X
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_X(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_X", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LENGTH_Y
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_LENGTH_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_Y"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LENGTH_Y
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_Y(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_LENGTH_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "LENGTH_Y", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_PLAYERS
int Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_MAX_PLAYERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_get_MAX_PLAYERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "MAX_PLAYERS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_PLAYERS
void Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_MAX_PLAYERS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::_set_MAX_PLAYERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameBoard", "MAX_PLAYERS", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] m_playerColors
[[deprecated]] ::ArrayW<::UnityEngine::Color>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_playerColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_playerColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_playerColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_proposedMoveColor
[[deprecated]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_proposedMoveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_proposedMoveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proposedMoveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_scores
[[deprecated]] ::ArrayW<int>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scores"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition[] m_positions
[[deprecated]] ::ArrayW<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_positions"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Oculus.Platform.Samples.VrBoardGame.GameBoard/Oculus.Platform.Samples.VrBoardGame.PositionInfo[,] m_pieces
[[deprecated]] ::ArrayW<::Oculus::Platform::Samples::VrBoardGame::GameBoard::PositionInfo>& Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_pieces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::dyn_m_pieces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieces"))->offset;
  return *reinterpret_cast<::ArrayW<::Oculus::Platform::Samples::VrBoardGame::GameBoard::PositionInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.Reset
void Oculus::Platform::Samples::VrBoardGame::GameBoard::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.IsFull
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::IsFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.CanPlayerMoveToPostion
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerMoveToPostion(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerMoveToPostion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayerMoveToPostion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.CanPlayerPowerUpPosition
bool Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerPowerUpPosition(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::CanPlayerPowerUpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlayerPowerUpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddPiece
void Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPiece(int player, ::UnityEngine::GameObject* prefab, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, prefab, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddProposedPiece
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPiece(::UnityEngine::GameObject* prefab, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProposedPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, pos);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddPowerPiece
void Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPowerPiece(int player, ::UnityEngine::GameObject* prefab, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddPowerPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPowerPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, prefab, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.AddProposedPowerPiece
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPowerPiece(::UnityEngine::GameObject* prefab, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::AddProposedPowerPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddProposedPowerPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, pos);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.Create
::Oculus::Platform::Samples::VrBoardGame::GamePiece* Oculus::Platform::Samples::VrBoardGame::GameBoard::Create(::UnityEngine::GameObject* prefab, ::UnityEngine::GameObject* parent, ::Oculus::Platform::Samples::VrBoardGame::BoardPosition* pos, ::UnityEngine::Vector3 off) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(off)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece*, false>(this, ___internal__method, prefab, parent, pos, off);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.GetPlayerScore
int Oculus::Platform::Samples::VrBoardGame::GameBoard::GetPlayerScore(int player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::GetPlayerScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameBoard.UpdateScores
void Oculus::Platform::Samples::VrBoardGame::GameBoard::UpdateScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameBoard::UpdateScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameBoard
#include "Oculus/Platform/Samples/VrBoardGame/GameBoard.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.MatchmakingManager m_matchmaking
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_matchmaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_matchmaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchmaking"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameBoard m_board
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GameBoard*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_board() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_board");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_board"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_pieceA
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieceA"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_pieceB
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_pieceB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pieceB"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_powerPiece
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_powerPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_unusableColor
[[deprecated]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unusableColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unusableColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_unusableColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_unselectedColor
[[deprecated]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unselectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_unselectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_unselectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_selectedColor
[[deprecated]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_selectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_highlightedColor
[[deprecated]] ::UnityEngine::Color& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_highlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlightedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_ballCountText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_ballCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_ballCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ballCountText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_player0Text
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player0Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player0Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_player0Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_player1Text
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player1Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_player1Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_player1Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState m_state
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GameController::GameState& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_interestedPiece
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_interestedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_interestedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_interestedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_selectedPiece
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_selectedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_selectedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece m_proposedPiece
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece*& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_proposedPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_proposedPiece");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proposedPiece"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_powerBallcount
[[deprecated]] uint& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerBallcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_powerBallcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_powerBallcount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_opponentName
[[deprecated]] ::StringW& Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_opponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::dyn_m_opponentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_opponentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.Start
void Oculus::Platform::Samples::VrBoardGame::GameController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.Update
void Oculus::Platform::Samples::VrBoardGame::GameController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TransitionToState
void Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToState(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TransitionToNextState
void Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToNextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TransitionToNextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.PerFrameStateUpdate
void Oculus::Platform::Samples::VrBoardGame::GameController::PerFrameStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::PerFrameStateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerFrameStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.PracticeButtonPressed
void Oculus::Platform::Samples::VrBoardGame::GameController::PracticeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::PracticeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PracticeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MakeAIMove
void Oculus::Platform::Samples::VrBoardGame::GameController::MakeAIMove(int player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MakeAIMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeAIMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartOnlineMatch
void Oculus::Platform::Samples::VrBoardGame::GameController::StartOnlineMatch(::StringW opponentName, bool localUserGoesFirst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartOnlineMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOnlineMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opponentName), ::il2cpp_utils::ExtractType(localUserGoesFirst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opponentName, localUserGoesFirst);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MakeRemoteMove
void Oculus::Platform::Samples::VrBoardGame::GameController::MakeRemoteMove(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece piece, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MakeRemoteMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRemoteMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, x, y);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.MarkRemoteTurnComplete
void Oculus::Platform::Samples::VrBoardGame::GameController::MarkRemoteTurnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::MarkRemoteTurnComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkRemoteTurnComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.RemoteMatchEnded
void Oculus::Platform::Samples::VrBoardGame::GameController::RemoteMatchEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::RemoteMatchEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteMatchEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartedLookingAtPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPiece(::Oculus::Platform::Samples::VrBoardGame::GamePiece* piece) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartedLookingAtPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StoppedLookingAtPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::StoppedLookingAtPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StoppedLookingAtPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoppedLookingAtPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.StartedLookingAtPosition
void Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPosition(::Oculus::Platform::Samples::VrBoardGame::BoardPosition* position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::StartedLookingAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartedLookingAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.ClearProposedMove
void Oculus::Platform::Samples::VrBoardGame::GameController::ClearProposedMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::ClearProposedMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearProposedMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TrySelectPiece
void Oculus::Platform::Samples::VrBoardGame::GameController::TrySelectPiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TrySelectPiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySelectPiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.TryPlacePiece
void Oculus::Platform::Samples::VrBoardGame::GameController::TryPlacePiece() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::TryPlacePiece");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryPlacePiece", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.QuitButtonPressed
void Oculus::Platform::Samples::VrBoardGame::GameController::QuitButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::QuitButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuitButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.AddPowerballs
void Oculus::Platform::Samples::VrBoardGame::GameController::AddPowerballs(uint count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::AddPowerballs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPowerballs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.UpdateScores
void Oculus::Platform::Samples::VrBoardGame::GameController::UpdateScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::UpdateScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GameController.UpdateGamePieceColors
void Oculus::Platform::Samples::VrBoardGame::GameController::UpdateGamePieceColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::UpdateGamePieceColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGamePieceColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState None
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState None
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_None(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingMyTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingMyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingMyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingMyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingMyTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingMyTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingMyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingMyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingAiTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingAiTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_PracticingAiTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingAiTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState PracticingAiTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingAiTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_PracticingAiTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "PracticingAiTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchMyTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchMyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchMyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchMyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchMyTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchMyTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchMyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchMyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchRemoteTurn
::Oculus::Platform::Samples::VrBoardGame::GameController::GameState Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchRemoteTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_get_OnlineMatchRemoteTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GameController::GameState>("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchRemoteTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GameController/Oculus.Platform.Samples.VrBoardGame.GameState OnlineMatchRemoteTurn
void Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchRemoteTurn(::Oculus::Platform::Samples::VrBoardGame::GameController::GameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::_set_OnlineMatchRemoteTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GameController/GameState", "OnlineMatchRemoteTurn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrBoardGame::GameController::GameState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GameController::GameState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.BoardPosition
#include "Oculus/Platform/Samples/VrBoardGame/BoardPosition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece m_type
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabA
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabA"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabB
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabB"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_prefabPower
[[deprecated]] ::UnityEngine::GameObject*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_prefabPower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prefabPower"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.BoardPosition m_position
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::BoardPosition*& Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::dyn_m_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_position"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::BoardPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Type
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Position
::Oculus::Platform::Samples::VrBoardGame::BoardPosition* Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::VrBoardGame::BoardPosition*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.set_Position
void Oculus::Platform::Samples::VrBoardGame::GamePiece::set_Position(::Oculus::Platform::Samples::VrBoardGame::BoardPosition* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.get_Prefab
::UnityEngine::GameObject* Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::get_Prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.GamePiece.PrefabFor
::UnityEngine::GameObject* Oculus::Platform::Samples::VrBoardGame::GamePiece::PrefabFor(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::PrefabFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrefabFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece A
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "A"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece A
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_A(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "A", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece B
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "B"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece B
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_B(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "B", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece PowerBall
::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_PowerBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_get_PowerBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece>("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "PowerBall"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece PowerBall
void Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_PowerBall(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::_set_PowerBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "GamePiece/Piece", "PowerBall", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.IAPManager
#include "Oculus/Platform/Samples/VrBoardGame/IAPManager.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String CONSUMABLE_1
::StringW Oculus::Platform::Samples::VrBoardGame::IAPManager::_get_CONSUMABLE_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::_get_CONSUMABLE_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrBoardGame", "IAPManager", "CONSUMABLE_1"));
}
// Autogenerated static field setter
// Set static field: static private System.String CONSUMABLE_1
void Oculus::Platform::Samples::VrBoardGame::IAPManager::_set_CONSUMABLE_1(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::_set_CONSUMABLE_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "IAPManager", "CONSUMABLE_1", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_priceText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_priceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::dyn_m_priceText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_priceText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.Start
void Oculus::Platform::Samples::VrBoardGame::IAPManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.FetchProductPrices
void Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchProductPrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchProductPrices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchProductPrices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.GetProductsBySKUCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::GetProductsBySKUCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::ProductList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::GetProductsBySKUCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductsBySKUCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.FetchPurchasedProducts
void Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchPurchasedProducts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::FetchPurchasedProducts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchPurchasedProducts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.GetViewerPurchasesCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::GetViewerPurchasesCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::GetViewerPurchasesCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetViewerPurchasesCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.BuyPowerBallsPressed
void Oculus::Platform::Samples::VrBoardGame::IAPManager::BuyPowerBallsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::BuyPowerBallsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPowerBallsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.IAPManager.LaunchCheckoutFlowCallback
void Oculus::Platform::Samples::VrBoardGame::IAPManager::LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::IAPManager::LaunchCheckoutFlowCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GameController
#include "Oculus/Platform/Samples/VrBoardGame/GameController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Samples.VrBoardGame.GamePiece/Oculus.Platform.Samples.VrBoardGame.Piece
#include "Oculus/Platform/Samples/VrBoardGame/GamePiece.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String POOL
::StringW Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POOL"));
}
// Autogenerated static field setter
// Set static field: static private System.String POOL
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POOL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single POLL_FREQUENCY
float Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POLL_FREQUENCY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_get_POLL_FREQUENCY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POLL_FREQUENCY"));
}
// Autogenerated static field setter
// Set static field: static private System.Single POLL_FREQUENCY
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POLL_FREQUENCY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::_set_POLL_FREQUENCY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager", "POLL_FREQUENCY", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.GameController m_gameController
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::GameController*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_gameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_gameController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_gameController"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::GameController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_matchButtonText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchButtonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text m_infoText
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_infoText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_matchRoom
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_matchRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchRoom"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User m_remotePlayer
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_remotePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_remotePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_remotePlayer"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lastUpdateTime
[[deprecated]] float& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState m_state
[[deprecated]] ::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.Start
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.Update
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchButtonPressed
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.EndMatch
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::EndMatch(int localScore, int remoteScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::EndMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localScore), ::il2cpp_utils::ExtractType(remoteScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localScore, remoteScore);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.OnApplicationQuit
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.TransitionToState
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::TransitionToState(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingEnqueueCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingEnqueueCallback(::Oculus::Platform::Message* untyped_msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingEnqueueCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingEnqueueCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(untyped_msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, untyped_msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchFoundCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchFoundCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchFoundCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFoundCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingJoinRoomCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingJoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingJoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingJoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.MatchmakingRoomUpdateCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingRoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchmakingRoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchmakingRoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.ProcessRoomData
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRoomData(::Oculus::Platform::Models::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRoomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRoomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.ProcessRemoteMove
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRemoteMove(::StringW moveString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::ProcessRemoteMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemoteMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveString);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.SendLocalMove
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::SendLocalMove(::Oculus::Platform::Samples::VrBoardGame::GamePiece::Piece piece, int boardX, int boardY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::SendLocalMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLocalMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piece), ::il2cpp_utils::ExtractType(boardX), ::il2cpp_utils::ExtractType(boardY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, piece, boardX, boardY);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.UpdateDataStoreCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::UpdateDataStoreCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::UpdateDataStoreCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDataStoreCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.DoesLocalUserGoFirst
bool Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::DoesLocalUserGoFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::DoesLocalUserGoFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesLocalUserGoFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager.GenericErrorCheckCallback
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::GenericErrorCheckCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::GenericErrorCheckCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenericErrorCheckCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState
#include "Oculus/Platform/Samples/VrBoardGame/MatchmakingManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState None
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState None
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_None(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Queued
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Queued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Queued");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Queued"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Queued
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Queued(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Queued");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Queued", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Configuring
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Configuring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_Configuring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Configuring"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState Configuring
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Configuring(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_Configuring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "Configuring", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState MyTurn
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_MyTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_MyTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "MyTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState MyTurn
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_MyTurn(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_MyTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "MyTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState RemoteTurn
::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_RemoteTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_get_RemoteTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState>("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "RemoteTurn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.VrBoardGame.MatchmakingManager/Oculus.Platform.Samples.VrBoardGame.MatchRoomState RemoteTurn
void Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_RemoteTurn(::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::_set_RemoteTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "MatchmakingManager/MatchRoomState", "RemoteTurn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::MatchmakingManager::MatchRoomState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.VrBoardGame.PlatformManager
#include "Oculus/Platform/Samples/VrBoardGame/PlatformManager.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Samples.VrBoardGame.PlatformManager s_instance
::Oculus::Platform::Samples::VrBoardGame::PlatformManager* Oculus::Platform::Samples::VrBoardGame::PlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::VrBoardGame::PlatformManager*>("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Samples.VrBoardGame.PlatformManager s_instance
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::_set_s_instance(::Oculus::Platform::Samples::VrBoardGame::PlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "s_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_myID
[[deprecated]] uint64_t& Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_myOculusID
[[deprecated]] ::StringW& Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::dyn_m_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.get_MyID
uint64_t Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.get_MyOculusID
::StringW Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.Awake
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.Start
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.IsEntitledCallback
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.GetLoggedInUserCallback
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.VrBoardGame.PlatformManager.TerminateWithError
void Oculus::Platform::Samples::VrBoardGame::PlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::VrBoardGame::PlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.VrBoardGame", "PlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.SimplePlatformSample.DataEntry
#include "Oculus/Platform/Samples/SimplePlatformSample/DataEntry.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dataOutput
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::dyn_dataOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataOutput"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Start
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.Update
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.SubmitCommand
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand(::StringW command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::SubmitCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLeaderboardEntries
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLeaderboardEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLeaderboardEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.writeLeaderboardEntry
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry(::StringW leaderboardName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::writeLeaderboardEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "writeLeaderboardEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardName, value);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addFieldsAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement(::StringW achievementName, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addFieldsAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addFieldsAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(fields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, fields);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.addCountAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement(::StringW achievementName, ::StringW count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::addCountAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addCountAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName, count);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.unlockAchievement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::unlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementProgress
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getAchievementDefinition
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition(::StringW achievementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getAchievementDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getAchievementDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, achievementName);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.checkEntitlement
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::checkEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserNonce
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.createAndJoinPrivateRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoom(::StringW joinPolicy, ::StringW maxUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createAndJoinPrivateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joinPolicy, maxUsers);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getCurrentRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.joinRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaveRoom
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.kickUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::kickUser(::StringW roomID, ::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::kickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "kickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getLoggedInFriends
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getLoggedInFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getLoggedInFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getInvitableUsers
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.inviteUser
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUser(::StringW roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.setRoomDescription
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::setRoomDescription(::StringW roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::setRoomDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setRoomDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.updateRoomDataStore
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::updateRoomDataStore(::StringW roomID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::updateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "updateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID, key, value);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.printOutputLine
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine(::StringW newLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::printOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "printOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLine);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.outputRoomDetails
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputRoomDetails(::Oculus::Platform::Models::Room* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputRoomDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "outputRoomDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, room);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.outputUserArray
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray(::Oculus::Platform::Models::UserList* users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::outputUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "outputUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, users);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.userProofCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserProof*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::userProofCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "userProofCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getEntitlementCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getEntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getEntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardGetCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardGetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardGetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaderboardWriteCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaderboardWriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaderboardWriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementFieldsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementFieldsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementFieldsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementCountCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementCountCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementCountCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementUnlockCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementUnlockCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementUnlockCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementProgressCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementProgressList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementProgressCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.achievementDefinitionCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AchievementDefinitionList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::achievementDefinitionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "achievementDefinitionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.createAndJoinPrivateRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::createAndJoinPrivateRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createAndJoinPrivateRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getCurrentRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getCurrentRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCurrentRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.joinRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::joinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.leaveRoomCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::leaveRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getUserCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getFriendsCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getFriendsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFriendsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.getInvitableUsersCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsersCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::getInvitableUsersCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getInvitableUsersCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.SimplePlatformSample.DataEntry.inviteUserCallback
void Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUserCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::SimplePlatformSample::DataEntry::inviteUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inviteUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.states
#include "Oculus/Platform/Samples/NetChat/states.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_NOT_INIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_NOT_INIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "NOT_INIT"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states NOT_INIT
void Oculus::Platform::Samples::NetChat::states::_set_NOT_INIT(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_NOT_INIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "NOT_INIT", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IDLE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IDLE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IDLE
void Oculus::Platform::Samples::NetChat::states::_set_IDLE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IDLE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_FIND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_FIND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_FIND"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_FIND
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_FIND(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_FIND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_FIND", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_FINDING_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_FINDING_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "FINDING_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states FINDING_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_FINDING_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_FINDING_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "FINDING_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_CREATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_CREATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_CREATE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_CREATE
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_CREATE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_CREATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_CREATE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_JOIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_JOIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_JOIN"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_JOIN
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_JOIN(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_JOIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_JOIN", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_REQUEST_LEAVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_REQUEST_LEAVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "REQUEST_LEAVE"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states REQUEST_LEAVE
void Oculus::Platform::Samples::NetChat::states::_set_REQUEST_LEAVE(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_REQUEST_LEAVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "REQUEST_LEAVE", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IN_EMPTY_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IN_EMPTY_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IN_EMPTY_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IN_EMPTY_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_IN_EMPTY_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IN_EMPTY_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IN_EMPTY_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
::Oculus::Platform::Samples::NetChat::states Oculus::Platform::Samples::NetChat::states::_get_IN_FULL_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_get_IN_FULL_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::Samples::NetChat::states>("Oculus.Platform.Samples.NetChat", "states", "IN_FULL_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Samples.NetChat.states IN_FULL_ROOM
void Oculus::Platform::Samples::NetChat::states::_set_IN_FULL_ROOM(::Oculus::Platform::Samples::NetChat::states value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::_set_IN_FULL_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "states", "IN_FULL_ROOM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Oculus::Platform::Samples::NetChat::states::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::states::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.Constants
#include "Oculus/Platform/Samples/NetChat/Constants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BUFFER_SIZE
int Oculus::Platform::Samples::NetChat::Constants::_get_BUFFER_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_BUFFER_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform.Samples.NetChat", "Constants", "BUFFER_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BUFFER_SIZE
void Oculus::Platform::Samples::NetChat::Constants::_set_BUFFER_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_BUFFER_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "BUFFER_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public System.String BOUT_POOL
::StringW Oculus::Platform::Samples::NetChat::Constants::_get_BOUT_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_BOUT_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.NetChat", "Constants", "BOUT_POOL"));
}
// Autogenerated static field setter
// Set static field: static public System.String BOUT_POOL
void Oculus::Platform::Samples::NetChat::Constants::_set_BOUT_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_BOUT_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "BOUT_POOL", value));
}
// Autogenerated static field getter
// Get static field: static public System.String FILTER_POOL
::StringW Oculus::Platform::Samples::NetChat::Constants::_get_FILTER_POOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_get_FILTER_POOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform.Samples.NetChat", "Constants", "FILTER_POOL"));
}
// Autogenerated static field setter
// Set static field: static public System.String FILTER_POOL
void Oculus::Platform::Samples::NetChat::Constants::_set_FILTER_POOL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::Constants::_set_FILTER_POOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.NetChat", "Constants", "FILTER_POOL", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.chatPacket
#include "Oculus/Platform/Samples/NetChat/chatPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <packetID>k__BackingField
[[deprecated]] int& Oculus::Platform::Samples::NetChat::chatPacket::dyn_$packetID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::dyn_$packetID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<packetID>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <textString>k__BackingField
[[deprecated]] ::StringW& Oculus::Platform::Samples::NetChat::chatPacket::dyn_$textString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::dyn_$textString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<textString>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.get_packetID
int Oculus::Platform::Samples::NetChat::chatPacket::get_packetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::get_packetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.set_packetID
void Oculus::Platform::Samples::NetChat::chatPacket::set_packetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::set_packetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_packetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.get_textString
::StringW Oculus::Platform::Samples::NetChat::chatPacket::get_textString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::get_textString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.set_textString
void Oculus::Platform::Samples::NetChat::chatPacket::set_textString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::set_textString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.Serialize
::ArrayW<uint8_t> Oculus::Platform::Samples::NetChat::chatPacket::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.chatPacket.Deserialize
::Oculus::Platform::Samples::NetChat::chatPacket* Oculus::Platform::Samples::NetChat::chatPacket::Deserialize(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::chatPacket::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.NetChat", "chatPacket", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Samples::NetChat::chatPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.NetChat.DataEntry
#include "Oculus/Platform/Samples/NetChat/DataEntry.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dataOutput
[[deprecated]] ::UnityEngine::UI::Text*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_dataOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_dataOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataOutput"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Samples.NetChat.states currentState
[[deprecated]] ::Oculus::Platform::Samples::NetChat::states& Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Samples::NetChat::states*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User localUser
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_localUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_localUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.User remoteUser
[[deprecated]] ::Oculus::Platform::Models::User*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_remoteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_remoteUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteUser"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Room currentRoom
[[deprecated]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_currentRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRoom"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPacketID
[[deprecated]] int& Oculus::Platform::Samples::NetChat::DataEntry::dyn_lastPacketID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_lastPacketID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPacketID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ratedMatchStarted
[[deprecated]] bool& Oculus::Platform::Samples::NetChat::DataEntry::dyn_ratedMatchStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::dyn_ratedMatchStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ratedMatchStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.Start
void Oculus::Platform::Samples::NetChat::DataEntry::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.Update
void Oculus::Platform::Samples::NetChat::DataEntry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.SubmitCommand
void Oculus::Platform::Samples::NetChat::DataEntry::SubmitCommand(::StringW command) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::SubmitCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.printOutputLine
void Oculus::Platform::Samples::NetChat::DataEntry::printOutputLine(::StringW newLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::printOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "printOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLine);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.checkEntitlement
void Oculus::Platform::Samples::NetChat::DataEntry::checkEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::checkEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.getEntitlementCallback
void Oculus::Platform::Samples::NetChat::DataEntry::getEntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::getEntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getEntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.init
void Oculus::Platform::Samples::NetChat::DataEntry::init(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestCreateRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.createRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::createRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::createRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestCreateFilterRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestCreateFilterRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestCreateFilterRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestCreateFilterRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindFilteredRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindFilteredRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindFilteredRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindFilteredRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.foundMatch
void Oculus::Platform::Samples::NetChat::DataEntry::foundMatch(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::foundMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "foundMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.joinRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::joinRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::joinRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "joinRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestFindMatch
void Oculus::Platform::Samples::NetChat::DataEntry::requestFindMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestFindMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestFindMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.searchingStarted
void Oculus::Platform::Samples::NetChat::DataEntry::searchingStarted(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::searchingStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "searchingStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.updateRoom
void Oculus::Platform::Samples::NetChat::DataEntry::updateRoom(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::updateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "updateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.sendChat
void Oculus::Platform::Samples::NetChat::DataEntry::sendChat(::StringW chatMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::sendChat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendChat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chatMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chatMessage);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.processNetPackets
void Oculus::Platform::Samples::NetChat::DataEntry::processNetPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::processNetPackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processNetPackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestLeaveRoom
void Oculus::Platform::Samples::NetChat::DataEntry::requestLeaveRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.leaveRoomResponse
void Oculus::Platform::Samples::NetChat::DataEntry::leaveRoomResponse(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::leaveRoomResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "leaveRoomResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestStartRatedMatch
void Oculus::Platform::Samples::NetChat::DataEntry::requestStartRatedMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestStartRatedMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestStartRatedMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.startRatedMatchResponse
void Oculus::Platform::Samples::NetChat::DataEntry::startRatedMatchResponse(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::startRatedMatchResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "startRatedMatchResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.requestReportResults
void Oculus::Platform::Samples::NetChat::DataEntry::requestReportResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::requestReportResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "requestReportResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.NetChat.DataEntry.reportResultsResponse
void Oculus::Platform::Samples::NetChat::DataEntry::reportResultsResponse(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::NetChat::DataEntry::reportResultsResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reportResultsResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck
#include "Oculus/Platform/Samples/EntitlementCheck/EntitlementCheck.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action UserFailedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserFailedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserFailedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserFailedEntitlementCheck", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action UserPassedEntitlementCheck
::System::Action* Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_get_UserPassedEntitlementCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck"));
}
// Autogenerated static field setter
// Set static field: static private System.Action UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::_set_UserPassedEntitlementCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "UserPassedEntitlementCheck", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean exitAppOnFailure
[[deprecated]] bool& Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::dyn_exitAppOnFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitAppOnFailure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserFailedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserFailedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserFailedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.add_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::add_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "add_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.remove_UserPassedEntitlementCheck
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::remove_UserPassedEntitlementCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform.Samples.EntitlementCheck", "EntitlementCheck", "remove_UserPassedEntitlementCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.Start
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.EntitlementCheckCallback
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::EntitlementCheckCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCheckCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Samples.EntitlementCheck.EntitlementCheck.HandleEntitlementCheckResult
void Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult(bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Samples::EntitlementCheck::EntitlementCheck::HandleEntitlementCheckResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntitlementCheckResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MouseLook/RotationAxes axes
[[deprecated]] ::GlobalNamespace::MouseLook::RotationAxes& GlobalNamespace::MouseLook::dyn_axes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_axes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook::RotationAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityX
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_sensitivityX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sensitivityY
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_sensitivityY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_sensitivityY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sensitivityY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumX
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumX
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumY
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_minimumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_minimumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maximumY
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_maximumY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_maximumY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maximumY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationY
[[deprecated]] float& GlobalNamespace::MouseLook::dyn_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn_rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Update
void GlobalNamespace::MouseLook::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.Start
void GlobalNamespace::MouseLook::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook/RotationAxes
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseXAndY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseXAndY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseXAndY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseXAndY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseXAndY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseXAndY", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseX
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseX"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseX
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseX(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseX", value));
}
// Autogenerated static field getter
// Get static field: static public MouseLook/RotationAxes MouseY
::GlobalNamespace::MouseLook::RotationAxes GlobalNamespace::MouseLook::RotationAxes::_get_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_get_MouseY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MouseLook::RotationAxes>("", "MouseLook/RotationAxes", "MouseY"));
}
// Autogenerated static field setter
// Set static field: static public MouseLook/RotationAxes MouseY
void GlobalNamespace::MouseLook::RotationAxes::_set_MouseY(::GlobalNamespace::MouseLook::RotationAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::_set_MouseY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MouseLook/RotationAxes", "MouseY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::MouseLook::RotationAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::RotationAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 numFOAChannels
int GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_numFOAChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "numFOAChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numFOAChannels
void GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_numFOAChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "numFOAChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 paramAmbiStat
int GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_get_paramAmbiStat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPAmbisonicsNative", "paramAmbiStat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 paramAmbiStat
void GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::_set_paramAmbiStat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative", "paramAmbiStat", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource source
[[deprecated]] ::UnityEngine::AudioSource*& GlobalNamespace::ONSPAmbisonicsNative::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus currentStatus
[[deprecated]] ::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus& GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAmbisonicsNative.OnEnable
void GlobalNamespace::ONSPAmbisonicsNative::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative.Update
void GlobalNamespace::ONSPAmbisonicsNative::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAmbisonicsNative..cctor
void GlobalNamespace::ONSPAmbisonicsNative::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAmbisonicsNative", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus
#include "GlobalNamespace/ONSPAmbisonicsNative.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Uninitialized
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_NotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus NotEnabled
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_NotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "NotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus Success
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_StreamError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus StreamError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_StreamError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "StreamError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_ProcessError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus ProcessError
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_ProcessError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "ProcessError", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_get_MaxStatValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus>("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus MaxStatValue
void GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue(::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::_set_MaxStatValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAmbisonicsNative/ovrAmbisonicsNativeStatus", "MaxStatValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAmbisonicsNative::ovrAmbisonicsNativeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPAudioSource::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPAudioSource", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPAudioSource::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "strONSPS", value));
}
// Autogenerated static field getter
// Get static field: static private ONSPAudioSource RoomReflectionGizmoAS
::GlobalNamespace::ONSPAudioSource* GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_get_RoomReflectionGizmoAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource*>("", "ONSPAudioSource", "RoomReflectionGizmoAS"));
}
// Autogenerated static field setter
// Set static field: static private ONSPAudioSource RoomReflectionGizmoAS
void GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS(::GlobalNamespace::ONSPAudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::_set_RoomReflectionGizmoAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource", "RoomReflectionGizmoAS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSpatialization
[[deprecated]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single gain
[[deprecated]] float& GlobalNamespace::ONSPAudioSource::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useInvSqr
[[deprecated]] bool& GlobalNamespace::ONSPAudioSource::dyn_useInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_useInvSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useInvSqr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single near
[[deprecated]] float& GlobalNamespace::ONSPAudioSource::dyn_near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_near");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "near"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single far
[[deprecated]] float& GlobalNamespace::ONSPAudioSource::dyn_far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_far");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "far"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volumetricRadius
[[deprecated]] float& GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_volumetricRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetricRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reverbSend
[[deprecated]] float& GlobalNamespace::ONSPAudioSource::dyn_reverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_reverbSend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbSend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableRfl
[[deprecated]] bool& GlobalNamespace::ONSPAudioSource::dyn_enableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::dyn_enableRfl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRfl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPAudioSource.get_EnableSpatialization
bool GlobalNamespace::ONSPAudioSource::get_EnableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableSpatialization
void GlobalNamespace::ONSPAudioSource::set_EnableSpatialization(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Gain
float GlobalNamespace::ONSPAudioSource::get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Gain
void GlobalNamespace::ONSPAudioSource::set_Gain(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Gain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Gain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_UseInvSqr
bool GlobalNamespace::ONSPAudioSource::get_UseInvSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_UseInvSqr
void GlobalNamespace::ONSPAudioSource::set_UseInvSqr(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_UseInvSqr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInvSqr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Near
float GlobalNamespace::ONSPAudioSource::get_Near() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Near
void GlobalNamespace::ONSPAudioSource::set_Near(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Near");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Near", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_Far
float GlobalNamespace::ONSPAudioSource::get_Far() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_Far
void GlobalNamespace::ONSPAudioSource::set_Far(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_Far");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Far", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_VolumetricRadius
float GlobalNamespace::ONSPAudioSource::get_VolumetricRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_VolumetricRadius
void GlobalNamespace::ONSPAudioSource::set_VolumetricRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_VolumetricRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VolumetricRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_ReverbSend
float GlobalNamespace::ONSPAudioSource::get_ReverbSend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_ReverbSend
void GlobalNamespace::ONSPAudioSource::set_ReverbSend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_ReverbSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.get_EnableRfl
bool GlobalNamespace::ONSPAudioSource::get_EnableRfl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::get_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.set_EnableRfl
void GlobalNamespace::ONSPAudioSource::set_EnableRfl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::set_EnableRfl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableRfl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPAudioSource.ONSP_GetGlobalRoomReflectionValues
void GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues(ByRef<bool> reflOn, ByRef<bool> reverbOn, ByRef<float> width, ByRef<float> height, ByRef<float> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::ONSP_GetGlobalRoomReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", "ONSP_GetGlobalRoomReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflOn), ::il2cpp_utils::ExtractType(reverbOn), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(reflOn), byref(reverbOn), byref(width), byref(height), byref(length));
}
// Autogenerated method: ONSPAudioSource.Awake
void GlobalNamespace::ONSPAudioSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Start
void GlobalNamespace::ONSPAudioSource::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.Update
void GlobalNamespace::ONSPAudioSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.SetParameters
void GlobalNamespace::ONSPAudioSource::SetParameters(ByRef<::UnityEngine::AudioSource*> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::SetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source));
}
// Autogenerated method: ONSPAudioSource.OnDrawGizmos
void GlobalNamespace::ONSPAudioSource::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource.OnDestroy
void GlobalNamespace::ONSPAudioSource::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPAudioSource..cctor
void GlobalNamespace::ONSPAudioSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPAudioSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPAudioSource/Parameters
#include "GlobalNamespace/ONSPAudioSource_Parameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_GAIN
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_GAIN
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_USEINVSQR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_USEINVSQR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_USEINVSQR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_USEINVSQR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_USEINVSQR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_USEINVSQR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NEAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NEAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NEAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NEAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_FAR
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_FAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_FAR"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_FAR
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_FAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_FAR", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_RADIUS
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_RADIUS
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_DISABLE_RFL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_DISABLE_RFL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_DISABLE_RFL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_DISABLE_RFL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_AMBISTAT
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_AMBISTAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_AMBISTAT"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_AMBISTAT
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_AMBISTAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_AMBISTAT", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_GLOBAL_RFL_ENABLED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_GLOBAL_RFL_ENABLED
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_GLOBAL_RFL_ENABLED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_GLOBAL_RFL_ENABLED", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_READONLY_NUM_VOICES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_READONLY_NUM_VOICES
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_READONLY_NUM_VOICES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_READONLY_NUM_VOICES", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_SENDLEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_SENDLEVEL"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_SENDLEVEL
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_SENDLEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_SENDLEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPAudioSource/Parameters P_NUM
::GlobalNamespace::ONSPAudioSource::Parameters GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_get_P_NUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPAudioSource::Parameters>("", "ONSPAudioSource/Parameters", "P_NUM"));
}
// Autogenerated static field setter
// Set static field: static public ONSPAudioSource/Parameters P_NUM
void GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM(::GlobalNamespace::ONSPAudioSource::Parameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::_set_P_NUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPAudioSource/Parameters", "P_NUM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPAudioSource::Parameters::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPProfiler
#include "GlobalNamespace/ONSPProfiler.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_PORT
int GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_DEFAULT_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPProfiler", "DEFAULT_PORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_PORT
void GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_DEFAULT_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "DEFAULT_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPProfiler::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPProfiler", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPProfiler::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPProfiler", "strONSPS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean profilerEnabled
[[deprecated]] bool& GlobalNamespace::ONSPProfiler::dyn_profilerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_profilerEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "profilerEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated]] int& GlobalNamespace::ONSPProfiler::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPProfiler.Start
void GlobalNamespace::ONSPProfiler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.Update
void GlobalNamespace::ONSPProfiler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerEnabled
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: ONSPProfiler.ONSP_SetProfilerPort
int GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPProfiler::ONSP_SetProfilerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPProfiler", "ONSP_SetProfilerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationGeometry
#include "GlobalNamespace/ONSPPropagationGeometry.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String GeometryAssetDirectory
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GeometryAssetDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GeometryAssetDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.String GeometryAssetDirectory
void GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GeometryAssetDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GeometryAssetDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OSPSuccess
int GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_OSPSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "OSPSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OSPSuccess
void GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_OSPSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "OSPSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GEOMETRY_FILE_EXTENSION
::StringW GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_GEOMETRY_FILE_EXTENSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String GEOMETRY_FILE_EXTENSION
void GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_GEOMETRY_FILE_EXTENSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "GEOMETRY_FILE_EXTENSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 terrainDecimation
int GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_get_terrainDecimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ONSPPropagationGeometry", "terrainDecimation"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 terrainDecimation
void GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::_set_terrainDecimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationGeometry", "terrainDecimation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String filePathRelative
[[deprecated]] ::StringW& GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_filePathRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePathRelative"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fileEnabled
[[deprecated]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_fileEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeChildMeshes
[[deprecated]] bool& GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_includeChildMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeChildMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr geometryHandle
[[deprecated]] ::System::IntPtr& GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::dyn_geometryHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "geometryHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationGeometry.get_GeometryAssetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_GeometryAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "get_GeometryAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.get_filePath
::StringW GlobalNamespace::ONSPPropagationGeometry::get_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::get_filePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.GetPath
::StringW GlobalNamespace::ONSPPropagationGeometry::GetPath(::UnityEngine::Transform* current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current);
}
// Autogenerated method: ONSPPropagationGeometry.Awake
void GlobalNamespace::ONSPPropagationGeometry::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.CreatePropagationGeometry
void GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::CreatePropagationGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePropagationGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.Update
void GlobalNamespace::ONSPPropagationGeometry::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.OnDestroy
void GlobalNamespace::ONSPPropagationGeometry::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.traverseMeshHierarchy
void GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy(::UnityEngine::GameObject* obj, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> currentMaterials, bool includeChildren, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::MeshMaterial>* meshMaterials, ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationGeometry::TerrainMaterial>* terrainMaterials, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::traverseMeshHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "traverseMeshHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(currentMaterials), ::il2cpp_utils::ExtractType(includeChildren), ::il2cpp_utils::ExtractType(meshMaterials), ::il2cpp_utils::ExtractType(terrainMaterials), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, currentMaterials, includeChildren, meshMaterials, terrainMaterials, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal);
}
// Autogenerated method: ONSPPropagationGeometry.uploadMesh
int GlobalNamespace::ONSPPropagationGeometry::uploadMesh(::System::IntPtr geometryHandle, ::UnityEngine::GameObject* meshObject, ::UnityEngine::Matrix4x4 worldToLocal, bool ignoreStatic, ByRef<int> ignoredMeshCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "uploadMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometryHandle), ::il2cpp_utils::ExtractType(meshObject), ::il2cpp_utils::ExtractType(worldToLocal), ::il2cpp_utils::ExtractType(ignoreStatic), ::il2cpp_utils::ExtractType(ignoredMeshCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometryHandle, meshObject, worldToLocal, ignoreStatic, byref(ignoredMeshCount));
}
// Autogenerated method: ONSPPropagationGeometry.uploadMeshFilter
void GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* tempVertices, ::System::Collections::Generic::List_1<int>* tempIndices, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::ArrayW<float> vertices, ::ArrayW<int> indices, ByRef<int> vertexOffset, ByRef<int> indexOffset, ByRef<int> groupOffset, ::UnityEngine::Mesh* mesh, ::ArrayW<::GlobalNamespace::ONSPPropagationMaterial*> materials, ::UnityEngine::Matrix4x4 matrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::uploadMeshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "uploadMeshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempVertices), ::il2cpp_utils::ExtractType(tempIndices), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(vertexOffset), ::il2cpp_utils::ExtractType(indexOffset), ::il2cpp_utils::ExtractType(groupOffset), ::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(matrix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tempVertices, tempIndices, groups, vertices, indices, byref(vertexOffset), byref(indexOffset), byref(groupOffset), mesh, materials, matrix);
}
// Autogenerated method: ONSPPropagationGeometry.updateCountsForMesh
void GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh(ByRef<int> totalVertexCount, ByRef<uint> totalIndexCount, ByRef<int> totalFaceCount, ByRef<int> totalMaterialCount, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::updateCountsForMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", "updateCountsForMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalVertexCount), ::il2cpp_utils::ExtractType(totalIndexCount), ::il2cpp_utils::ExtractType(totalFaceCount), ::il2cpp_utils::ExtractType(totalMaterialCount), ::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(totalVertexCount), byref(totalIndexCount), byref(totalFaceCount), byref(totalMaterialCount), mesh);
}
// Autogenerated method: ONSPPropagationGeometry.UploadGeometry
void GlobalNamespace::ONSPPropagationGeometry::UploadGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::UploadGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.ReadFile
bool GlobalNamespace::ONSPPropagationGeometry::ReadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::ReadFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry.WriteToObj
bool GlobalNamespace::ONSPPropagationGeometry::WriteToObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::WriteToObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationGeometry..cctor
void GlobalNamespace::ONSPPropagationGeometry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationGeometry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationGeometry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPPropagation/PropagationInterface CachedInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::_get_CachedInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_get_CachedInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::PropagationInterface*>("", "ONSPPropagation", "CachedInterface"));
}
// Autogenerated static field setter
// Set static field: static private ONSPPropagation/PropagationInterface CachedInterface
void GlobalNamespace::ONSPPropagation::_set_CachedInterface(::GlobalNamespace::ONSPPropagation::PropagationInterface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::_set_CachedInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation", "CachedInterface", value));
}
// Autogenerated method: ONSPPropagation.get_Interface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::get_Interface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "get_Interface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagation.FindInterface
::GlobalNamespace::ONSPPropagation::PropagationInterface* GlobalNamespace::ONSPPropagation::FindInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FindInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation", "FindInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagation::PropagationInterface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt8
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt8
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Int64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Int64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType UInt64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType UInt64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float16
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float16"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float16
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float16", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float32
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float32"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float32
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float32", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagation/ovrAudioScalarType Float64
::GlobalNamespace::ONSPPropagation::ovrAudioScalarType GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_get_Float64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagation::ovrAudioScalarType>("", "ONSPPropagation/ovrAudioScalarType", "Float64"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagation/ovrAudioScalarType Float64
void GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::_set_Float64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ovrAudioScalarType", "Float64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated]] uint& GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ovrAudioScalarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/ClientType
#include "GlobalNamespace/ONSPPropagation_ClientType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_NATIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_NATIVE
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_NATIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_NATIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2016");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2016
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2016");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2016", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2017_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2017_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2017_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2017_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2018_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2018_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2018_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2018_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_FMOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_FMOD
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_FMOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_FMOD", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UNITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UNITY
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UNITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UNITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_UE4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_UE4
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_UE4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_UE4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_VST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_VST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_VST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_VST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_AAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_AAX
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_AAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_AAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_TEST
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_TEST", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_OTHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_OTHER
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_OTHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_OTHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_UNKNOWN
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_1", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2019_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2019_2
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2019_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2019_2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
uint GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_get_OVRA_CLIENT_TYPE_WWISE_2021_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 OVRA_CLIENT_TYPE_WWISE_2021_1
void GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::ClientType::_set_OVRA_CLIENT_TYPE_WWISE_2021_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/ClientType", "OVRA_CLIENT_TYPE_WWISE_2021_1", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/PropagationInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/PropagationInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::PropagationInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::PropagationInterface*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/UnityNativeInterface
#include "GlobalNamespace/ONSPPropagation_UnityNativeInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/UnityNativeInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/UnityNativeInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/UnityNativeInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/UnityNativeInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::UnityNativeInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::UnityNativeInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/WwisePluginInterface
#include "GlobalNamespace/ONSPPropagation_WwisePluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/WwisePluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/WwisePluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/WwisePluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/WwisePluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::WwisePluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::WwisePluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagation/FMODPluginInterface
#include "GlobalNamespace/ONSPPropagation_FMODPluginInterface.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
// Including type: ONSPPropagation/ovrAudioScalarType
#include "GlobalNamespace/ONSPPropagation_ovrAudioScalarType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strOSPS
::StringW GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_get_strOSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPPropagation/FMODPluginInterface", "strOSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOSPS
void GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::_set_strOSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagation/FMODPluginInterface", "strOSPS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr context_
[[deprecated]] ::System::IntPtr& GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::dyn_context_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context_"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.get_context
::System::IntPtr GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_GetPluginContext
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(clientType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), clientType);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(quality)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationQuality
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality(float quality) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, quality);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cpuMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.SetPropagationThreadAffinity
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity(uint64_t cpuMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cpuMask);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry(ByRef<::System::IntPtr> geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(geometry));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioGeometry
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry(::System::IntPtr geometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(verticesBytesOffset), ::il2cpp_utils::ExtractType(vertexCount), ::il2cpp_utils::ExtractType(vertexStride), ::il2cpp_utils::ExtractType(vertexType), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(indicesByteOffset), ::il2cpp_utils::ExtractType(indexCount), ::il2cpp_utils::ExtractType(indexType), ::il2cpp_utils::ExtractType(groups), ::il2cpp_utils::ExtractType(groupCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryUploadMeshArrays
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, vertices, vertexCount, indices, indexCount, groups, groupCount);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(matrix4x4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometrySetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, matrix4x4);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryGetTransform
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, byref(matrix4x4));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryReadMeshFile
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioGeometryWriteMeshFileObj
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, geometry, filePath);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.CreateAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial(ByRef<::System::IntPtr> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.DestroyAudioMaterial
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial(::System::IntPtr material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialSetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, value);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialGetFrequency
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property, frequency, byref(value));
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.ovrAudio_AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagation/FMODPluginInterface", "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, property);
}
// Autogenerated method: ONSPPropagation/FMODPluginInterface.AudioMaterialReset
int GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, material, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr materialHandle
[[deprecated]] ::System::IntPtr& GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_materialHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum absorption
[[deprecated]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_absorption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_absorption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "absorption"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum transmission
[[deprecated]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_transmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_transmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmission"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPPropagationMaterial/Spectrum scattering
[[deprecated]] ::GlobalNamespace::ONSPPropagationMaterial::Spectrum*& GlobalNamespace::ONSPPropagationMaterial::dyn_scattering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_scattering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scattering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Spectrum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPPropagationMaterial/Preset preset_
[[deprecated]] ::GlobalNamespace::ONSPPropagationMaterial::Preset& GlobalNamespace::ONSPPropagationMaterial::dyn_preset_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::dyn_preset_");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preset_"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPPropagationMaterial::Preset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial.get_preset
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::get_preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::get_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPPropagationMaterial::Preset, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.set_preset
void GlobalNamespace::ONSPPropagationMaterial::set_preset(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::set_preset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ONSPPropagationMaterial.Start
void GlobalNamespace::ONSPPropagationMaterial::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.StartInternal
void GlobalNamespace::ONSPPropagationMaterial::StartInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::StartInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.OnDestroy
void GlobalNamespace::ONSPPropagationMaterial::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.DestroyInternal
void GlobalNamespace::ONSPPropagationMaterial::DestroyInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::DestroyInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.UploadMaterial
void GlobalNamespace::ONSPPropagationMaterial::UploadMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::UploadMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial.SetPreset
void GlobalNamespace::ONSPPropagationMaterial::SetPreset(::GlobalNamespace::ONSPPropagationMaterial::Preset preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SetPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: ONSPPropagationMaterial.AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::AcousticTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::AcousticTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "AcousticTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Brick
void GlobalNamespace::ONSPPropagationMaterial::Brick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Brick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Brick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::BrickPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::BrickPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "BrickPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Carpet
void GlobalNamespace::ONSPPropagationMaterial::Carpet(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Carpet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Carpet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CarpetHeavyPadded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CarpetHeavyPadded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::CeramicTile(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::CeramicTile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "CeramicTile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Concrete
void GlobalNamespace::ONSPPropagationMaterial::Concrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Concrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Concrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::ConcreteRough(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteRough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteRough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::ConcreteBlockPainted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "ConcreteBlockPainted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Curtain
void GlobalNamespace::ONSPPropagationMaterial::Curtain(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Curtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Curtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Foliage
void GlobalNamespace::ONSPPropagationMaterial::Foliage(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Foliage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Foliage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Glass
void GlobalNamespace::ONSPPropagationMaterial::Glass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Glass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Glass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::GlassHeavy(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GlassHeavy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GlassHeavy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Grass
void GlobalNamespace::ONSPPropagationMaterial::Grass(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Grass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Grass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Gravel
void GlobalNamespace::ONSPPropagationMaterial::Gravel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Gravel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Gravel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::GypsumBoard(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::GypsumBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "GypsumBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnBrick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnBrick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::PlasterOnConcreteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "PlasterOnConcreteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Soil
void GlobalNamespace::ONSPPropagationMaterial::Soil(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Soil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Soil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.SoundProof
void GlobalNamespace::ONSPPropagationMaterial::SoundProof(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::SoundProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "SoundProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Snow
void GlobalNamespace::ONSPPropagationMaterial::Snow(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Snow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Snow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Steel
void GlobalNamespace::ONSPPropagationMaterial::Steel(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Steel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Steel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.Water
void GlobalNamespace::ONSPPropagationMaterial::Water(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Water");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "Water", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThin
void GlobalNamespace::ONSPPropagationMaterial::WoodThin(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodThick
void GlobalNamespace::ONSPPropagationMaterial::WoodThick(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodThick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodThick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::WoodFloor(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodFloor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodFloor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated method: ONSPPropagationMaterial.WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete(ByRef<::GlobalNamespace::ONSPPropagationMaterial*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::WoodOnConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial", "WoodOnConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(material));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Preset
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Custom
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Custom
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset AcousticTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_AcousticTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "AcousticTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset AcousticTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_AcousticTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "AcousticTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Brick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Brick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Brick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Brick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Brick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Brick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset BrickPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_BrickPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "BrickPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset BrickPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_BrickPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "BrickPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Carpet
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Carpet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Carpet"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Carpet
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Carpet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Carpet", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CarpetHeavyPadded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CarpetHeavyPadded
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CarpetHeavyPadded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CarpetHeavyPadded", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset CeramicTile
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_CeramicTile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "CeramicTile"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset CeramicTile
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_CeramicTile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "CeramicTile", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Concrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Concrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Concrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Concrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Concrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Concrete", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteRough
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteRough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteRough"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteRough
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteRough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteRough", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_ConcreteBlockPainted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset ConcreteBlockPainted
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_ConcreteBlockPainted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "ConcreteBlockPainted", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Curtain
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Curtain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Curtain"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Curtain
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Curtain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Curtain", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Foliage
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Foliage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Foliage"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Foliage
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Foliage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Foliage", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Glass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Glass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Glass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Glass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Glass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Glass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GlassHeavy
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GlassHeavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GlassHeavy"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GlassHeavy
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GlassHeavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GlassHeavy", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Grass
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Grass
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Grass", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Gravel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Gravel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Gravel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Gravel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Gravel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Gravel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset GypsumBoard
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_GypsumBoard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "GypsumBoard"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset GypsumBoard
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_GypsumBoard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "GypsumBoard", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnBrick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnBrick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnBrick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnBrick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_PlasterOnConcreteBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset PlasterOnConcreteBlock
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_PlasterOnConcreteBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "PlasterOnConcreteBlock", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Soil
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Soil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Soil"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Soil
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Soil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Soil", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset SoundProof
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_SoundProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "SoundProof"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset SoundProof
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_SoundProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "SoundProof", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Snow
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Snow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Snow"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Snow
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Snow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Snow", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Steel
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Steel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Steel"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Steel
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Steel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Steel", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset Water
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_Water");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "Water"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset Water
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_Water");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "Water", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThin
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThin"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThin
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThin", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodThick
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodThick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodThick"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodThick
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodThick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodThick", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodFloor
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodFloor"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodFloor
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodFloor", value));
}
// Autogenerated static field getter
// Get static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
::GlobalNamespace::ONSPPropagationMaterial::Preset GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_get_WoodOnConcrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Preset>("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete"));
}
// Autogenerated static field setter
// Set static field: static public ONSPPropagationMaterial/Preset WoodOnConcrete
void GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete(::GlobalNamespace::ONSPPropagationMaterial::Preset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::_set_WoodOnConcrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Preset", "WoodOnConcrete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Preset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single data
[[deprecated]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 selection
[[deprecated]] int& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ONSPPropagationMaterial/Point> points
[[deprecated]] ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>*& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum.get_Item
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9(::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1", value)));
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c..cctor
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial/Spectrum/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_0
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_0(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_1
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_1(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationSettings
#include "GlobalNamespace/ONSPPropagationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single quality
[[deprecated]] float& GlobalNamespace::ONSPPropagationSettings::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationSettings.Update
void GlobalNamespace::ONSPPropagationSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPSettings
#include "GlobalNamespace/ONSPSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPSettings instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPSettings*>("", "ONSPSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private ONSPSettings instance
void GlobalNamespace::ONSPSettings::_set_instance(::GlobalNamespace::ONSPSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 voiceLimit
[[deprecated]] int& GlobalNamespace::ONSPSettings::dyn_voiceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::dyn_voiceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPSettings.get_Instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPVersion
#include "GlobalNamespace/ONSPVersion.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPVersion::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPVersion", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPVersion::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPVersion", "strONSPS", value));
}
// Autogenerated method: ONSPVersion.ONSP_GetVersion
void GlobalNamespace::ONSPVersion::ONSP_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::ONSP_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPVersion", "ONSP_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: ONSPVersion.Awake
void GlobalNamespace::ONSPVersion::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Start
void GlobalNamespace::ONSPVersion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Update
void GlobalNamespace::ONSPVersion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSpatializerUnity
#include "GlobalNamespace/OculusSpatializerUnity.hpp"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HIT_COUNT
int GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusSpatializerUnity", "HIT_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIT_COUNT
void GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "HIT_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.LayerMask gLayerMask
::UnityEngine::LayerMask GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LayerMask>("", "OculusSpatializerUnity", "gLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.LayerMask gLayerMask
void GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "gLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String strOSP
::StringW GlobalNamespace::OculusSpatializerUnity::_get_strOSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_strOSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusSpatializerUnity", "strOSP"));
}
// Autogenerated static field setter
// Set static field: static private System.String strOSP
void GlobalNamespace::OculusSpatializerUnity::_set_strOSP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_strOSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "strOSP", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated]] ::UnityEngine::LayerMask& GlobalNamespace::OculusSpatializerUnity::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeRoom
[[deprecated]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean roomVisualizationInitialized
[[deprecated]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomVisualizationInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raysPerSecond
[[deprecated]] int& GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raysPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomInterpSpeed
[[deprecated]] float& GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomInterpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxWallDistance
[[deprecated]] float& GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxWallDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rayCacheSize
[[deprecated]] int& GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCacheSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicReflectionsEnabled
[[deprecated]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicReflectionsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleSize
[[deprecated]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleOffset
[[deprecated]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject room
[[deprecated]] ::UnityEngine::GameObject*& GlobalNamespace::OculusSpatializerUnity::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer[] wallRenderer
[[deprecated]] ::ArrayW<::UnityEngine::Renderer*>& GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Renderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] dims
[[deprecated]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_dims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dims"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] coefs
[[deprecated]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_coefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_coefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coefs"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] points
[[deprecated]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] normals
[[deprecated]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem sys
[[deprecated]] ::UnityEngine::ParticleSystem*& GlobalNamespace::OculusSpatializerUnity::dyn_sys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_sys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sys"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] particles
[[deprecated]] ::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::OculusSpatializerUnity::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSpatializerUnity.swapHandedness
::UnityEngine::Vector3 GlobalNamespace::OculusSpatializerUnity::swapHandedness(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::swapHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "swapHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: OculusSpatializerUnity.AudioRaycast
void GlobalNamespace::OculusSpatializerUnity::AudioRaycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "AudioRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity.Start
void GlobalNamespace::OculusSpatializerUnity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OnDestroy
void GlobalNamespace::OculusSpatializerUnity::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.Update
void GlobalNamespace::OculusSpatializerUnity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.inititalizeRoomVisualization
void GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inititalizeRoomVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback* callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::System::IntPtr callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysPerSecond
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RaysPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RaysPerSecond);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomInterpSpeed
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomInterpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InterpSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InterpSpeed);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomMaxWallDistance
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomMaxWallDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MaxWallDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, MaxWallDistance);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysRayCacheSize
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysRayCacheSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RayCacheSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RayCacheSize);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_UpdateRoomModel
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel(float wetLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_UpdateRoomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wetLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wetLevel);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRoomDimensions
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions(::ArrayW<float> roomDimensions, ::ArrayW<float> reflectionsCoefs, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRoomDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomDimensions), ::il2cpp_utils::ExtractType(reflectionsCoefs), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomDimensions, reflectionsCoefs, byref(position));
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRaycastHits
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits(::ArrayW<::UnityEngine::Vector3> points, ::ArrayW<::UnityEngine::Vector3> normals, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, normals, length);
}
// Autogenerated method: OculusSpatializerUnity..cctor
void GlobalNamespace::OculusSpatializerUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.Invoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data, callback, object);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.EndInvoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(normal), result);
}
