// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/OVR.OpenVR._CloseMessageOverlay
#include "OVR/OpenVR/IVROverlay__CloseMessageOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CloseMessageOverlay.Invoke
void OVR::OpenVR::IVROverlay::_CloseMessageOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CloseMessageOverlay.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVROverlay::_CloseMessageOverlay::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVROverlay/OVR.OpenVR._CloseMessageOverlay.EndInvoke
void OVR::OpenVR::IVROverlay::_CloseMessageOverlay::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVROverlay::_CloseMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVROverlay::_CloseMessageOverlay*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadRenderModel_Async
#include "OVR/OpenVR/IVRRenderModels__LoadRenderModel_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadRenderModel_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::Invoke(::StringW pchRenderModelName, ByRef<::System::IntPtr> ppRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadRenderModel_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke(::StringW pchRenderModelName, ByRef<::System::IntPtr> ppRenderModel, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadRenderModel_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke(ByRef<::System::IntPtr> ppRenderModel, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadRenderModel_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppRenderModel), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeRenderModel
#include "OVR/OpenVR/IVRRenderModels__FreeRenderModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeRenderModel.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeRenderModel::Invoke(::System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeRenderModel.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeRenderModel::BeginInvoke(::System::IntPtr pRenderModel, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pRenderModel, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeRenderModel.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeRenderModel::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeRenderModel*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTexture_Async
#include "OVR/OpenVR/IVRRenderModels__LoadTexture_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTexture_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::Invoke(int textureId, ByRef<::System::IntPtr> ppTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, byref(ppTexture));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTexture_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::BeginInvoke(int textureId, ByRef<::System::IntPtr> ppTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, byref(ppTexture), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTexture_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::EndInvoke(ByRef<::System::IntPtr> ppTexture, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTexture_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppTexture), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTexture
#include "OVR/OpenVR/IVRRenderModels__FreeTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTexture.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeTexture::Invoke(::System::IntPtr pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTexture);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTexture.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeTexture::BeginInvoke(::System::IntPtr pTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pTexture, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTexture.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeTexture::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTexture*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTextureD3D11_Async
#include "OVR/OpenVR/IVRRenderModels__LoadTextureD3D11_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTextureD3D11_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke(int textureId, ::System::IntPtr pD3D11Device, ByRef<::System::IntPtr> ppD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTextureD3D11_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke(int textureId, ::System::IntPtr pD3D11Device, ByRef<::System::IntPtr> ppD3D11Texture2D, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadTextureD3D11_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke(ByRef<::System::IntPtr> ppD3D11Texture2D, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadTextureD3D11_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, byref(ppD3D11Texture2D), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadIntoTextureD3D11_Async
#include "OVR/OpenVR/IVRRenderModels__LoadIntoTextureD3D11_Async.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadIntoTextureD3D11_Async.Invoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke(int textureId, ::System::IntPtr pDstTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pDstTexture);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadIntoTextureD3D11_Async.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke(int textureId, ::System::IntPtr pDstTexture, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, textureId, pDstTexture, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._LoadIntoTextureD3D11_Async.EndInvoke
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_LoadIntoTextureD3D11_Async*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTextureD3D11
#include "OVR/OpenVR/IVRRenderModels__FreeTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTextureD3D11.Invoke
void OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::Invoke(::System::IntPtr pD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11Texture2D);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTextureD3D11.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke(::System::IntPtr pD3D11Texture2D, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pD3D11Texture2D, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._FreeTextureD3D11.EndInvoke
void OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_FreeTextureD3D11*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelName
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelName::Invoke(uint unRenderModelIndex, ::System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelName::BeginInvoke(uint unRenderModelIndex, ::System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelCount
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelCount.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelCount.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelCount.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelCount*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentCount
#include "OVR/OpenVR/IVRRenderModels__GetComponentCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentCount.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentCount::Invoke(::StringW pchRenderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentCount.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentCount::BeginInvoke(::StringW pchRenderModelName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentCount.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentCount::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentCount*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentName
#include "OVR/OpenVR/IVRRenderModels__GetComponentName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentName::Invoke(::StringW pchRenderModelName, uint unComponentIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentName::BeginInvoke(::StringW pchRenderModelName, uint unComponentIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentButtonMask
#include "OVR/OpenVR/IVRRenderModels__GetComponentButtonMask.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentButtonMask.Invoke
uint64_t OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentButtonMask.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentButtonMask.EndInvoke
uint64_t OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentButtonMask*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentRenderModelName
#include "OVR/OpenVR/IVRRenderModels__GetComponentRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentRenderModelName.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentRenderModelName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentRenderModelName.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentRenderModelName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentStateForDevicePath
#include "OVR/OpenVR/IVRRenderModels__GetComponentStateForDevicePath.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentStateForDevicePath.Invoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, uint64_t devicePath, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, devicePath, byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentStateForDevicePath.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, uint64_t devicePath, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, devicePath, byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentStateForDevicePath.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::EndInvoke(ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentStateForDevicePath*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentState
#include "OVR/OpenVR/IVRRenderModels__GetComponentState.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentState.Invoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentState::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentState.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetComponentState::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetComponentState.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_GetComponentState::EndInvoke(ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetComponentState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetComponentState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._RenderModelHasComponent
#include "OVR/OpenVR/IVRRenderModels__RenderModelHasComponent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._RenderModelHasComponent.Invoke
bool OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._RenderModelHasComponent.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._RenderModelHasComponent.EndInvoke
bool OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_RenderModelHasComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelThumbnailURL
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelThumbnailURL.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelThumbnailURL.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::Invoke(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelThumbnailURL.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::BeginInvoke(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelThumbnailURL.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::EndInvoke(ByRef<::OVR::OpenVR::EVRRenderModelError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelThumbnailURL*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelOriginalPath
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelOriginalPath.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelOriginalPath.Invoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::Invoke(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelOriginalPath.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::BeginInvoke(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelOriginalPath.EndInvoke
uint OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::EndInvoke(ByRef<::OVR::OpenVR::EVRRenderModelError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelOriginalPath*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelErrorNameFromEnum
#include "OVR/OpenVR/IVRRenderModels__GetRenderModelErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelErrorNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::Invoke(::OVR::OpenVR::EVRRenderModelError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::BeginInvoke(::OVR::OpenVR::EVRRenderModelError error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRRenderModels/OVR.OpenVR._GetRenderModelErrorNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRRenderModels::_GetRenderModelErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRNotifications/OVR.OpenVR._CreateNotification
#include "OVR/OpenVR/IVRNotifications__CreateNotification.hpp"
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
// Including type: OVR.OpenVR.NotificationBitmap_t
#include "OVR/OpenVR/NotificationBitmap_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._CreateNotification.Invoke
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::IVRNotifications::_CreateNotification::Invoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, ::OVR::OpenVR::EVRNotificationType type, ::StringW pchText, ::OVR::OpenVR::EVRNotificationStyle style, ByRef<::OVR::OpenVR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_CreateNotification::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_CreateNotification*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId));
}
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._CreateNotification.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRNotifications::_CreateNotification::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, ::OVR::OpenVR::EVRNotificationType type, ::StringW pchText, ::OVR::OpenVR::EVRNotificationStyle style, ByRef<::OVR::OpenVR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_CreateNotification::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_CreateNotification*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._CreateNotification.EndInvoke
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::IVRNotifications::_CreateNotification::EndInvoke(ByRef<::OVR::OpenVR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_CreateNotification::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_CreateNotification*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, byref(pImage), byref(pNotificationId), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRNotifications/OVR.OpenVR._RemoveNotification
#include "OVR/OpenVR/IVRNotifications__RemoveNotification.hpp"
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._RemoveNotification.Invoke
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::IVRNotifications::_RemoveNotification::Invoke(uint notificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_RemoveNotification::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_RemoveNotification*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, notificationId);
}
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._RemoveNotification.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRNotifications::_RemoveNotification::BeginInvoke(uint notificationId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_RemoveNotification::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_RemoveNotification*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, notificationId, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRNotifications/OVR.OpenVR._RemoveNotification.EndInvoke
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::IVRNotifications::_RemoveNotification::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRNotifications::_RemoveNotification::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRNotifications::_RemoveNotification*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetSettingsErrorNameFromEnum
#include "OVR/OpenVR/IVRSettings__GetSettingsErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetSettingsErrorNameFromEnum.Invoke
::System::IntPtr OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::Invoke(::OVR::OpenVR::EVRSettingsError eError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, eError);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetSettingsErrorNameFromEnum.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::BeginInvoke(::OVR::OpenVR::EVRSettingsError eError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eError, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetSettingsErrorNameFromEnum.EndInvoke
::System::IntPtr OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._Sync
#include "OVR/OpenVR/IVRSettings__Sync.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._Sync.Invoke
bool OVR::OpenVR::IVRSettings::_Sync::Invoke(bool bForce, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_Sync::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_Sync*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bForce, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._Sync.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_Sync::BeginInvoke(bool bForce, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_Sync::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_Sync*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bForce, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._Sync.EndInvoke
bool OVR::OpenVR::IVRSettings::_Sync::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_Sync::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_Sync*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetBool
#include "OVR/OpenVR/IVRSettings__SetBool.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetBool.Invoke
void OVR::OpenVR::IVRSettings::_SetBool::Invoke(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetBool::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetBool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetBool.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_SetBool::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetBool::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetBool*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetBool.EndInvoke
void OVR::OpenVR::IVRSettings::_SetBool::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetBool::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetBool*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetInt32
#include "OVR/OpenVR/IVRSettings__SetInt32.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetInt32.Invoke
void OVR::OpenVR::IVRSettings::_SetInt32::Invoke(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetInt32::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetInt32*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetInt32.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_SetInt32::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetInt32::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetInt32*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetInt32.EndInvoke
void OVR::OpenVR::IVRSettings::_SetInt32::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetInt32::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetInt32*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetFloat
#include "OVR/OpenVR/IVRSettings__SetFloat.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetFloat.Invoke
void OVR::OpenVR::IVRSettings::_SetFloat::Invoke(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetFloat::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetFloat*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetFloat.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_SetFloat::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetFloat::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetFloat*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetFloat.EndInvoke
void OVR::OpenVR::IVRSettings::_SetFloat::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetFloat::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetFloat*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetString
#include "OVR/OpenVR/IVRSettings__SetString.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetString.Invoke
void OVR::OpenVR::IVRSettings::_SetString::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetString::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetString*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetString.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_SetString::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetString::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetString*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._SetString.EndInvoke
void OVR::OpenVR::IVRSettings::_SetString::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_SetString::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_SetString*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetBool
#include "OVR/OpenVR/IVRSettings__GetBool.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetBool.Invoke
bool OVR::OpenVR::IVRSettings::_GetBool::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetBool::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetBool*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetBool.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetBool::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetBool::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetBool*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetBool.EndInvoke
bool OVR::OpenVR::IVRSettings::_GetBool::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetBool::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetBool*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetInt32
#include "OVR/OpenVR/IVRSettings__GetInt32.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetInt32.Invoke
int OVR::OpenVR::IVRSettings::_GetInt32::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetInt32::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetInt32*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetInt32.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetInt32::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetInt32::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetInt32*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetInt32.EndInvoke
int OVR::OpenVR::IVRSettings::_GetInt32::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetInt32::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetInt32*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetFloat
#include "OVR/OpenVR/IVRSettings__GetFloat.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetFloat.Invoke
float OVR::OpenVR::IVRSettings::_GetFloat::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetFloat::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetFloat*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetFloat.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetFloat::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetFloat::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetFloat*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetFloat.EndInvoke
float OVR::OpenVR::IVRSettings::_GetFloat::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetFloat::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetFloat*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetString
#include "OVR/OpenVR/IVRSettings__GetString.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetString.Invoke
void OVR::OpenVR::IVRSettings::_GetString::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ::System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetString::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetString*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetString.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetString::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ::System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetString::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetString*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._GetString.EndInvoke
void OVR::OpenVR::IVRSettings::_GetString::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_GetString::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_GetString*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveSection
#include "OVR/OpenVR/IVRSettings__RemoveSection.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveSection.Invoke
void OVR::OpenVR::IVRSettings::_RemoveSection::Invoke(::StringW pchSection, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveSection::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveSection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveSection.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_RemoveSection::BeginInvoke(::StringW pchSection, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveSection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveSection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveSection.EndInvoke
void OVR::OpenVR::IVRSettings::_RemoveSection::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveSection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveSection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveKeyInSection
#include "OVR/OpenVR/IVRSettings__RemoveKeyInSection.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveKeyInSection.Invoke
void OVR::OpenVR::IVRSettings::_RemoveKeyInSection::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveKeyInSection::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveKeyInSection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveKeyInSection.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSettings::_RemoveKeyInSection::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveKeyInSection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveKeyInSection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSettings/OVR.OpenVR._RemoveKeyInSection.EndInvoke
void OVR::OpenVR::IVRSettings::_RemoveKeyInSection::EndInvoke(ByRef<::OVR::OpenVR::EVRSettingsError> peError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSettings::_RemoveKeyInSection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSettings::_RemoveKeyInSection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._RequestScreenshot
#include "OVR/OpenVR/IVRScreenshots__RequestScreenshot.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._RequestScreenshot.Invoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_RequestScreenshot::Invoke(ByRef<uint> pOutScreenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_RequestScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_RequestScreenshot*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._RequestScreenshot.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_RequestScreenshot::BeginInvoke(ByRef<uint> pOutScreenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_RequestScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_RequestScreenshot*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._RequestScreenshot.EndInvoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_RequestScreenshot::EndInvoke(ByRef<uint> pOutScreenshotHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_RequestScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_RequestScreenshot*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._HookScreenshot
#include "OVR/OpenVR/IVRScreenshots__HookScreenshot.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._HookScreenshot.Invoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_HookScreenshot::Invoke(ByRef<::ArrayW<::OVR::OpenVR::EVRScreenshotType>> pSupportedTypes, int numTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_HookScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_HookScreenshot*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pSupportedTypes), numTypes);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._HookScreenshot.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_HookScreenshot::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::EVRScreenshotType>> pSupportedTypes, int numTypes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_HookScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_HookScreenshot*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pSupportedTypes), numTypes, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._HookScreenshot.EndInvoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_HookScreenshot::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_HookScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_HookScreenshot*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyType
#include "OVR/OpenVR/IVRScreenshots__GetScreenshotPropertyType.hpp"
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyType.Invoke
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::Invoke(uint screenshotHandle, ByRef<::OVR::OpenVR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotType, false>(this, ___internal__method, screenshotHandle, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyType.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::BeginInvoke(uint screenshotHandle, ByRef<::OVR::OpenVR::EVRScreenshotError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyType.EndInvoke
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::EndInvoke(ByRef<::OVR::OpenVR::EVRScreenshotError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotType, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyFilename
#include "OVR/OpenVR/IVRScreenshots__GetScreenshotPropertyFilename.hpp"
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyFilename.Invoke
uint OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::Invoke(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotPropertyFilenames filenameType, ::System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<::OVR::OpenVR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError));
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyFilename.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::BeginInvoke(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotPropertyFilenames filenameType, ::System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<::OVR::OpenVR::EVRScreenshotError> pError, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._GetScreenshotPropertyFilename.EndInvoke
uint OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::EndInvoke(ByRef<::OVR::OpenVR::EVRScreenshotError> pError, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_GetScreenshotPropertyFilename*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._UpdateScreenshotProgress
#include "OVR/OpenVR/IVRScreenshots__UpdateScreenshotProgress.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._UpdateScreenshotProgress.Invoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::Invoke(uint screenshotHandle, float flProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, flProgress);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._UpdateScreenshotProgress.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::BeginInvoke(uint screenshotHandle, float flProgress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, flProgress, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._UpdateScreenshotProgress.EndInvoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_UpdateScreenshotProgress*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._TakeStereoScreenshot
#include "OVR/OpenVR/IVRScreenshots__TakeStereoScreenshot.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._TakeStereoScreenshot.Invoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::Invoke(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._TakeStereoScreenshot.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::BeginInvoke(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._TakeStereoScreenshot.EndInvoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::EndInvoke(ByRef<uint> pOutScreenshotHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_TakeStereoScreenshot*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._SubmitScreenshot
#include "OVR/OpenVR/IVRScreenshots__SubmitScreenshot.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._SubmitScreenshot.Invoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::Invoke(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._SubmitScreenshot.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::BeginInvoke(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRScreenshots/OVR.OpenVR._SubmitScreenshot.EndInvoke
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRScreenshots::_SubmitScreenshot*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRResources/OVR.OpenVR._LoadSharedResource
#include "OVR/OpenVR/IVRResources__LoadSharedResource.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._LoadSharedResource.Invoke
uint OVR::OpenVR::IVRResources::_LoadSharedResource::Invoke(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_LoadSharedResource::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_LoadSharedResource*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen);
}
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._LoadSharedResource.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRResources::_LoadSharedResource::BeginInvoke(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_LoadSharedResource::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_LoadSharedResource*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._LoadSharedResource.EndInvoke
uint OVR::OpenVR::IVRResources::_LoadSharedResource::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_LoadSharedResource::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_LoadSharedResource*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRResources/OVR.OpenVR._GetResourceFullPath
#include "OVR/OpenVR/IVRResources__GetResourceFullPath.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._GetResourceFullPath.Invoke
uint OVR::OpenVR::IVRResources::_GetResourceFullPath::Invoke(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, ::System::Text::StringBuilder* pchPathBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_GetResourceFullPath::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_GetResourceFullPath*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen);
}
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._GetResourceFullPath.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRResources::_GetResourceFullPath::BeginInvoke(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, ::System::Text::StringBuilder* pchPathBuffer, uint unBufferLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_GetResourceFullPath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_GetResourceFullPath*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRResources/OVR.OpenVR._GetResourceFullPath.EndInvoke
uint OVR::OpenVR::IVRResources::_GetResourceFullPath::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRResources::_GetResourceFullPath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRResources::_GetResourceFullPath*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverCount
#include "OVR/OpenVR/IVRDriverManager__GetDriverCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverCount.Invoke
uint OVR::OpenVR::IVRDriverManager::_GetDriverCount::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverCount::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverCount*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverCount.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRDriverManager::_GetDriverCount::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverCount*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverCount.EndInvoke
uint OVR::OpenVR::IVRDriverManager::_GetDriverCount::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverCount*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverName
#include "OVR/OpenVR/IVRDriverManager__GetDriverName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverName.Invoke
uint OVR::OpenVR::IVRDriverManager::_GetDriverName::Invoke(uint nDriver, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRDriverManager::_GetDriverName::BeginInvoke(uint nDriver, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nDriver, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverName.EndInvoke
uint OVR::OpenVR::IVRDriverManager::_GetDriverName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverHandle
#include "OVR/OpenVR/IVRDriverManager__GetDriverHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverHandle.Invoke
uint64_t OVR::OpenVR::IVRDriverManager::_GetDriverHandle::Invoke(::StringW pchDriverName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchDriverName);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRDriverManager::_GetDriverHandle::BeginInvoke(::StringW pchDriverName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchDriverName, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRDriverManager/OVR.OpenVR._GetDriverHandle.EndInvoke
uint64_t OVR::OpenVR::IVRDriverManager::_GetDriverHandle::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRDriverManager::_GetDriverHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRDriverManager::_GetDriverHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._SetActionManifestPath
#include "OVR/OpenVR/IVRInput__SetActionManifestPath.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._SetActionManifestPath.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_SetActionManifestPath::Invoke(::StringW pchActionManifestPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_SetActionManifestPath::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_SetActionManifestPath*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionManifestPath);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._SetActionManifestPath.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_SetActionManifestPath::BeginInvoke(::StringW pchActionManifestPath, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_SetActionManifestPath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_SetActionManifestPath*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchActionManifestPath, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._SetActionManifestPath.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_SetActionManifestPath::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_SetActionManifestPath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_SetActionManifestPath*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionSetHandle
#include "OVR/OpenVR/IVRInput__GetActionSetHandle.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionSetHandle.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionSetHandle::Invoke(::StringW pchActionSetName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionSetHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionSetHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionSetName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionSetHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetActionSetHandle::BeginInvoke(::StringW pchActionSetName, ByRef<uint64_t> pHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionSetHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionSetHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchActionSetName, byref(pHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionSetHandle.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionSetHandle::EndInvoke(ByRef<uint64_t> pHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionSetHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionSetHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionHandle
#include "OVR/OpenVR/IVRInput__GetActionHandle.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionHandle.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionHandle::Invoke(::StringW pchActionName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetActionHandle::BeginInvoke(::StringW pchActionName, ByRef<uint64_t> pHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchActionName, byref(pHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionHandle.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionHandle::EndInvoke(ByRef<uint64_t> pHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetInputSourceHandle
#include "OVR/OpenVR/IVRInput__GetInputSourceHandle.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetInputSourceHandle.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetInputSourceHandle::Invoke(::StringW pchInputSourcePath, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetInputSourceHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetInputSourceHandle*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchInputSourcePath, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetInputSourceHandle.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetInputSourceHandle::BeginInvoke(::StringW pchInputSourcePath, ByRef<uint64_t> pHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetInputSourceHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetInputSourceHandle*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchInputSourcePath, byref(pHandle), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetInputSourceHandle.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetInputSourceHandle::EndInvoke(ByRef<uint64_t> pHandle, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetInputSourceHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetInputSourceHandle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._UpdateActionState
#include "OVR/OpenVR/IVRInput__UpdateActionState.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._UpdateActionState.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_UpdateActionState::Invoke(ByRef<::ArrayW<::OVR::OpenVR::VRActiveActionSet_t>> pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_UpdateActionState::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_UpdateActionState*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pSets), unSizeOfVRSelectedActionSet_t, unSetCount);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._UpdateActionState.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_UpdateActionState::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::VRActiveActionSet_t>> pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_UpdateActionState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_UpdateActionState*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pSets), unSizeOfVRSelectedActionSet_t, unSetCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._UpdateActionState.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_UpdateActionState::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_UpdateActionState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_UpdateActionState*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetDigitalActionData
#include "OVR/OpenVR/IVRInput__GetDigitalActionData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputDigitalActionData_t
#include "OVR/OpenVR/InputDigitalActionData_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetDigitalActionData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetDigitalActionData::Invoke(uint64_t action, ByRef<::OVR::OpenVR::InputDigitalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetDigitalActionData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetDigitalActionData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetDigitalActionData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetDigitalActionData::BeginInvoke(uint64_t action, ByRef<::OVR::OpenVR::InputDigitalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetDigitalActionData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetDigitalActionData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetDigitalActionData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetDigitalActionData::EndInvoke(ByRef<::OVR::OpenVR::InputDigitalActionData_t> pActionData, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetDigitalActionData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetDigitalActionData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pActionData), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetAnalogActionData
#include "OVR/OpenVR/IVRInput__GetAnalogActionData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputAnalogActionData_t
#include "OVR/OpenVR/InputAnalogActionData_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetAnalogActionData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetAnalogActionData::Invoke(uint64_t action, ByRef<::OVR::OpenVR::InputAnalogActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetAnalogActionData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetAnalogActionData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetAnalogActionData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetAnalogActionData::BeginInvoke(uint64_t action, ByRef<::OVR::OpenVR::InputAnalogActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetAnalogActionData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetAnalogActionData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetAnalogActionData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetAnalogActionData::EndInvoke(ByRef<::OVR::OpenVR::InputAnalogActionData_t> pActionData, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetAnalogActionData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetAnalogActionData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pActionData), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetPoseActionData
#include "OVR/OpenVR/IVRInput__GetPoseActionData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.InputPoseActionData_t
#include "OVR/OpenVR/InputPoseActionData_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetPoseActionData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetPoseActionData::Invoke(uint64_t action, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ByRef<::OVR::OpenVR::InputPoseActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetPoseActionData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetPoseActionData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eOrigin, fPredictedSecondsFromNow, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetPoseActionData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetPoseActionData::BeginInvoke(uint64_t action, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ByRef<::OVR::OpenVR::InputPoseActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetPoseActionData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetPoseActionData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, eOrigin, fPredictedSecondsFromNow, byref(pActionData), unActionDataSize, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetPoseActionData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetPoseActionData::EndInvoke(ByRef<::OVR::OpenVR::InputPoseActionData_t> pActionData, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetPoseActionData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetPoseActionData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pActionData), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalActionData
#include "OVR/OpenVR/IVRInput__GetSkeletalActionData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputSkeletalActionData_t
#include "OVR/OpenVR/InputSkeletalActionData_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalActionData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalActionData::Invoke(uint64_t action, ByRef<::OVR::OpenVR::InputSkeletalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalActionData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalActionData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalActionData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetSkeletalActionData::BeginInvoke(uint64_t action, ByRef<::OVR::OpenVR::InputSkeletalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalActionData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalActionData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalActionData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalActionData::EndInvoke(ByRef<::OVR::OpenVR::InputSkeletalActionData_t> pActionData, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalActionData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalActionData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pActionData), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneData
#include "OVR/OpenVR/IVRInput__GetSkeletalBoneData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalBoneData::Invoke(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ByRef<::ArrayW<::OVR::OpenVR::VRBoneTransform_t>> pTransformArray, uint unTransformArrayCount, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, byref(pTransformArray), unTransformArrayCount, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetSkeletalBoneData::BeginInvoke(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ByRef<::ArrayW<::OVR::OpenVR::VRBoneTransform_t>> pTransformArray, uint unTransformArrayCount, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, byref(pTransformArray), unTransformArrayCount, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalBoneData::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneDataCompressed
#include "OVR/OpenVR/IVRInput__GetSkeletalBoneDataCompressed.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneDataCompressed.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::Invoke(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::System::IntPtr pvCompressedData, uint unCompressedSize, ByRef<uint> punRequiredCompressedSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pvCompressedData, unCompressedSize, byref(punRequiredCompressedSize), ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneDataCompressed.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::BeginInvoke(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::System::IntPtr pvCompressedData, uint unCompressedSize, ByRef<uint> punRequiredCompressedSize, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pvCompressedData, unCompressedSize, byref(punRequiredCompressedSize), ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetSkeletalBoneDataCompressed.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::EndInvoke(ByRef<uint> punRequiredCompressedSize, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetSkeletalBoneDataCompressed*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(punRequiredCompressedSize), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._DecompressSkeletalBoneData
#include "OVR/OpenVR/IVRInput__DecompressSkeletalBoneData.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._DecompressSkeletalBoneData.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::Invoke(::System::IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ByRef<::OVR::OpenVR::EVRSkeletalTransformSpace> peTransformSpace, ByRef<::ArrayW<::OVR::OpenVR::VRBoneTransform_t>> pTransformArray, uint unTransformArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pvCompressedBuffer, unCompressedBufferSize, byref(peTransformSpace), byref(pTransformArray), unTransformArrayCount);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._DecompressSkeletalBoneData.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::BeginInvoke(::System::IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ByRef<::OVR::OpenVR::EVRSkeletalTransformSpace> peTransformSpace, ByRef<::ArrayW<::OVR::OpenVR::VRBoneTransform_t>> pTransformArray, uint unTransformArrayCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pvCompressedBuffer, unCompressedBufferSize, byref(peTransformSpace), byref(pTransformArray), unTransformArrayCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._DecompressSkeletalBoneData.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::EndInvoke(ByRef<::OVR::OpenVR::EVRSkeletalTransformSpace> peTransformSpace, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_DecompressSkeletalBoneData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(peTransformSpace), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._TriggerHapticVibrationAction
#include "OVR/OpenVR/IVRInput__TriggerHapticVibrationAction.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._TriggerHapticVibrationAction.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::Invoke(uint64_t action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._TriggerHapticVibrationAction.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::BeginInvoke(uint64_t action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, uint64_t ulRestrictToDevice, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._TriggerHapticVibrationAction.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_TriggerHapticVibrationAction*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionOrigins
#include "OVR/OpenVR/IVRInput__GetActionOrigins.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionOrigins.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionOrigins::Invoke(uint64_t actionSetHandle, uint64_t digitalActionHandle, ByRef<::ArrayW<uint64_t>> originsOut, uint originOutCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionOrigins::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionOrigins*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, digitalActionHandle, byref(originsOut), originOutCount);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionOrigins.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetActionOrigins::BeginInvoke(uint64_t actionSetHandle, uint64_t digitalActionHandle, ByRef<::ArrayW<uint64_t>> originsOut, uint originOutCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionOrigins::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionOrigins*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, actionSetHandle, digitalActionHandle, byref(originsOut), originOutCount, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetActionOrigins.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionOrigins::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetActionOrigins::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetActionOrigins*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginLocalizedName
#include "OVR/OpenVR/IVRInput__GetOriginLocalizedName.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginLocalizedName.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetOriginLocalizedName::Invoke(uint64_t origin, ::System::Text::StringBuilder* pchNameArray, uint unNameArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginLocalizedName::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginLocalizedName*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, pchNameArray, unNameArraySize);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginLocalizedName.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetOriginLocalizedName::BeginInvoke(uint64_t origin, ::System::Text::StringBuilder* pchNameArray, uint unNameArraySize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginLocalizedName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginLocalizedName*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, pchNameArray, unNameArraySize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginLocalizedName.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetOriginLocalizedName::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginLocalizedName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginLocalizedName*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginTrackedDeviceInfo
#include "OVR/OpenVR/IVRInput__GetOriginTrackedDeviceInfo.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginTrackedDeviceInfo.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::Invoke(uint64_t origin, ByRef<::OVR::OpenVR::InputOriginInfo_t> pOriginInfo, uint unOriginInfoSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, byref(pOriginInfo), unOriginInfoSize);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginTrackedDeviceInfo.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::BeginInvoke(uint64_t origin, ByRef<::OVR::OpenVR::InputOriginInfo_t> pOriginInfo, uint unOriginInfoSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, byref(pOriginInfo), unOriginInfoSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._GetOriginTrackedDeviceInfo.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::EndInvoke(ByRef<::OVR::OpenVR::InputOriginInfo_t> pOriginInfo, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_GetOriginTrackedDeviceInfo*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pOriginInfo), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowActionOrigins
#include "OVR/OpenVR/IVRInput__ShowActionOrigins.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowActionOrigins.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_ShowActionOrigins::Invoke(uint64_t actionSetHandle, uint64_t ulActionHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowActionOrigins::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowActionOrigins*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, ulActionHandle);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowActionOrigins.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_ShowActionOrigins::BeginInvoke(uint64_t actionSetHandle, uint64_t ulActionHandle, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowActionOrigins::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowActionOrigins*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, actionSetHandle, ulActionHandle, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowActionOrigins.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_ShowActionOrigins::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowActionOrigins::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowActionOrigins*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowBindingsForActionSet
#include "OVR/OpenVR/IVRInput__ShowBindingsForActionSet.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowBindingsForActionSet.Invoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::Invoke(ByRef<::ArrayW<::OVR::OpenVR::VRActiveActionSet_t>> pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount, uint64_t originToHighlight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, byref(pSets), unSizeOfVRSelectedActionSet_t, unSetCount, originToHighlight);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowBindingsForActionSet.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::BeginInvoke(ByRef<::ArrayW<::OVR::OpenVR::VRActiveActionSet_t>> pSets, uint unSizeOfVRSelectedActionSet_t, uint unSetCount, uint64_t originToHighlight, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pSets), unSizeOfVRSelectedActionSet_t, unSetCount, originToHighlight, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRInput/OVR.OpenVR._ShowBindingsForActionSet.EndInvoke
::OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRInput::_ShowBindingsForActionSet*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Open
#include "OVR/OpenVR/IVRIOBuffer__Open.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Open.Invoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Open::Invoke(::StringW pchPath, ::OVR::OpenVR::EIOBufferMode mode, uint unElementSize, uint unElements, ByRef<uint64_t> pulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Open::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Open*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, pchPath, mode, unElementSize, unElements, byref(pulBuffer));
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Open.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRIOBuffer::_Open::BeginInvoke(::StringW pchPath, ::OVR::OpenVR::EIOBufferMode mode, uint unElementSize, uint unElements, ByRef<uint64_t> pulBuffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Open::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Open*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchPath, mode, unElementSize, unElements, byref(pulBuffer), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Open.EndInvoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Open::EndInvoke(ByRef<uint64_t> pulBuffer, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Open::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Open*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, byref(pulBuffer), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Close
#include "OVR/OpenVR/IVRIOBuffer__Close.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Close.Invoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Close::Invoke(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Close::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Close*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Close.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRIOBuffer::_Close::BeginInvoke(uint64_t ulBuffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Close::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Close*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulBuffer, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Close.EndInvoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Close::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Close::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Close*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Read
#include "OVR/OpenVR/IVRIOBuffer__Read.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Read.Invoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Read::Invoke(uint64_t ulBuffer, ::System::IntPtr pDst, uint unBytes, ByRef<uint> punRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Read::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Read*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pDst, unBytes, byref(punRead));
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Read.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRIOBuffer::_Read::BeginInvoke(uint64_t ulBuffer, ::System::IntPtr pDst, uint unBytes, ByRef<uint> punRead, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Read::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Read*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulBuffer, pDst, unBytes, byref(punRead), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Read.EndInvoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Read::EndInvoke(ByRef<uint> punRead, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Read::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Read*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, byref(punRead), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Write
#include "OVR/OpenVR/IVRIOBuffer__Write.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Write.Invoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Write::Invoke(uint64_t ulBuffer, ::System::IntPtr pSrc, uint unBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Write::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Write*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pSrc, unBytes);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Write.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRIOBuffer::_Write::BeginInvoke(uint64_t ulBuffer, ::System::IntPtr pSrc, uint unBytes, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Write::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Write*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulBuffer, pSrc, unBytes, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._Write.EndInvoke
::OVR::OpenVR::EIOBufferError OVR::OpenVR::IVRIOBuffer::_Write::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_Write::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_Write*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._PropertyContainer
#include "OVR/OpenVR/IVRIOBuffer__PropertyContainer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._PropertyContainer.Invoke
uint64_t OVR::OpenVR::IVRIOBuffer::_PropertyContainer::Invoke(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_PropertyContainer::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_PropertyContainer*), 12));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._PropertyContainer.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRIOBuffer::_PropertyContainer::BeginInvoke(uint64_t ulBuffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_PropertyContainer::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_PropertyContainer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulBuffer, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRIOBuffer/OVR.OpenVR._PropertyContainer.EndInvoke
uint64_t OVR::OpenVR::IVRIOBuffer::_PropertyContainer::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRIOBuffer::_PropertyContainer::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRIOBuffer::_PropertyContainer*), 14));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromDescriptor
#include "OVR/OpenVR/IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromDescriptor.Invoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::Invoke(::StringW pchDescriptor, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, pchDescriptor, byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromDescriptor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::BeginInvoke(::StringW pchDescriptor, ByRef<uint> pHandleOut, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchDescriptor, byref(pHandleOut), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromDescriptor.EndInvoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::EndInvoke(ByRef<uint> pHandleOut, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromDescriptor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, byref(pHandleOut), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromPose
#include "OVR/OpenVR/IVRSpatialAnchors__CreateSpatialAnchorFromPose.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.SpatialAnchorPose_t
#include "OVR/OpenVR/SpatialAnchorPose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromPose.Invoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::Invoke(uint unDeviceIndex, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPose, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unDeviceIndex, eOrigin, byref(pPose), byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::BeginInvoke(uint unDeviceIndex, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPose, ByRef<uint> pHandleOut, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unDeviceIndex, eOrigin, byref(pPose), byref(pHandleOut), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._CreateSpatialAnchorFromPose.EndInvoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::EndInvoke(ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPose, ByRef<uint> pHandleOut, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_CreateSpatialAnchorFromPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, byref(pPose), byref(pHandleOut), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorPose
#include "OVR/OpenVR/IVRSpatialAnchors__GetSpatialAnchorPose.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.SpatialAnchorPose_t
#include "OVR/OpenVR/SpatialAnchorPose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorPose.Invoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::Invoke(uint unHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPoseOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, eOrigin, byref(pPoseOut));
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorPose.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::BeginInvoke(uint unHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPoseOut, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unHandle, eOrigin, byref(pPoseOut), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorPose.EndInvoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::EndInvoke(ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPoseOut, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorPose*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, byref(pPoseOut), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorDescriptor
#include "OVR/OpenVR/IVRSpatialAnchors__GetSpatialAnchorDescriptor.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorDescriptor.Invoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::Invoke(uint unHandle, ::System::Text::StringBuilder* pchDescriptorOut, ByRef<uint> punDescriptorBufferLenInOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, pchDescriptorOut, byref(punDescriptorBufferLenInOut));
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorDescriptor.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::BeginInvoke(uint unHandle, ::System::Text::StringBuilder* pchDescriptorOut, ByRef<uint> punDescriptorBufferLenInOut, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unHandle, pchDescriptorOut, byref(punDescriptorBufferLenInOut), callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRSpatialAnchors/OVR.OpenVR._GetSpatialAnchorDescriptor.EndInvoke
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::EndInvoke(ByRef<uint> punDescriptorBufferLenInOut, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::IVRSpatialAnchors::_GetSpatialAnchorDescriptor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, byref(punDescriptorBufferLenInOut), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._PollNextEventPacked
#include "OVR/OpenVR/CVRSystem__PollNextEventPacked.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR.PollNextEventUnion
#include "OVR/OpenVR/CVRSystem_PollNextEventUnion.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStatePacked
#include "OVR/OpenVR/CVRSystem__GetControllerStatePacked.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR.GetControllerStateUnion
#include "OVR/OpenVR/CVRSystem_GetControllerStateUnion.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStateWithPosePacked
#include "OVR/OpenVR/CVRSystem__GetControllerStateWithPosePacked.hpp"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR.GetControllerStateWithPoseUnion
#include "OVR/OpenVR/CVRSystem_GetControllerStateWithPoseUnion.hpp"
// Including type: OVR.OpenVR.HmdMatrix44_t
#include "OVR/OpenVR/HmdMatrix44_t.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: OVR.OpenVR.DistortionCoordinates_t
#include "OVR/OpenVR/DistortionCoordinates_t.hpp"
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceClass
#include "OVR/OpenVR/ETrackedDeviceClass.hpp"
// Including type: OVR.OpenVR.EDeviceActivityLevel
#include "OVR/OpenVR/EDeviceActivityLevel.hpp"
// Including type: OVR.OpenVR.ETrackedControllerRole
#include "OVR/OpenVR/ETrackedControllerRole.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
// Including type: OVR.OpenVR.ETrackedPropertyError
#include "OVR/OpenVR/ETrackedPropertyError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
// Including type: OVR.OpenVR.EVREventType
#include "OVR/OpenVR/EVREventType.hpp"
// Including type: OVR.OpenVR.HiddenAreaMesh_t
#include "OVR/OpenVR/HiddenAreaMesh_t.hpp"
// Including type: OVR.OpenVR.EHiddenAreaMeshType
#include "OVR/OpenVR/EHiddenAreaMeshType.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
// Including type: OVR.OpenVR.EVRButtonId
#include "OVR/OpenVR/EVRButtonId.hpp"
// Including type: OVR.OpenVR.EVRControllerAxisType
#include "OVR/OpenVR/EVRControllerAxisType.hpp"
// Including type: OVR.OpenVR.EVRFirmwareError
#include "OVR/OpenVR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRSystem FnTable
[[deprecated]] ::OVR::OpenVR::IVRSystem& OVR::OpenVR::CVRSystem::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRSystem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetRecommendedRenderTargetSize
void OVR::OpenVR::CVRSystem::GetRecommendedRenderTargetSize(ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetRecommendedRenderTargetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedRenderTargetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetProjectionMatrix
::OVR::OpenVR::HmdMatrix44_t OVR::OpenVR::CVRSystem::GetProjectionMatrix(::OVR::OpenVR::EVREye eEye, float fNearZ, float fFarZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetProjectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProjectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(fNearZ), ::il2cpp_utils::ExtractType(fFarZ)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix44_t, false>(this, ___internal__method, eEye, fNearZ, fFarZ);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetProjectionRaw
void OVR::OpenVR::CVRSystem::GetProjectionRaw(::OVR::OpenVR::EVREye eEye, ByRef<float> pfLeft, ByRef<float> pfRight, ByRef<float> pfTop, ByRef<float> pfBottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetProjectionRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProjectionRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pfLeft), ::il2cpp_utils::ExtractType(pfRight), ::il2cpp_utils::ExtractType(pfTop), ::il2cpp_utils::ExtractType(pfBottom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pfLeft), byref(pfRight), byref(pfTop), byref(pfBottom));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.ComputeDistortion
bool OVR::OpenVR::CVRSystem::ComputeDistortion(::OVR::OpenVR::EVREye eEye, float fU, float fV, ByRef<::OVR::OpenVR::DistortionCoordinates_t> pDistortionCoordinates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::ComputeDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(fU), ::il2cpp_utils::ExtractType(fV), ::il2cpp_utils::ExtractType(pDistortionCoordinates)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eEye, fU, fV, byref(pDistortionCoordinates));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetEyeToHeadTransform
::OVR::OpenVR::HmdMatrix34_t OVR::OpenVR::CVRSystem::GetEyeToHeadTransform(::OVR::OpenVR::EVREye eEye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetEyeToHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeToHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(this, ___internal__method, eEye);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetTimeSinceLastVsync
bool OVR::OpenVR::CVRSystem::GetTimeSinceLastVsync(ByRef<float> pfSecondsSinceLastVsync, ByRef<uint64_t> pulFrameCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetTimeSinceLastVsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeSinceLastVsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pfSecondsSinceLastVsync), ::il2cpp_utils::ExtractType(pulFrameCounter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pfSecondsSinceLastVsync), byref(pulFrameCounter));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetD3D9AdapterIndex
int OVR::OpenVR::CVRSystem::GetD3D9AdapterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetD3D9AdapterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetD3D9AdapterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetDXGIOutputInfo
void OVR::OpenVR::CVRSystem::GetDXGIOutputInfo(ByRef<int> pnAdapterIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetDXGIOutputInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDXGIOutputInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnAdapterIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetOutputDevice
void OVR::OpenVR::CVRSystem::GetOutputDevice(ByRef<uint64_t> pnDevice, ::OVR::OpenVR::ETextureType textureType, ::System::IntPtr pInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetOutputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnDevice), ::il2cpp_utils::ExtractType(textureType), ::il2cpp_utils::ExtractType(pInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnDevice), textureType, pInstance);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.IsDisplayOnDesktop
bool OVR::OpenVR::CVRSystem::IsDisplayOnDesktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::IsDisplayOnDesktop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDisplayOnDesktop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.SetDisplayVisibility
bool OVR::OpenVR::CVRSystem::SetDisplayVisibility(bool bIsVisibleOnDesktop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::SetDisplayVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bIsVisibleOnDesktop)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bIsVisibleOnDesktop);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetDeviceToAbsoluteTrackingPose
void OVR::OpenVR::CVRSystem::GetDeviceToAbsoluteTrackingPose(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, ::ArrayW<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetDeviceToAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeviceToAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(fPredictedSecondsToPhotonsFromNow), ::il2cpp_utils::ExtractType(pTrackedDevicePoseArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin, fPredictedSecondsToPhotonsFromNow, pTrackedDevicePoseArray);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.ResetSeatedZeroPose
void OVR::OpenVR::CVRSystem::ResetSeatedZeroPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::ResetSeatedZeroPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetSeatedZeroPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetSeatedZeroPoseToStandingAbsoluteTrackingPose
::OVR::OpenVR::HmdMatrix34_t OVR::OpenVR::CVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSeatedZeroPoseToStandingAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetRawZeroPoseToStandingAbsoluteTrackingPose
::OVR::OpenVR::HmdMatrix34_t OVR::OpenVR::CVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawZeroPoseToStandingAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetSortedTrackedDeviceIndicesOfClass
uint OVR::OpenVR::CVRSystem::GetSortedTrackedDeviceIndicesOfClass(::OVR::OpenVR::ETrackedDeviceClass eTrackedDeviceClass, ::ArrayW<uint> punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetSortedTrackedDeviceIndicesOfClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortedTrackedDeviceIndicesOfClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackedDeviceClass), ::il2cpp_utils::ExtractType(punTrackedDeviceIndexArray), ::il2cpp_utils::ExtractType(unRelativeToTrackedDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, eTrackedDeviceClass, punTrackedDeviceIndexArray, unRelativeToTrackedDeviceIndex);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetTrackedDeviceActivityLevel
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::CVRSystem::GetTrackedDeviceActivityLevel(uint unDeviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetTrackedDeviceActivityLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceActivityLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EDeviceActivityLevel, false>(this, ___internal__method, unDeviceId);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.ApplyTransform
void OVR::OpenVR::CVRSystem::ApplyTransform(ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputPose, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose, ByRef<::OVR::OpenVR::HmdMatrix34_t> pTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::ApplyTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutputPose), ::il2cpp_utils::ExtractType(pTrackedDevicePose), ::il2cpp_utils::ExtractType(pTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputPose), byref(pTrackedDevicePose), byref(pTransform));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetTrackedDeviceIndexForControllerRole
uint OVR::OpenVR::CVRSystem::GetTrackedDeviceIndexForControllerRole(::OVR::OpenVR::ETrackedControllerRole unDeviceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetTrackedDeviceIndexForControllerRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceIndexForControllerRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceType);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetControllerRoleForTrackedDeviceIndex
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::CVRSystem::GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetControllerRoleForTrackedDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerRoleForTrackedDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ETrackedControllerRole, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetTrackedDeviceClass
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::CVRSystem::GetTrackedDeviceClass(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetTrackedDeviceClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ETrackedDeviceClass, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.IsTrackedDeviceConnected
bool OVR::OpenVR::CVRSystem::IsTrackedDeviceConnected(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::IsTrackedDeviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTrackedDeviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetBoolTrackedDeviceProperty
bool OVR::OpenVR::CVRSystem::GetBoolTrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetBoolTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetFloatTrackedDeviceProperty
float OVR::OpenVR::CVRSystem::GetFloatTrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetFloatTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetInt32TrackedDeviceProperty
int OVR::OpenVR::CVRSystem::GetInt32TrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetInt32TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetUint64TrackedDeviceProperty
uint64_t OVR::OpenVR::CVRSystem::GetUint64TrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetUint64TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUint64TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetMatrix34TrackedDeviceProperty
::OVR::OpenVR::HmdMatrix34_t OVR::OpenVR::CVRSystem::GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetMatrix34TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrix34TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetArrayTrackedDeviceProperty
uint OVR::OpenVR::CVRSystem::GetArrayTrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, uint propType, ::System::IntPtr pBuffer, uint unBufferSize, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetArrayTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(propType), ::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, propType, pBuffer, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetStringTrackedDeviceProperty
uint OVR::OpenVR::CVRSystem::GetStringTrackedDeviceProperty(uint unDeviceIndex, ::OVR::OpenVR::ETrackedDeviceProperty prop, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetStringTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetPropErrorNameFromEnum
::StringW OVR::OpenVR::CVRSystem::GetPropErrorNameFromEnum(::OVR::OpenVR::ETrackedPropertyError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetPropErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.PollNextEvent
bool OVR::OpenVR::CVRSystem::PollNextEvent(ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::PollNextEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.PollNextEventWithPose
bool OVR::OpenVR::CVRSystem::PollNextEventWithPose(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::PollNextEventWithPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextEventWithPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent), ::il2cpp_utils::ExtractType(pTrackedDevicePose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, byref(pEvent), uncbVREvent, byref(pTrackedDevicePose));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetEventTypeNameFromEnum
::StringW OVR::OpenVR::CVRSystem::GetEventTypeNameFromEnum(::OVR::OpenVR::EVREventType eType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetEventTypeNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventTypeNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eType);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetHiddenAreaMesh
::OVR::OpenVR::HiddenAreaMesh_t OVR::OpenVR::CVRSystem::GetHiddenAreaMesh(::OVR::OpenVR::EVREye eEye, ::OVR::OpenVR::EHiddenAreaMeshType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetHiddenAreaMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHiddenAreaMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HiddenAreaMesh_t, false>(this, ___internal__method, eEye, type);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetControllerState
bool OVR::OpenVR::CVRSystem::GetControllerState(uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, uint unControllerStateSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetControllerStateWithPose
bool OVR::OpenVR::CVRSystem::GetControllerStateWithPose(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, uint unControllerStateSize, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetControllerStateWithPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerStateWithPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize), ::il2cpp_utils::ExtractType(pTrackedDevicePose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose));
}
// Autogenerated method: OVR.OpenVR.CVRSystem.TriggerHapticPulse
void OVR::OpenVR::CVRSystem::TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, uint16_t usDurationMicroSec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::TriggerHapticPulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(unAxisId), ::il2cpp_utils::ExtractType(usDurationMicroSec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unControllerDeviceIndex, unAxisId, usDurationMicroSec);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetButtonIdNameFromEnum
::StringW OVR::OpenVR::CVRSystem::GetButtonIdNameFromEnum(::OVR::OpenVR::EVRButtonId eButtonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetButtonIdNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonIdNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eButtonId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eButtonId);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.GetControllerAxisTypeNameFromEnum
::StringW OVR::OpenVR::CVRSystem::GetControllerAxisTypeNameFromEnum(::OVR::OpenVR::EVRControllerAxisType eAxisType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::GetControllerAxisTypeNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerAxisTypeNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eAxisType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eAxisType);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.IsInputAvailable
bool OVR::OpenVR::CVRSystem::IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::IsInputAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInputAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.IsSteamVRDrawingControllers
bool OVR::OpenVR::CVRSystem::IsSteamVRDrawingControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::IsSteamVRDrawingControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSteamVRDrawingControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.ShouldApplicationPause
bool OVR::OpenVR::CVRSystem::ShouldApplicationPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::ShouldApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.ShouldApplicationReduceRenderingWork
bool OVR::OpenVR::CVRSystem::ShouldApplicationReduceRenderingWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::ShouldApplicationReduceRenderingWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldApplicationReduceRenderingWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.DriverDebugRequest
uint OVR::OpenVR::CVRSystem::DriverDebugRequest(uint unDeviceIndex, ::StringW pchRequest, ::System::Text::StringBuilder* pchResponseBuffer, uint unResponseBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::DriverDebugRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DriverDebugRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchRequest), ::il2cpp_utils::ExtractType(pchResponseBuffer), ::il2cpp_utils::ExtractType(unResponseBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.PerformFirmwareUpdate
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::CVRSystem::PerformFirmwareUpdate(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::PerformFirmwareUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformFirmwareUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRFirmwareError, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.AcknowledgeQuit_Exiting
void OVR::OpenVR::CVRSystem::AcknowledgeQuit_Exiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::AcknowledgeQuit_Exiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcknowledgeQuit_Exiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRSystem.AcknowledgeQuit_UserPrompt
void OVR::OpenVR::CVRSystem::AcknowledgeQuit_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::AcknowledgeQuit_UserPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcknowledgeQuit_UserPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._PollNextEventPacked
#include "OVR/OpenVR/CVRSystem__PollNextEventPacked.hpp"
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._PollNextEventPacked.Invoke
bool OVR::OpenVR::CVRSystem::_PollNextEventPacked::Invoke(ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_PollNextEventPacked::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_PollNextEventPacked*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._PollNextEventPacked.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::CVRSystem::_PollNextEventPacked::BeginInvoke(ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, uint uncbVREvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_PollNextEventPacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_PollNextEventPacked*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._PollNextEventPacked.EndInvoke
bool OVR::OpenVR::CVRSystem::_PollNextEventPacked::EndInvoke(ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_PollNextEventPacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_PollNextEventPacked*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStatePacked
#include "OVR/OpenVR/CVRSystem__GetControllerStatePacked.hpp"
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStatePacked.Invoke
bool OVR::OpenVR::CVRSystem::_GetControllerStatePacked::Invoke(uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStatePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStatePacked*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize);
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStatePacked.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::CVRSystem::_GetControllerStatePacked::BeginInvoke(uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStatePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStatePacked*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, callback, object);
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStatePacked.EndInvoke
bool OVR::OpenVR::CVRSystem::_GetControllerStatePacked::EndInvoke(ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStatePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStatePacked*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStateWithPosePacked
#include "OVR/OpenVR/CVRSystem__GetControllerStateWithPosePacked.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.TrackedDevicePose_t
#include "OVR/OpenVR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStateWithPosePacked.Invoke
bool OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::Invoke(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose));
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStateWithPosePacked.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::BeginInvoke(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose), callback, object);
}
// Autogenerated method: OVR.OpenVR.CVRSystem/OVR.OpenVR._GetControllerStateWithPosePacked.EndInvoke
bool OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::EndInvoke(ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pTrackedDevicePose, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRSystem::_GetControllerStateWithPosePacked*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pTrackedDevicePose), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRExtendedDisplay FnTable
[[deprecated]] ::OVR::OpenVR::IVRExtendedDisplay& OVR::OpenVR::CVRExtendedDisplay::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRExtendedDisplay::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRExtendedDisplay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetWindowBounds
void OVR::OpenVR::CVRExtendedDisplay::GetWindowBounds(ByRef<int> pnX, ByRef<int> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRExtendedDisplay::GetWindowBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWindowBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnX), ::il2cpp_utils::ExtractType(pnY), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetEyeOutputViewport
void OVR::OpenVR::CVRExtendedDisplay::GetEyeOutputViewport(::OVR::OpenVR::EVREye eEye, ByRef<uint> pnX, ByRef<uint> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRExtendedDisplay::GetEyeOutputViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeOutputViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pnX), ::il2cpp_utils::ExtractType(pnY), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetDXGIOutputInfo
void OVR::OpenVR::CVRExtendedDisplay::GetDXGIOutputInfo(ByRef<int> pnAdapterIndex, ByRef<int> pnAdapterOutputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRExtendedDisplay::GetDXGIOutputInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDXGIOutputInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnAdapterIndex), ::il2cpp_utils::ExtractType(pnAdapterOutputIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex), byref(pnAdapterOutputIndex));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
// Including type: OVR.OpenVR.EVRTrackedCameraFrameType
#include "OVR/OpenVR/EVRTrackedCameraFrameType.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: OVR.OpenVR.HmdMatrix44_t
#include "OVR/OpenVR/HmdMatrix44_t.hpp"
// Including type: OVR.OpenVR.CameraVideoStreamFrameHeader_t
#include "OVR/OpenVR/CameraVideoStreamFrameHeader_t.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRTrackedCamera FnTable
[[deprecated]] ::OVR::OpenVR::IVRTrackedCamera& OVR::OpenVR::CVRTrackedCamera::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRTrackedCamera*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetCameraErrorNameFromEnum
::StringW OVR::OpenVR::CVRTrackedCamera::GetCameraErrorNameFromEnum(::OVR::OpenVR::EVRTrackedCameraError eCameraError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetCameraErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eCameraError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eCameraError);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.HasCamera
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::HasCamera(uint nDeviceIndex, ByRef<bool> pHasCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::HasCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(pHasCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, byref(pHasCamera));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetCameraFrameSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetCameraFrameSize(uint nDeviceIndex, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ByRef<uint> pnFrameBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetCameraFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight), ::il2cpp_utils::ExtractType(pnFrameBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pnWidth), byref(pnHeight), byref(pnFrameBufferSize));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetCameraIntrinsics
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetCameraIntrinsics(uint nDeviceIndex, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ByRef<::OVR::OpenVR::HmdVector2_t> pFocalLength, ByRef<::OVR::OpenVR::HmdVector2_t> pCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetCameraIntrinsics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraIntrinsics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pFocalLength), ::il2cpp_utils::ExtractType(pCenter)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pFocalLength), byref(pCenter));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetCameraProjection
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetCameraProjection(uint nDeviceIndex, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ByRef<::OVR::OpenVR::HmdMatrix44_t> pProjection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetCameraProjection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraProjection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(flZNear), ::il2cpp_utils::ExtractType(flZFar), ::il2cpp_utils::ExtractType(pProjection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, flZNear, flZFar, byref(pProjection));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.AcquireVideoStreamingService
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::AcquireVideoStreamingService(uint nDeviceIndex, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::AcquireVideoStreamingService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireVideoStreamingService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.ReleaseVideoStreamingService
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::ReleaseVideoStreamingService(uint64_t hTrackedCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::ReleaseVideoStreamingService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseVideoStreamingService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetVideoStreamFrameBuffer
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetVideoStreamFrameBuffer(uint64_t hTrackedCamera, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ::System::IntPtr pFrameBuffer, uint nFrameBufferSize, ByRef<::OVR::OpenVR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetVideoStreamFrameBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamFrameBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pFrameBuffer), ::il2cpp_utils::ExtractType(nFrameBufferSize), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, pFrameBuffer, nFrameBufferSize, byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetVideoStreamTextureSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureSize(uint nDeviceIndex, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pTextureBounds), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pTextureBounds), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetVideoStreamTextureD3D11
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureD3D11(uint64_t hTrackedCamera, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView, ByRef<::OVR::OpenVR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pD3D11DeviceOrResource), ::il2cpp_utils::ExtractType(ppD3D11ShaderResourceView), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView), byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.GetVideoStreamTextureGL
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureGL(uint64_t hTrackedCamera, ::OVR::OpenVR::EVRTrackedCameraFrameType eFrameType, ByRef<uint> pglTextureId, ByRef<::OVR::OpenVR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::GetVideoStreamTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pglTextureId), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, byref(pglTextureId), byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: OVR.OpenVR.CVRTrackedCamera.ReleaseVideoStreamTextureGL
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::CVRTrackedCamera::ReleaseVideoStreamTextureGL(uint64_t hTrackedCamera, uint glTextureId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRTrackedCamera::ReleaseVideoStreamTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseVideoStreamTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(glTextureId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, glTextureId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRApplications FnTable
[[deprecated]] ::OVR::OpenVR::IVRApplications& OVR::OpenVR::CVRApplications::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRApplications*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.AddApplicationManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::AddApplicationManifest(::StringW pchApplicationManifestFullPath, bool bTemporary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::AddApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddApplicationManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchApplicationManifestFullPath), ::il2cpp_utils::ExtractType(bTemporary)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath, bTemporary);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.RemoveApplicationManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::RemoveApplicationManifest(::StringW pchApplicationManifestFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::RemoveApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveApplicationManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchApplicationManifestFullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.IsApplicationInstalled
bool OVR::OpenVR::CVRApplications::IsApplicationInstalled(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::IsApplicationInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsApplicationInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationCount
uint OVR::OpenVR::CVRApplications::GetApplicationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationKeyByIndex
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::GetApplicationKeyByIndex(uint unApplicationIndex, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationKeyByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationKeyByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unApplicationIndex), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationKeyByProcessId
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::GetApplicationKeyByProcessId(uint unProcessId, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationKeyByProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationKeyByProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unProcessId), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.LaunchApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::LaunchApplication(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::LaunchApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.LaunchTemplateApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::LaunchTemplateApplication(::StringW pchTemplateAppKey, ::StringW pchNewAppKey, ::ArrayW<::OVR::OpenVR::AppOverrideKeys_t> pKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::LaunchTemplateApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchTemplateApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchTemplateAppKey), ::il2cpp_utils::ExtractType(pchNewAppKey), ::il2cpp_utils::ExtractType(pKeys)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchTemplateAppKey, pchNewAppKey, pKeys);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.LaunchApplicationFromMimeType
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::LaunchApplicationFromMimeType(::StringW pchMimeType, ::StringW pchArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::LaunchApplicationFromMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchApplicationFromMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchMimeType, pchArgs);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.LaunchDashboardOverlay
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::LaunchDashboardOverlay(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::LaunchDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.CancelApplicationLaunch
bool OVR::OpenVR::CVRApplications::CancelApplicationLaunch(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::CancelApplicationLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelApplicationLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.IdentifyApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::IdentifyApplication(uint unProcessId, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::IdentifyApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IdentifyApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unProcessId), ::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationProcessId
uint OVR::OpenVR::CVRApplications::GetApplicationProcessId(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationsErrorNameFromEnum
::StringW OVR::OpenVR::CVRApplications::GetApplicationsErrorNameFromEnum(::OVR::OpenVR::EVRApplicationError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationsErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationPropertyString
uint OVR::OpenVR::CVRApplications::GetApplicationPropertyString(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ::System::Text::StringBuilder* pchPropertyValueBuffer, uint unPropertyValueBufferLen, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationPropertyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(pchPropertyValueBuffer), ::il2cpp_utils::ExtractType(unPropertyValueBufferLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationPropertyBool
bool OVR::OpenVR::CVRApplications::GetApplicationPropertyBool(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationPropertyBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationPropertyUint64
uint64_t OVR::OpenVR::CVRApplications::GetApplicationPropertyUint64(::StringW pchAppKey, ::OVR::OpenVR::EVRApplicationProperty eProperty, ByRef<::OVR::OpenVR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationPropertyUint64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyUint64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRApplications.SetApplicationAutoLaunch
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::SetApplicationAutoLaunch(::StringW pchAppKey, bool bAutoLaunch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::SetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetApplicationAutoLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(bAutoLaunch)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, bAutoLaunch);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationAutoLaunch
bool OVR::OpenVR::CVRApplications::GetApplicationAutoLaunch(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationAutoLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.SetDefaultApplicationForMimeType
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::SetDefaultApplicationForMimeType(::StringW pchAppKey, ::StringW pchMimeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::SetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultApplicationForMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(pchMimeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, pchMimeType);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetDefaultApplicationForMimeType
bool OVR::OpenVR::CVRApplications::GetDefaultApplicationForMimeType(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultApplicationForMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationSupportedMimeTypes
bool OVR::OpenVR::CVRApplications::GetApplicationSupportedMimeTypes(::StringW pchAppKey, ::System::Text::StringBuilder* pchMimeTypesBuffer, uint unMimeTypesBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationSupportedMimeTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationSupportedMimeTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(pchMimeTypesBuffer), ::il2cpp_utils::ExtractType(unMimeTypesBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationsThatSupportMimeType
uint OVR::OpenVR::CVRApplications::GetApplicationsThatSupportMimeType(::StringW pchMimeType, ::System::Text::StringBuilder* pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationsThatSupportMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsThatSupportMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchAppKeysThatSupportBuffer), ::il2cpp_utils::ExtractType(unAppKeysThatSupportBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationLaunchArguments
uint OVR::OpenVR::CVRApplications::GetApplicationLaunchArguments(uint unHandle, ::System::Text::StringBuilder* pchArgs, uint unArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationLaunchArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationLaunchArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(pchArgs), ::il2cpp_utils::ExtractType(unArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unHandle, pchArgs, unArgs);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetStartingApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::GetStartingApplication(::System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetStartingApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartingApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetTransitionState
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::CVRApplications::GetTransitionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetTransitionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransitionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationTransitionState, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.PerformApplicationPrelaunchCheck
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::PerformApplicationPrelaunchCheck(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::PerformApplicationPrelaunchCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformApplicationPrelaunchCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetApplicationsTransitionStateNameFromEnum
::StringW OVR::OpenVR::CVRApplications::GetApplicationsTransitionStateNameFromEnum(::OVR::OpenVR::EVRApplicationTransitionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetApplicationsTransitionStateNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsTransitionStateNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, state);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.IsQuitUserPromptRequested
bool OVR::OpenVR::CVRApplications::IsQuitUserPromptRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::IsQuitUserPromptRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQuitUserPromptRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.LaunchInternalProcess
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::CVRApplications::LaunchInternalProcess(::StringW pchBinaryPath, ::StringW pchArguments, ::StringW pchWorkingDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::LaunchInternalProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInternalProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchBinaryPath), ::il2cpp_utils::ExtractType(pchArguments), ::il2cpp_utils::ExtractType(pchWorkingDirectory)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRApplicationError, false>(this, ___internal__method, pchBinaryPath, pchArguments, pchWorkingDirectory);
}
// Autogenerated method: OVR.OpenVR.CVRApplications.GetCurrentSceneProcessId
uint OVR::OpenVR::CVRApplications::GetCurrentSceneProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRApplications::GetCurrentSceneProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSceneProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
// Including type: OVR.OpenVR.HmdQuad_t
#include "OVR/OpenVR/HmdQuad_t.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRChaperone FnTable
[[deprecated]] ::OVR::OpenVR::IVRChaperone& OVR::OpenVR::CVRChaperone::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRChaperone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetCalibrationState
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::CVRChaperone::GetCalibrationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::GetCalibrationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalibrationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ChaperoneCalibrationState, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetPlayAreaSize
bool OVR::OpenVR::CVRChaperone::GetPlayAreaSize(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::GetPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSizeX), ::il2cpp_utils::ExtractType(pSizeZ)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetPlayAreaRect
bool OVR::OpenVR::CVRChaperone::GetPlayAreaRect(ByRef<::OVR::OpenVR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::GetPlayAreaRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayAreaRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.ReloadInfo
void OVR::OpenVR::CVRChaperone::ReloadInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::ReloadInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.SetSceneColor
void OVR::OpenVR::CVRChaperone::SetSceneColor(::OVR::OpenVR::HmdColor_t color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::SetSceneColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSceneColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetBoundsColor
void OVR::OpenVR::CVRChaperone::GetBoundsColor(ByRef<::OVR::OpenVR::HmdColor_t> pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ByRef<::OVR::OpenVR::HmdColor_t> pOutputCameraColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::GetBoundsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoundsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutputColorArray), ::il2cpp_utils::ExtractType(nNumOutputColors), ::il2cpp_utils::ExtractType(flCollisionBoundsFadeDistance), ::il2cpp_utils::ExtractType(pOutputCameraColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputColorArray), nNumOutputColors, flCollisionBoundsFadeDistance, byref(pOutputCameraColor));
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.AreBoundsVisible
bool OVR::OpenVR::CVRChaperone::AreBoundsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::AreBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreBoundsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.ForceBoundsVisible
void OVR::OpenVR::CVRChaperone::ForceBoundsVisible(bool bForce) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperone::ForceBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceBoundsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bForce);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRChaperoneSetup FnTable
[[deprecated]] ::OVR::OpenVR::IVRChaperoneSetup& OVR::OpenVR::CVRChaperoneSetup::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRChaperoneSetup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.CommitWorkingCopy
bool OVR::OpenVR::CVRChaperoneSetup::CommitWorkingCopy(::OVR::OpenVR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::CommitWorkingCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitWorkingCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, configFile);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.RevertWorkingCopy
void OVR::OpenVR::CVRChaperoneSetup::RevertWorkingCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::RevertWorkingCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertWorkingCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetWorkingPlayAreaSize
bool OVR::OpenVR::CVRChaperoneSetup::GetWorkingPlayAreaSize(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetWorkingPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSizeX), ::il2cpp_utils::ExtractType(pSizeZ)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetWorkingPlayAreaRect
bool OVR::OpenVR::CVRChaperoneSetup::GetWorkingPlayAreaRect(ByRef<::OVR::OpenVR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetWorkingPlayAreaRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingPlayAreaRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetWorkingCollisionBoundsInfo
bool OVR::OpenVR::CVRChaperoneSetup::GetWorkingCollisionBoundsInfo(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetWorkingCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::OVR::OpenVR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetLiveCollisionBoundsInfo
bool OVR::OpenVR::CVRChaperoneSetup::GetLiveCollisionBoundsInfo(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetLiveCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::OVR::OpenVR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetWorkingSeatedZeroPoseToRawTrackingPose
bool OVR::OpenVR::CVRChaperoneSetup::GetWorkingSeatedZeroPoseToRawTrackingPose(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetWorkingSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatSeatedZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetWorkingStandingZeroPoseToRawTrackingPose
bool OVR::OpenVR::CVRChaperoneSetup::GetWorkingStandingZeroPoseToRawTrackingPose(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetWorkingStandingZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingStandingZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatStandingZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingPlayAreaSize
void OVR::OpenVR::CVRChaperoneSetup::SetWorkingPlayAreaSize(float sizeX, float sizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeX), ::il2cpp_utils::ExtractType(sizeZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeX, sizeZ);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingCollisionBoundsInfo
void OVR::OpenVR::CVRChaperoneSetup::SetWorkingCollisionBoundsInfo(::ArrayW<::OVR::OpenVR::HmdQuad_t> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pQuadsBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pQuadsBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingSeatedZeroPoseToRawTrackingPose
void OVR::OpenVR::CVRChaperoneSetup::SetWorkingSeatedZeroPoseToRawTrackingPose(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMatSeatedZeroPoseToRawTrackingPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingStandingZeroPoseToRawTrackingPose
void OVR::OpenVR::CVRChaperoneSetup::SetWorkingStandingZeroPoseToRawTrackingPose(ByRef<::OVR::OpenVR::HmdMatrix34_t> pMatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingStandingZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingStandingZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMatStandingZeroPoseToRawTrackingPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.ReloadFromDisk
void OVR::OpenVR::CVRChaperoneSetup::ReloadFromDisk(::OVR::OpenVR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::ReloadFromDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadFromDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configFile);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetLiveSeatedZeroPoseToRawTrackingPose
bool OVR::OpenVR::CVRChaperoneSetup::GetLiveSeatedZeroPoseToRawTrackingPose(ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetLiveSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatSeatedZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingCollisionBoundsTagsInfo
void OVR::OpenVR::CVRChaperoneSetup::SetWorkingCollisionBoundsTagsInfo(::ArrayW<uint8_t> pTagsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingCollisionBoundsTagsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingCollisionBoundsTagsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTagsBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTagsBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetLiveCollisionBoundsTagsInfo
bool OVR::OpenVR::CVRChaperoneSetup::GetLiveCollisionBoundsTagsInfo(ByRef<::ArrayW<uint8_t>> pTagsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetLiveCollisionBoundsTagsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveCollisionBoundsTagsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTagsBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.SetWorkingPhysicalBoundsInfo
bool OVR::OpenVR::CVRChaperoneSetup::SetWorkingPhysicalBoundsInfo(::ArrayW<::OVR::OpenVR::HmdQuad_t> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::SetWorkingPhysicalBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingPhysicalBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pQuadsBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pQuadsBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.GetLivePhysicalBoundsInfo
bool OVR::OpenVR::CVRChaperoneSetup::GetLivePhysicalBoundsInfo(ByRef<::ArrayW<::OVR::OpenVR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::GetLivePhysicalBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivePhysicalBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::OVR::OpenVR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.ExportLiveToBuffer
bool OVR::OpenVR::CVRChaperoneSetup::ExportLiveToBuffer(::System::Text::StringBuilder* pBuffer, ByRef<uint> pnBufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::ExportLiveToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportLiveToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(pnBufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, byref(pnBufferLength));
}
// Autogenerated method: OVR.OpenVR.CVRChaperoneSetup.ImportFromBufferToWorking
bool OVR::OpenVR::CVRChaperoneSetup::ImportFromBufferToWorking(::StringW pBuffer, uint nImportFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRChaperoneSetup::ImportFromBufferToWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportFromBufferToWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(nImportFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, nImportFlags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: OVR.OpenVR.EVRSubmitFlags
#include "OVR/OpenVR/EVRSubmitFlags.hpp"
// Including type: OVR.OpenVR.Compositor_FrameTiming
#include "OVR/OpenVR/Compositor_FrameTiming.hpp"
// Including type: OVR.OpenVR.Compositor_CumulativeStats
#include "OVR/OpenVR/Compositor_CumulativeStats.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRCompositor FnTable
[[deprecated]] ::OVR::OpenVR::IVRCompositor& OVR::OpenVR::CVRCompositor::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRCompositor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.SetTrackingSpace
void OVR::OpenVR::CVRCompositor::SetTrackingSpace(::OVR::OpenVR::ETrackingUniverseOrigin eOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::SetTrackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetTrackingSpace
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::CVRCompositor::GetTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetTrackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::ETrackingUniverseOrigin, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.WaitGetPoses
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::WaitGetPoses(::ArrayW<::OVR::OpenVR::TrackedDevicePose_t> pRenderPoseArray, ::ArrayW<::OVR::OpenVR::TrackedDevicePose_t> pGamePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::WaitGetPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitGetPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderPoseArray), ::il2cpp_utils::ExtractType(pGamePoseArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, pRenderPoseArray, pGamePoseArray);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetLastPoses
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::GetLastPoses(::ArrayW<::OVR::OpenVR::TrackedDevicePose_t> pRenderPoseArray, ::ArrayW<::OVR::OpenVR::TrackedDevicePose_t> pGamePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetLastPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderPoseArray), ::il2cpp_utils::ExtractType(pGamePoseArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, pRenderPoseArray, pGamePoseArray);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetLastPoseForTrackedDeviceIndex
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputPose, ByRef<::OVR::OpenVR::TrackedDevicePose_t> pOutputGamePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetLastPoseForTrackedDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastPoseForTrackedDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pOutputPose), ::il2cpp_utils::ExtractType(pOutputGamePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, unDeviceIndex, byref(pOutputPose), byref(pOutputGamePose));
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.Submit
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::Submit(::OVR::OpenVR::EVREye eEye, ByRef<::OVR::OpenVR::Texture_t> pTexture, ByRef<::OVR::OpenVR::VRTextureBounds_t> pBounds, ::OVR::OpenVR::EVRSubmitFlags nSubmitFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::Submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pTexture), ::il2cpp_utils::ExtractType(pBounds), ::il2cpp_utils::ExtractType(nSubmitFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pTexture), byref(pBounds), nSubmitFlags);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ClearLastSubmittedFrame
void OVR::OpenVR::CVRCompositor::ClearLastSubmittedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ClearLastSubmittedFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLastSubmittedFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.PostPresentHandoff
void OVR::OpenVR::CVRCompositor::PostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::PostPresentHandoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostPresentHandoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetFrameTiming
bool OVR::OpenVR::CVRCompositor::GetFrameTiming(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint unFramesAgo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetFrameTiming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTiming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTiming), ::il2cpp_utils::ExtractType(unFramesAgo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTiming), unFramesAgo);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetFrameTimings
uint OVR::OpenVR::CVRCompositor::GetFrameTimings(ByRef<::OVR::OpenVR::Compositor_FrameTiming> pTiming, uint nFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetFrameTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTiming), ::il2cpp_utils::ExtractType(nFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pTiming), nFrames);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetFrameTimeRemaining
float OVR::OpenVR::CVRCompositor::GetFrameTimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetFrameTimeRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTimeRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetCumulativeStats
void OVR::OpenVR::CVRCompositor::GetCumulativeStats(ByRef<::OVR::OpenVR::Compositor_CumulativeStats> pStats, uint nStatsSizeInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetCumulativeStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCumulativeStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStats), ::il2cpp_utils::ExtractType(nStatsSizeInBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pStats), nStatsSizeInBytes);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.FadeToColor
void OVR::OpenVR::CVRCompositor::FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::FadeToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fSeconds), ::il2cpp_utils::ExtractType(fRed), ::il2cpp_utils::ExtractType(fGreen), ::il2cpp_utils::ExtractType(fBlue), ::il2cpp_utils::ExtractType(fAlpha), ::il2cpp_utils::ExtractType(bBackground)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetCurrentFadeColor
::OVR::OpenVR::HmdColor_t OVR::OpenVR::CVRCompositor::GetCurrentFadeColor(bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetCurrentFadeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bBackground)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdColor_t, false>(this, ___internal__method, bBackground);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.FadeGrid
void OVR::OpenVR::CVRCompositor::FadeGrid(float fSeconds, bool bFadeIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::FadeGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fSeconds), ::il2cpp_utils::ExtractType(bFadeIn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, bFadeIn);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetCurrentGridAlpha
float OVR::OpenVR::CVRCompositor::GetCurrentGridAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetCurrentGridAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentGridAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.SetSkyboxOverride
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::SetSkyboxOverride(::ArrayW<::OVR::OpenVR::Texture_t> pTextures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::SetSkyboxOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSkyboxOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTextures)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, pTextures);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ClearSkyboxOverride
void OVR::OpenVR::CVRCompositor::ClearSkyboxOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ClearSkyboxOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSkyboxOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.CompositorBringToFront
void OVR::OpenVR::CVRCompositor::CompositorBringToFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::CompositorBringToFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorBringToFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.CompositorGoToBack
void OVR::OpenVR::CVRCompositor::CompositorGoToBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::CompositorGoToBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorGoToBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.CompositorQuit
void OVR::OpenVR::CVRCompositor::CompositorQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::CompositorQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.IsFullscreen
bool OVR::OpenVR::CVRCompositor::IsFullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::IsFullscreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFullscreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetCurrentSceneFocusProcess
uint OVR::OpenVR::CVRCompositor::GetCurrentSceneFocusProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetCurrentSceneFocusProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSceneFocusProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetLastFrameRenderer
uint OVR::OpenVR::CVRCompositor::GetLastFrameRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetLastFrameRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFrameRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.CanRenderScene
bool OVR::OpenVR::CVRCompositor::CanRenderScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::CanRenderScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanRenderScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ShowMirrorWindow
void OVR::OpenVR::CVRCompositor::ShowMirrorWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ShowMirrorWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMirrorWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.HideMirrorWindow
void OVR::OpenVR::CVRCompositor::HideMirrorWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::HideMirrorWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideMirrorWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.IsMirrorWindowVisible
bool OVR::OpenVR::CVRCompositor::IsMirrorWindowVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::IsMirrorWindowVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMirrorWindowVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.CompositorDumpImages
void OVR::OpenVR::CVRCompositor::CompositorDumpImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::CompositorDumpImages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorDumpImages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ShouldAppRenderWithLowResources
bool OVR::OpenVR::CVRCompositor::ShouldAppRenderWithLowResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ShouldAppRenderWithLowResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldAppRenderWithLowResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ForceInterleavedReprojectionOn
void OVR::OpenVR::CVRCompositor::ForceInterleavedReprojectionOn(bool bOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ForceInterleavedReprojectionOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceInterleavedReprojectionOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bOverride);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ForceReconnectProcess
void OVR::OpenVR::CVRCompositor::ForceReconnectProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ForceReconnectProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceReconnectProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.SuspendRendering
void OVR::OpenVR::CVRCompositor::SuspendRendering(bool bSuspend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::SuspendRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SuspendRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bSuspend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bSuspend);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetMirrorTextureD3D11
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::GetMirrorTextureD3D11(::OVR::OpenVR::EVREye eEye, ::System::IntPtr pD3D11DeviceOrResource, ByRef<::System::IntPtr> ppD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetMirrorTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pD3D11DeviceOrResource), ::il2cpp_utils::ExtractType(ppD3D11ShaderResourceView)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView));
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ReleaseMirrorTextureD3D11
void OVR::OpenVR::CVRCompositor::ReleaseMirrorTextureD3D11(::System::IntPtr pD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ReleaseMirrorTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseMirrorTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11ShaderResourceView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11ShaderResourceView);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetMirrorTextureGL
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::GetMirrorTextureGL(::OVR::OpenVR::EVREye eEye, ByRef<uint> pglTextureId, ::System::IntPtr pglSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetMirrorTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pglTextureId), ::il2cpp_utils::ExtractType(pglSharedTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.ReleaseSharedGLTexture
bool OVR::OpenVR::CVRCompositor::ReleaseSharedGLTexture(uint glTextureId, ::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::ReleaseSharedGLTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSharedGLTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glTextureId), ::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glTextureId, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.LockGLSharedTextureForAccess
void OVR::OpenVR::CVRCompositor::LockGLSharedTextureForAccess(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::LockGLSharedTextureForAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockGLSharedTextureForAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.UnlockGLSharedTextureForAccess
void OVR::OpenVR::CVRCompositor::UnlockGLSharedTextureForAccess(::System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::UnlockGLSharedTextureForAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockGLSharedTextureForAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetVulkanInstanceExtensionsRequired
uint OVR::OpenVR::CVRCompositor::GetVulkanInstanceExtensionsRequired(::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetVulkanInstanceExtensionsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVulkanInstanceExtensionsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.GetVulkanDeviceExtensionsRequired
uint OVR::OpenVR::CVRCompositor::GetVulkanDeviceExtensionsRequired(::System::IntPtr pPhysicalDevice, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::GetVulkanDeviceExtensionsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVulkanDeviceExtensionsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pPhysicalDevice), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.SetExplicitTimingMode
void OVR::OpenVR::CVRCompositor::SetExplicitTimingMode(::OVR::OpenVR::EVRCompositorTimingMode eTimingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::SetExplicitTimingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExplicitTimingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTimingMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTimingMode);
}
// Autogenerated method: OVR.OpenVR.CVRCompositor.SubmitExplicitTimingData
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::CVRCompositor::SubmitExplicitTimingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRCompositor::SubmitExplicitTimingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitExplicitTimingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRCompositorError, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVROverlay/OVR.OpenVR._PollNextOverlayEventPacked
#include "OVR/OpenVR/CVROverlay__PollNextOverlayEventPacked.hpp"
// Including type: OVR.OpenVR.CVROverlay/OVR.OpenVR.PollNextOverlayEventUnion
#include "OVR/OpenVR/CVROverlay_PollNextOverlayEventUnion.hpp"
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
// Including type: OVR.OpenVR.VRTextureBounds_t
#include "OVR/OpenVR/VRTextureBounds_t.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: OVR.OpenVR.HmdVector2_t
#include "OVR/OpenVR/HmdVector2_t.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionParams_t
#include "OVR/OpenVR/VROverlayIntersectionParams_t.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionResults_t
#include "OVR/OpenVR/VROverlayIntersectionResults_t.hpp"
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
// Including type: OVR.OpenVR.Texture_t
#include "OVR/OpenVR/Texture_t.hpp"
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
// Including type: OVR.OpenVR.HmdRect2_t
#include "OVR/OpenVR/HmdRect2_t.hpp"
// Including type: OVR.OpenVR.VROverlayIntersectionMaskPrimitive_t
#include "OVR/OpenVR/VROverlayIntersectionMaskPrimitive_t.hpp"
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVROverlay FnTable
[[deprecated]] ::OVR::OpenVR::IVROverlay& OVR::OpenVR::CVROverlay::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVROverlay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.FindOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::FindOverlay(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::FindOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.CreateOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::CreateOverlay(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::CreateOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayName), ::il2cpp_utils::ExtractType(pOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.DestroyOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::DestroyOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::DestroyOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetHighQualityOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetHighQualityOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetHighQualityOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighQualityOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetHighQualityOverlay
uint64_t OVR::OpenVR::CVROverlay::GetHighQualityOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetHighQualityOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighQualityOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayKey
uint OVR::OpenVR::CVROverlay::GetOverlayKey(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayName
uint OVR::OpenVR::CVROverlay::GetOverlayName(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayName
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayName(uint64_t ulOverlayHandle, ::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchName);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayImageData
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayImageData(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayImageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayImageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(punWidth), ::il2cpp_utils::ExtractType(punHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayErrorNameFromEnum
::StringW OVR::OpenVR::CVROverlay::GetOverlayErrorNameFromEnum(::OVR::OpenVR::EVROverlayError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayRenderingPid
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayRenderingPid(uint64_t ulOverlayHandle, uint unPID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayRenderingPid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRenderingPid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unPID)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unPID);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayRenderingPid
uint OVR::OpenVR::CVROverlay::GetOverlayRenderingPid(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayRenderingPid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayRenderingPid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayFlag
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayFlag(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, bool bEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eOverlayFlag), ::il2cpp_utils::ExtractType(bEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayFlag
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayFlag(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eOverlayFlag), ::il2cpp_utils::ExtractType(pbEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayColor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayColor(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fRed), ::il2cpp_utils::ExtractType(fGreen), ::il2cpp_utils::ExtractType(fBlue)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayColor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayColor(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfRed), ::il2cpp_utils::ExtractType(pfGreen), ::il2cpp_utils::ExtractType(pfBlue)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayAlpha
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayAlpha(uint64_t ulOverlayHandle, float fAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fAlpha)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fAlpha);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayAlpha
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayAlpha(uint64_t ulOverlayHandle, ByRef<float> pfAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfAlpha)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTexelAspect
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTexelAspect(uint64_t ulOverlayHandle, float fTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTexelAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTexelAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fTexelAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTexelAspect
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTexelAspect(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTexelAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTexelAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfTexelAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlaySortOrder
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlaySortOrder(uint64_t ulOverlayHandle, uint unSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlaySortOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlaySortOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unSortOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unSortOrder);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlaySortOrder
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlaySortOrder(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlaySortOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlaySortOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punSortOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayWidthInMeters
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayWidthInMeters(uint64_t ulOverlayHandle, float fWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayWidthInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayWidthInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fWidthInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayWidthInMeters
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayWidthInMeters(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayWidthInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayWidthInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfWidthInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayAutoCurveDistanceRangeInMeters
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayAutoCurveDistanceRangeInMeters(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayAutoCurveDistanceRangeInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayAutoCurveDistanceRangeInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fMinDistanceInMeters), ::il2cpp_utils::ExtractType(fMaxDistanceInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayAutoCurveDistanceRangeInMeters
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayAutoCurveDistanceRangeInMeters(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayAutoCurveDistanceRangeInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayAutoCurveDistanceRangeInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfMinDistanceInMeters), ::il2cpp_utils::ExtractType(pfMaxDistanceInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTextureColorSpace
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTextureColorSpace(uint64_t ulOverlayHandle, ::OVR::OpenVR::EColorSpace eTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTextureColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTextureColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTextureColorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTextureColorSpace
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTextureColorSpace(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::EColorSpace> peTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTextureColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTextureColorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTextureBounds
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTextureBounds(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTextureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTextureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pOverlayTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTextureBounds
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTextureBounds(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTextureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pOverlayTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayRenderModel
uint OVR::OpenVR::CVROverlay::GetOverlayRenderModel(uint64_t ulOverlayHandle, ::System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<::OVR::OpenVR::HmdColor_t> pColor, ByRef<::OVR::OpenVR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pColor), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayRenderModel
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayRenderModel(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<::OVR::OpenVR::HmdColor_t> pColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchRenderModel), ::il2cpp_utils::ExtractType(pColor)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTransformType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTransformType(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayTransformType> peTransformType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTransformType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTransformType)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTransformAbsolute
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTransformAbsolute(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTransformAbsolute
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTransformAbsolute(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTransformTrackedDeviceRelative
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTransformTrackedDeviceRelative(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTransformTrackedDeviceRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformTrackedDeviceRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unTrackedDevice), ::il2cpp_utils::ExtractType(pmatTrackedDeviceToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTransformTrackedDeviceRelative
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTransformTrackedDeviceRelative(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTransformTrackedDeviceRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformTrackedDeviceRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punTrackedDevice), ::il2cpp_utils::ExtractType(pmatTrackedDeviceToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTransformTrackedDeviceComponent
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTransformTrackedDeviceComponent(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTransformTrackedDeviceComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformTrackedDeviceComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTransformTrackedDeviceComponent
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTransformTrackedDeviceComponent(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTransformTrackedDeviceComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformTrackedDeviceComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTransformOverlayRelative
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTransformOverlayRelative(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTransformOverlayRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformOverlayRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTransformOverlayRelative
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTransformOverlayRelative(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTransformOverlayRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformOverlayRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ShowOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::ShowOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ShowOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.HideOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::HideOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::HideOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.IsOverlayVisible
bool OVR::OpenVR::CVROverlay::IsOverlayVisible(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::IsOverlayVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOverlayVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetTransformForOverlayCoordinates
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetTransformForOverlayCoordinates(uint64_t ulOverlayHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ::OVR::OpenVR::HmdVector2_t coordinatesInOverlay, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetTransformForOverlayCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformForOverlayCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(coordinatesInOverlay), ::il2cpp_utils::ExtractType(pmatTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.PollNextOverlayEvent
bool OVR::OpenVR::CVROverlay::PollNextOverlayEvent(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::PollNextOverlayEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextOverlayEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayInputMethod
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayInputMethod(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayInputMethod> peInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayInputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayInputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayInputMethod
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayInputMethod(uint64_t ulOverlayHandle, ::OVR::OpenVR::VROverlayInputMethod eInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayInputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayInputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMethod);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayMouseScale
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayMouseScale(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayMouseScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayMouseScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayMouseScale
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayMouseScale(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayMouseScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayMouseScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ComputeOverlayIntersection
bool OVR::OpenVR::CVROverlay::ComputeOverlayIntersection(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionParams_t> pParams, ByRef<::OVR::OpenVR::VROverlayIntersectionResults_t> pResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ComputeOverlayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeOverlayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pParams), ::il2cpp_utils::ExtractType(pResults)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.IsHoverTargetOverlay
bool OVR::OpenVR::CVROverlay::IsHoverTargetOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::IsHoverTargetOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHoverTargetOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetGamepadFocusOverlay
uint64_t OVR::OpenVR::CVROverlay::GetGamepadFocusOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetGamepadFocusOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGamepadFocusOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetGamepadFocusOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetGamepadFocusOverlay(uint64_t ulNewFocusOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetGamepadFocusOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGamepadFocusOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulNewFocusOverlay)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulNewFocusOverlay);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayNeighbor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayNeighbor(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayNeighbor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayNeighbor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom), ::il2cpp_utils::ExtractType(ulTo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom, ulTo);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.MoveGamepadFocusToNeighbor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::MoveGamepadFocusToNeighbor(::OVR::OpenVR::EOverlayDirection eDirection, uint64_t ulFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::MoveGamepadFocusToNeighbor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGamepadFocusToNeighbor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayDualAnalogTransform
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayDualAnalogTransform(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ::System::IntPtr vCenter, float fRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayDualAnalogTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayDualAnalogTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(vCenter), ::il2cpp_utils::ExtractType(fRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayDualAnalogTransform
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayDualAnalogTransform(uint64_t ulOverlay, ::OVR::OpenVR::EDualAnalogWhich eWhich, ByRef<::OVR::OpenVR::HmdVector2_t> pvCenter, ByRef<float> pfRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayDualAnalogTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayDualAnalogTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(pvCenter), ::il2cpp_utils::ExtractType(pfRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayTexture(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::Texture_t> pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ClearOverlayTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::ClearOverlayTexture(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ClearOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayRaw
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayRaw(uint64_t ulOverlayHandle, ::System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unWidth), ::il2cpp_utils::ExtractType(unHeight), ::il2cpp_utils::ExtractType(unDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayFromFile
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayFromFile(uint64_t ulOverlayHandle, ::StringW pchFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchFilePath);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTexture(uint64_t ulOverlayHandle, ByRef<::System::IntPtr> pNativeTextureHandle, ::System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<::OVR::OpenVR::ETextureType> pAPIType, ByRef<::OVR::OpenVR::EColorSpace> pColorSpace, ByRef<::OVR::OpenVR::VRTextureBounds_t> pTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(pNativeTextureRef), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(pNativeFormat), ::il2cpp_utils::ExtractType(pAPIType), ::il2cpp_utils::ExtractType(pColorSpace), ::il2cpp_utils::ExtractType(pTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ReleaseNativeOverlayHandle
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::ReleaseNativeOverlayHandle(uint64_t ulOverlayHandle, ::System::IntPtr pNativeTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ReleaseNativeOverlayHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseNativeOverlayHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayTextureSize
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayTextureSize(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.CreateDashboardOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::CreateDashboardOverlay(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::CreateDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayFriendlyName), ::il2cpp_utils::ExtractType(pMainHandle), ::il2cpp_utils::ExtractType(pThumbnailHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.IsDashboardVisible
bool OVR::OpenVR::CVROverlay::IsDashboardVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::IsDashboardVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDashboardVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.IsActiveDashboardOverlay
bool OVR::OpenVR::CVROverlay::IsActiveDashboardOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::IsActiveDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsActiveDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetDashboardOverlaySceneProcess
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetDashboardOverlaySceneProcess(uint64_t ulOverlayHandle, uint unProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetDashboardOverlaySceneProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDashboardOverlaySceneProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unProcessId);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetDashboardOverlaySceneProcess
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetDashboardOverlaySceneProcess(uint64_t ulOverlayHandle, ByRef<uint> punProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetDashboardOverlaySceneProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDashboardOverlaySceneProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ShowDashboard
void OVR::OpenVR::CVROverlay::ShowDashboard(::StringW pchOverlayToShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ShowDashboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDashboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayToShow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchOverlayToShow);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetPrimaryDashboardDevice
uint OVR::OpenVR::CVROverlay::GetPrimaryDashboardDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetPrimaryDashboardDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrimaryDashboardDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ShowKeyboard
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::ShowKeyboard(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ShowKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ShowKeyboardForOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::ShowKeyboardForOverlay(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ShowKeyboardForOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboardForOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetKeyboardText
uint OVR::OpenVR::CVROverlay::GetKeyboardText(::System::Text::StringBuilder* pchText, uint cchText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetKeyboardText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyboardText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(cchText)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchText, cchText);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.HideKeyboard
void OVR::OpenVR::CVROverlay::HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::HideKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetKeyboardTransformAbsolute
void OVR::OpenVR::CVROverlay::SetKeyboardTransformAbsolute(::OVR::OpenVR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<::OVR::OpenVR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetKeyboardTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToKeyboardTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetKeyboardPositionForOverlay
void OVR::OpenVR::CVROverlay::SetKeyboardPositionForOverlay(uint64_t ulOverlayHandle, ::OVR::OpenVR::HmdRect2_t avoidRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetKeyboardPositionForOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardPositionForOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(avoidRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulOverlayHandle, avoidRect);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.SetOverlayIntersectionMask
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::SetOverlayIntersectionMask(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::SetOverlayIntersectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayIntersectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pMaskPrimitives), ::il2cpp_utils::ExtractType(unNumMaskPrimitives), ::il2cpp_utils::ExtractType(unPrimitiveSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.GetOverlayFlags
::OVR::OpenVR::EVROverlayError OVR::OpenVR::CVROverlay::GetOverlayFlags(uint64_t ulOverlayHandle, ByRef<uint> pFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::GetOverlayFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags));
}
// Autogenerated method: OVR.OpenVR.CVROverlay.ShowMessageOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::CVROverlay::ShowMessageOverlay(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::ShowMessageOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMessageOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(pchCaption), ::il2cpp_utils::ExtractType(pchButton0Text), ::il2cpp_utils::ExtractType(pchButton1Text), ::il2cpp_utils::ExtractType(pchButton2Text), ::il2cpp_utils::ExtractType(pchButton3Text)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::VRMessageOverlayResponse, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text);
}
// Autogenerated method: OVR.OpenVR.CVROverlay.CloseMessageOverlay
void OVR::OpenVR::CVROverlay::CloseMessageOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::CloseMessageOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseMessageOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVROverlay/OVR.OpenVR._PollNextOverlayEventPacked
#include "OVR/OpenVR/CVROverlay__PollNextOverlayEventPacked.hpp"
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVROverlay/OVR.OpenVR._PollNextOverlayEventPacked.Invoke
bool OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::Invoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: OVR.OpenVR.CVROverlay/OVR.OpenVR._PollNextOverlayEventPacked.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::BeginInvoke(uint64_t ulOverlayHandle, ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, uint uncbVREvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: OVR.OpenVR.CVROverlay/OVR.OpenVR._PollNextOverlayEventPacked.EndInvoke
bool OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::EndInvoke(ByRef<::OVR::OpenVR::VREvent_t_Packed> pEvent, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVROverlay::_PollNextOverlayEventPacked*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRRenderModels/OVR.OpenVR._GetComponentStatePacked
#include "OVR/OpenVR/CVRRenderModels__GetComponentStatePacked.hpp"
// Including type: OVR.OpenVR.CVRRenderModels/OVR.OpenVR.GetComponentStateUnion
#include "OVR/OpenVR/CVRRenderModels_GetComponentStateUnion.hpp"
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRRenderModels FnTable
[[deprecated]] ::OVR::OpenVR::IVRRenderModels& OVR::OpenVR::CVRRenderModels::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRRenderModels*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.LoadRenderModel_Async
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::CVRRenderModels::LoadRenderModel_Async(::StringW pchRenderModelName, ByRef<::System::IntPtr> ppRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::LoadRenderModel_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRenderModel_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(ppRenderModel)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.FreeRenderModel
void OVR::OpenVR::CVRRenderModels::FreeRenderModel(::System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::FreeRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.LoadTexture_Async
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::CVRRenderModels::LoadTexture_Async(int textureId, ByRef<::System::IntPtr> ppTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::LoadTexture_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTexture_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(ppTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, byref(ppTexture));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.FreeTexture
void OVR::OpenVR::CVRRenderModels::FreeTexture(::System::IntPtr pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::FreeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTexture);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.LoadTextureD3D11_Async
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::CVRRenderModels::LoadTextureD3D11_Async(int textureId, ::System::IntPtr pD3D11Device, ByRef<::System::IntPtr> ppD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::LoadTextureD3D11_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTextureD3D11_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pD3D11Device), ::il2cpp_utils::ExtractType(ppD3D11Texture2D)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.LoadIntoTextureD3D11_Async
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::CVRRenderModels::LoadIntoTextureD3D11_Async(int textureId, ::System::IntPtr pDstTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::LoadIntoTextureD3D11_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoTextureD3D11_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pDstTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRRenderModelError, false>(this, ___internal__method, textureId, pDstTexture);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.FreeTextureD3D11
void OVR::OpenVR::CVRRenderModels::FreeTextureD3D11(::System::IntPtr pD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::FreeTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11Texture2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11Texture2D);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetRenderModelName
uint OVR::OpenVR::CVRRenderModels::GetRenderModelName(uint unRenderModelIndex, ::System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetRenderModelName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unRenderModelIndex), ::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetRenderModelCount
uint OVR::OpenVR::CVRRenderModels::GetRenderModelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetRenderModelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentCount
uint OVR::OpenVR::CVRRenderModels::GetComponentCount(::StringW pchRenderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentName
uint OVR::OpenVR::CVRRenderModels::GetComponentName(::StringW pchRenderModelName, uint unComponentIndex, ::System::Text::StringBuilder* pchComponentName, uint unComponentNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unComponentIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentButtonMask
uint64_t OVR::OpenVR::CVRRenderModels::GetComponentButtonMask(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentButtonMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentButtonMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentRenderModelName
uint OVR::OpenVR::CVRRenderModels::GetComponentRenderModelName(::StringW pchRenderModelName, ::StringW pchComponentName, ::System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentRenderModelName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentRenderModelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pchComponentRenderModelName), ::il2cpp_utils::ExtractType(unComponentRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentStateForDevicePath
bool OVR::OpenVR::CVRRenderModels::GetComponentStateForDevicePath(::StringW pchRenderModelName, ::StringW pchComponentName, uint64_t devicePath, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentStateForDevicePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentStateForDevicePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(devicePath), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, devicePath, byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetComponentState
bool OVR::OpenVR::CVRRenderModels::GetComponentState(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetComponentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.RenderModelHasComponent
bool OVR::OpenVR::CVRRenderModels::RenderModelHasComponent(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::RenderModelHasComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderModelHasComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetRenderModelThumbnailURL
uint OVR::OpenVR::CVRRenderModels::GetRenderModelThumbnailURL(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetRenderModelThumbnailURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelThumbnailURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchThumbnailURL), ::il2cpp_utils::ExtractType(unThumbnailURLLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetRenderModelOriginalPath
uint OVR::OpenVR::CVRRenderModels::GetRenderModelOriginalPath(::StringW pchRenderModelName, ::System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<::OVR::OpenVR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetRenderModelOriginalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelOriginalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchOriginalPath), ::il2cpp_utils::ExtractType(unOriginalPathLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels.GetRenderModelErrorNameFromEnum
::StringW OVR::OpenVR::CVRRenderModels::GetRenderModelErrorNameFromEnum(::OVR::OpenVR::EVRRenderModelError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::GetRenderModelErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRRenderModels/OVR.OpenVR._GetComponentStatePacked
#include "OVR/OpenVR/CVRRenderModels__GetComponentStatePacked.hpp"
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_ControllerMode_State_t
#include "OVR/OpenVR/RenderModel_ControllerMode_State_t.hpp"
// Including type: OVR.OpenVR.RenderModel_ComponentState_t
#include "OVR/OpenVR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRRenderModels/OVR.OpenVR._GetComponentStatePacked.Invoke
bool OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels/OVR.OpenVR._GetComponentStatePacked.BeginInvoke
::System::IAsyncResult* OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: OVR.OpenVR.CVRRenderModels/OVR.OpenVR._GetComponentStatePacked.EndInvoke
bool OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::EndInvoke(ByRef<::OVR::OpenVR::VRControllerState_t_Packed> pControllerState, ByRef<::OVR::OpenVR::RenderModel_ControllerMode_State_t> pState, ByRef<::OVR::OpenVR::RenderModel_ComponentState_t> pComponentState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::OpenVR::CVRRenderModels::_GetComponentStatePacked*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRNotifications
#include "OVR/OpenVR/CVRNotifications.hpp"
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
// Including type: OVR.OpenVR.NotificationBitmap_t
#include "OVR/OpenVR/NotificationBitmap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRNotifications FnTable
[[deprecated]] ::OVR::OpenVR::IVRNotifications& OVR::OpenVR::CVRNotifications::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRNotifications::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRNotifications*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRNotifications.CreateNotification
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::CVRNotifications::CreateNotification(uint64_t ulOverlayHandle, uint64_t ulUserValue, ::OVR::OpenVR::EVRNotificationType type, ::StringW pchText, ::OVR::OpenVR::EVRNotificationStyle style, ByRef<::OVR::OpenVR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRNotifications::CreateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulUserValue), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(pImage), ::il2cpp_utils::ExtractType(pNotificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId));
}
// Autogenerated method: OVR.OpenVR.CVRNotifications.RemoveNotification
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::CVRNotifications::RemoveNotification(uint notificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRNotifications::RemoveNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRNotificationError, false>(this, ___internal__method, notificationId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRSettings FnTable
[[deprecated]] ::OVR::OpenVR::IVRSettings& OVR::OpenVR::CVRSettings::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRSettings.GetSettingsErrorNameFromEnum
::StringW OVR::OpenVR::CVRSettings::GetSettingsErrorNameFromEnum(::OVR::OpenVR::EVRSettingsError eError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::GetSettingsErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSettingsErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eError);
}
// Autogenerated method: OVR.OpenVR.CVRSettings.Sync
bool OVR::OpenVR::CVRSettings::Sync(bool bForce, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bForce, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.SetBool
void OVR::OpenVR::CVRSettings::SetBool(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(bValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.SetInt32
void OVR::OpenVR::CVRSettings::SetInt32(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::SetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(nValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.SetFloat
void OVR::OpenVR::CVRSettings::SetFloat(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(flValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.SetString
void OVR::OpenVR::CVRSettings::SetString(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.GetBool
bool OVR::OpenVR::CVRSettings::GetBool(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.GetInt32
int OVR::OpenVR::CVRSettings::GetInt32(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.GetFloat
float OVR::OpenVR::CVRSettings::GetFloat(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.GetString
void OVR::OpenVR::CVRSettings::GetString(::StringW pchSection, ::StringW pchSettingsKey, ::System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unValueLen), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.RemoveSection
void OVR::OpenVR::CVRSettings::RemoveSection(::StringW pchSection, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::RemoveSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, byref(peError));
}
// Autogenerated method: OVR.OpenVR.CVRSettings.RemoveKeyInSection
void OVR::OpenVR::CVRSettings::RemoveKeyInSection(::StringW pchSection, ::StringW pchSettingsKey, ByRef<::OVR::OpenVR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSettings::RemoveKeyInSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRScreenshots FnTable
[[deprecated]] ::OVR::OpenVR::IVRScreenshots& OVR::OpenVR::CVRScreenshots::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRScreenshots*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.RequestScreenshot
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::CVRScreenshots::RequestScreenshot(ByRef<uint> pOutScreenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::RequestScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.HookScreenshot
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::CVRScreenshots::HookScreenshot(::ArrayW<::OVR::OpenVR::EVRScreenshotType> pSupportedTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::HookScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HookScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSupportedTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, pSupportedTypes);
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.GetScreenshotPropertyType
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::CVRScreenshots::GetScreenshotPropertyType(uint screenshotHandle, ByRef<::OVR::OpenVR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::GetScreenshotPropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenshotPropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotType, false>(this, ___internal__method, screenshotHandle, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.GetScreenshotPropertyFilename
uint OVR::OpenVR::CVRScreenshots::GetScreenshotPropertyFilename(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotPropertyFilenames filenameType, ::System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<::OVR::OpenVR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::GetScreenshotPropertyFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenshotPropertyFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(filenameType), ::il2cpp_utils::ExtractType(pchFilename), ::il2cpp_utils::ExtractType(cchFilename), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError));
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.UpdateScreenshotProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::CVRScreenshots::UpdateScreenshotProgress(uint screenshotHandle, float flProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::UpdateScreenshotProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScreenshotProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(flProgress)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, flProgress);
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.TakeStereoScreenshot
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::CVRScreenshots::TakeStereoScreenshot(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::TakeStereoScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeStereoScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: OVR.OpenVR.CVRScreenshots.SubmitScreenshot
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::CVRScreenshots::SubmitScreenshot(uint screenshotHandle, ::OVR::OpenVR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRScreenshots::SubmitScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchSourcePreviewFilename), ::il2cpp_utils::ExtractType(pchSourceVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRResources
#include "OVR/OpenVR/CVRResources.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRResources FnTable
[[deprecated]] ::OVR::OpenVR::IVRResources& OVR::OpenVR::CVRResources::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRResources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRResources.LoadSharedResource
uint OVR::OpenVR::CVRResources::LoadSharedResource(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::LoadSharedResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSharedResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRResources.GetResourceFullPath
uint OVR::OpenVR::CVRResources::GetResourceFullPath(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, ::System::Text::StringBuilder* pchPathBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::GetResourceFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResourceFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchResourceTypeDirectory), ::il2cpp_utils::ExtractType(pchPathBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRDriverManager
#include "OVR/OpenVR/CVRDriverManager.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRDriverManager FnTable
[[deprecated]] ::OVR::OpenVR::IVRDriverManager& OVR::OpenVR::CVRDriverManager::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRDriverManager*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverCount
uint OVR::OpenVR::CVRDriverManager::GetDriverCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverName
uint OVR::OpenVR::CVRDriverManager::GetDriverName(uint nDriver, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDriver), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverHandle
uint64_t OVR::OpenVR::CVRDriverManager::GetDriverHandle(::StringW pchDriverName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchDriverName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchDriverName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputDigitalActionData_t
#include "OVR/OpenVR/InputDigitalActionData_t.hpp"
// Including type: OVR.OpenVR.InputAnalogActionData_t
#include "OVR/OpenVR/InputAnalogActionData_t.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.InputPoseActionData_t
#include "OVR/OpenVR/InputPoseActionData_t.hpp"
// Including type: OVR.OpenVR.InputSkeletalActionData_t
#include "OVR/OpenVR/InputSkeletalActionData_t.hpp"
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRInput FnTable
[[deprecated]] ::OVR::OpenVR::IVRInput& OVR::OpenVR::CVRInput::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRInput*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRInput.SetActionManifestPath
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::SetActionManifestPath(::StringW pchActionManifestPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::SetActionManifestPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActionManifestPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionManifestPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionManifestPath);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionSetHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionSetHandle(::StringW pchActionSetName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionSetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionSetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionSetName), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionSetName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionHandle(::StringW pchActionName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionName), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetInputSourceHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetInputSourceHandle(::StringW pchInputSourcePath, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetInputSourceHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputSourceHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInputSourcePath), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchInputSourcePath, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.UpdateActionState
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::UpdateActionState(::ArrayW<::OVR::OpenVR::VRActiveActionSet_t> pSets, uint unSizeOfVRSelectedActionSet_t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::UpdateActionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSets), ::il2cpp_utils::ExtractType(unSizeOfVRSelectedActionSet_t)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pSets, unSizeOfVRSelectedActionSet_t);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetDigitalActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetDigitalActionData(uint64_t action, ByRef<::OVR::OpenVR::InputDigitalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetDigitalActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigitalActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetAnalogActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetAnalogActionData(uint64_t action, ByRef<::OVR::OpenVR::InputAnalogActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetAnalogActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnalogActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetPoseActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetPoseActionData(uint64_t action, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ByRef<::OVR::OpenVR::InputPoseActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetPoseActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(fPredictedSecondsFromNow), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eOrigin, fPredictedSecondsFromNow, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalActionData(uint64_t action, ByRef<::OVR::OpenVR::InputSkeletalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalBoneData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalBoneData(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::ArrayW<::OVR::OpenVR::VRBoneTransform_t> pTransformArray, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eTransformSpace), ::il2cpp_utils::ExtractType(eMotionRange), ::il2cpp_utils::ExtractType(pTransformArray), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pTransformArray, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalBoneDataCompressed
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalBoneDataCompressed(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::System::IntPtr pvCompressedData, uint unCompressedSize, ByRef<uint> punRequiredCompressedSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalBoneDataCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalBoneDataCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eTransformSpace), ::il2cpp_utils::ExtractType(eMotionRange), ::il2cpp_utils::ExtractType(pvCompressedData), ::il2cpp_utils::ExtractType(unCompressedSize), ::il2cpp_utils::ExtractType(punRequiredCompressedSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pvCompressedData, unCompressedSize, byref(punRequiredCompressedSize), ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.DecompressSkeletalBoneData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::DecompressSkeletalBoneData(::System::IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ByRef<::OVR::OpenVR::EVRSkeletalTransformSpace> peTransformSpace, ::ArrayW<::OVR::OpenVR::VRBoneTransform_t> pTransformArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::DecompressSkeletalBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecompressSkeletalBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvCompressedBuffer), ::il2cpp_utils::ExtractType(unCompressedBufferSize), ::il2cpp_utils::ExtractType(peTransformSpace), ::il2cpp_utils::ExtractType(pTransformArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pvCompressedBuffer, unCompressedBufferSize, byref(peTransformSpace), pTransformArray);
}
// Autogenerated method: OVR.OpenVR.CVRInput.TriggerHapticVibrationAction
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::TriggerHapticVibrationAction(uint64_t action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::TriggerHapticVibrationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticVibrationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(fStartSecondsFromNow), ::il2cpp_utils::ExtractType(fDurationSeconds), ::il2cpp_utils::ExtractType(fFrequency), ::il2cpp_utils::ExtractType(fAmplitude), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionOrigins
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionOrigins(uint64_t actionSetHandle, uint64_t digitalActionHandle, ::ArrayW<uint64_t> originsOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionOrigins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionOrigins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionSetHandle), ::il2cpp_utils::ExtractType(digitalActionHandle), ::il2cpp_utils::ExtractType(originsOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, digitalActionHandle, originsOut);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetOriginLocalizedName
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetOriginLocalizedName(uint64_t origin, ::System::Text::StringBuilder* pchNameArray, uint unNameArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetOriginLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(pchNameArray), ::il2cpp_utils::ExtractType(unNameArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, pchNameArray, unNameArraySize);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetOriginTrackedDeviceInfo
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetOriginTrackedDeviceInfo(uint64_t origin, ByRef<::OVR::OpenVR::InputOriginInfo_t> pOriginInfo, uint unOriginInfoSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetOriginTrackedDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginTrackedDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(pOriginInfo), ::il2cpp_utils::ExtractType(unOriginInfoSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, byref(pOriginInfo), unOriginInfoSize);
}
// Autogenerated method: OVR.OpenVR.CVRInput.ShowActionOrigins
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::ShowActionOrigins(uint64_t actionSetHandle, uint64_t ulActionHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::ShowActionOrigins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowActionOrigins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionSetHandle), ::il2cpp_utils::ExtractType(ulActionHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, ulActionHandle);
}
// Autogenerated method: OVR.OpenVR.CVRInput.ShowBindingsForActionSet
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::ShowBindingsForActionSet(::ArrayW<::OVR::OpenVR::VRActiveActionSet_t> pSets, uint unSizeOfVRSelectedActionSet_t, uint64_t originToHighlight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::ShowBindingsForActionSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowBindingsForActionSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSets), ::il2cpp_utils::ExtractType(unSizeOfVRSelectedActionSet_t), ::il2cpp_utils::ExtractType(originToHighlight)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pSets, unSizeOfVRSelectedActionSet_t, originToHighlight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRIOBuffer
#include "OVR/OpenVR/CVRIOBuffer.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRIOBuffer FnTable
[[deprecated]] ::OVR::OpenVR::IVRIOBuffer& OVR::OpenVR::CVRIOBuffer::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRIOBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Open
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Open(::StringW pchPath, ::OVR::OpenVR::EIOBufferMode mode, uint unElementSize, uint unElements, ByRef<uint64_t> pulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchPath), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(unElementSize), ::il2cpp_utils::ExtractType(unElements), ::il2cpp_utils::ExtractType(pulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, pchPath, mode, unElementSize, unElements, byref(pulBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Close
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Close(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Read
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Read(uint64_t ulBuffer, ::System::IntPtr pDst, uint unBytes, ByRef<uint> punRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(unBytes), ::il2cpp_utils::ExtractType(punRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pDst, unBytes, byref(punRead));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Write
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Write(uint64_t ulBuffer, ::System::IntPtr pSrc, uint unBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer), ::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(unBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pSrc, unBytes);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.PropertyContainer
uint64_t OVR::OpenVR::CVRIOBuffer::PropertyContainer(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::PropertyContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PropertyContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.SpatialAnchorPose_t
#include "OVR/OpenVR/SpatialAnchorPose_t.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRSpatialAnchors FnTable
[[deprecated]] ::OVR::OpenVR::IVRSpatialAnchors& OVR::OpenVR::CVRSpatialAnchors::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRSpatialAnchors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.CreateSpatialAnchorFromDescriptor
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromDescriptor(::StringW pchDescriptor, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSpatialAnchorFromDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchDescriptor), ::il2cpp_utils::ExtractType(pHandleOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, pchDescriptor, byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.CreateSpatialAnchorFromPose
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromPose(uint unDeviceIndex, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPose, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSpatialAnchorFromPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pPose), ::il2cpp_utils::ExtractType(pHandleOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unDeviceIndex, eOrigin, byref(pPose), byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.GetSpatialAnchorPose
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorPose(uint unHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPoseOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpatialAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pPoseOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, eOrigin, byref(pPoseOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.GetSpatialAnchorDescriptor
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorDescriptor(uint unHandle, ::System::Text::StringBuilder* pchDescriptorOut, ByRef<uint> punDescriptorBufferLenInOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpatialAnchorDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(pchDescriptorOut), ::il2cpp_utils::ExtractType(punDescriptorBufferLenInOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, pchDescriptorOut, byref(punDescriptorBufferLenInOut));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVRInterop
#include "OVR/OpenVR/OpenVRInterop.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.OpenVRInterop.InitInternal
uint OVR::OpenVR::OpenVRInterop::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.InitInternal2
uint OVR::OpenVR::OpenVRInterop::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ByRef<::StringW> pStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, byref(pStartupInfo));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.ShutdownInternal
void OVR::OpenVR::OpenVRInterop::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsHmdPresent
bool OVR::OpenVR::OpenVRInterop::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsRuntimeInstalled
bool OVR::OpenVR::OpenVRInterop::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetStringForHmdError
::System::IntPtr OVR::OpenVR::OpenVRInterop::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVRInterop::GetGenericInterface(ByRef<::StringW> pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion), byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVRInterop::IsInterfaceVersionValid(ByRef<::StringW> pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetInitToken
uint OVR::OpenVR::OpenVRInterop::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREye Eye_Left
::OVR::OpenVR::EVREye OVR::OpenVR::EVREye::_get_Eye_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_get_Eye_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREye>("OVR.OpenVR", "EVREye", "Eye_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREye Eye_Left
void OVR::OpenVR::EVREye::_set_Eye_Left(::OVR::OpenVR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_set_Eye_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREye", "Eye_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREye Eye_Right
::OVR::OpenVR::EVREye OVR::OpenVR::EVREye::_get_Eye_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_get_Eye_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREye>("OVR.OpenVR", "EVREye", "Eye_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREye Eye_Right
void OVR::OpenVR::EVREye::_set_Eye_Right(::OVR::OpenVR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_set_Eye_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREye", "Eye_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVREye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Invalid
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Invalid
void OVR::OpenVR::ETextureType::_set_Invalid(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DirectX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX
void OVR::OpenVR::ETextureType::_set_DirectX(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DirectX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType OpenGL
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_OpenGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_OpenGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "OpenGL"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType OpenGL
void OVR::OpenVR::ETextureType::_set_OpenGL(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_OpenGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "OpenGL", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Vulkan
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Vulkan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Vulkan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Vulkan"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Vulkan
void OVR::OpenVR::ETextureType::_set_Vulkan(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Vulkan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Vulkan", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType IOSurface
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_IOSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_IOSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "IOSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType IOSurface
void OVR::OpenVR::ETextureType::_set_IOSurface(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_IOSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "IOSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX12
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DirectX12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX12"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX12
void OVR::OpenVR::ETextureType::_set_DirectX12(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DirectX12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX12", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DXGISharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DXGISharedHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DXGISharedHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
void OVR::OpenVR::ETextureType::_set_DXGISharedHandle(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DXGISharedHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DXGISharedHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Metal
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Metal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Metal
void OVR::OpenVR::ETextureType::_set_Metal(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Metal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETextureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Auto
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Auto
void OVR::OpenVR::EColorSpace::_set_Auto(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Gamma
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Gamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Gamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Gamma"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Gamma
void OVR::OpenVR::EColorSpace::_set_Gamma(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Gamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Gamma", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Linear
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Linear
void OVR::OpenVR::EColorSpace::_set_Linear(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Linear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackingResult
#include "OVR/OpenVR/ETrackingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Uninitialized
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Uninitialized
void OVR::OpenVR::ETrackingResult::_set_Uninitialized(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Calibrating_InProgress
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Calibrating_InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Calibrating_InProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Calibrating_InProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Calibrating_InProgress
void OVR::OpenVR::ETrackingResult::_set_Calibrating_InProgress(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Calibrating_InProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Calibrating_InProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Calibrating_OutOfRange
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Calibrating_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Calibrating_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Calibrating_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Calibrating_OutOfRange
void OVR::OpenVR::ETrackingResult::_set_Calibrating_OutOfRange(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Calibrating_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Calibrating_OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Running_OK
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Running_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Running_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Running_OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Running_OK
void OVR::OpenVR::ETrackingResult::_set_Running_OK(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Running_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Running_OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Running_OutOfRange
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Running_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Running_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Running_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Running_OutOfRange
void OVR::OpenVR::ETrackingResult::_set_Running_OutOfRange(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Running_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Running_OutOfRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackingResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedDeviceClass
#include "OVR/OpenVR/ETrackedDeviceClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Invalid
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Invalid
void OVR::OpenVR::ETrackedDeviceClass::_set_Invalid(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass HMD
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_HMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_HMD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "HMD"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass HMD
void OVR::OpenVR::ETrackedDeviceClass::_set_HMD(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_HMD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "HMD", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Controller
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Controller
void OVR::OpenVR::ETrackedDeviceClass::_set_Controller(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Controller", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass GenericTracker
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_GenericTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_GenericTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "GenericTracker"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass GenericTracker
void OVR::OpenVR::ETrackedDeviceClass::_set_GenericTracker(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_GenericTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "GenericTracker", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass TrackingReference
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass TrackingReference
void OVR::OpenVR::ETrackedDeviceClass::_set_TrackingReference(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass DisplayRedirect
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_DisplayRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_DisplayRedirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "DisplayRedirect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass DisplayRedirect
void OVR::OpenVR::ETrackedDeviceClass::_set_DisplayRedirect(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_DisplayRedirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "DisplayRedirect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Max
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Max
void OVR::OpenVR::ETrackedDeviceClass::_set_Max(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackedDeviceClass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedControllerRole
#include "OVR/OpenVR/ETrackedControllerRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole Invalid
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole Invalid
void OVR::OpenVR::ETrackedControllerRole::_set_Invalid(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole LeftHand
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole LeftHand
void OVR::OpenVR::ETrackedControllerRole::_set_LeftHand(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole RightHand
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole RightHand
void OVR::OpenVR::ETrackedControllerRole::_set_RightHand(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole OptOut
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_OptOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_OptOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "OptOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole OptOut
void OVR::OpenVR::ETrackedControllerRole::_set_OptOut(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_OptOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "OptOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole Max
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole Max
void OVR::OpenVR::ETrackedControllerRole::_set_Max(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackedControllerRole::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseSeated
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseSeated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseSeated
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseSeated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseStanding
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseStanding"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseStanding
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseStanding", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackingUniverseOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Invalid
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Invalid
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Invalid(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingSystemName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingSystemName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModelNumber_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModelNumber_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SerialNumber_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SerialNumber_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RenderModelName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RenderModelName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RenderModelName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RenderModelName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ManufacturerName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ManufacturerName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceClass_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceClass_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCamera_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCamera_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverVersion_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverVersion_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ResourceRoot_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ResourceRoot_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InputProfilePath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InputProfilePath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NeverTracked_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NeverTracked_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NeverTracked_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NeverTracked_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NeverTracked_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NeverTracked_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NeverTracked_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NeverTracked_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NumCameras_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NumCameras_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NumCameras_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NumCameras_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NumCameras_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NumCameras_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NumCameras_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NumCameras_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFrameLayout_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFrameLayout_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFrameLayout_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFrameLayout_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFrameLayout_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFrameLayout_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFrameLayout_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFrameLayout_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidProductID_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidProductID_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCImage_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCImage_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DistortionMeshResolution_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DistortionMeshResolution_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DistortionMeshResolution_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DistortionMeshResolution_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DistortionMeshResolution_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DistortionMeshResolution_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DistortionMeshResolution_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DistortionMeshResolution_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_MinimumIpdStepMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_MinimumIpdStepMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_MinimumIpdStepMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_MinimumIpdStepMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_MinimumIpdStepMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_MinimumIpdStepMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_MinimumIpdStepMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_MinimumIpdStepMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioBridgeFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioBridgeFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioBridgeFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioBridgeFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioBridgeFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioBridgeFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioBridgeFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioBridgeFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImageBridgeFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImageBridgeFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImageBridgeFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImageBridgeFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImageBridgeFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImageBridgeFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImageBridgeFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImageBridgeFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuToHeadTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuToHeadTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuToHeadTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuToHeadTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuToHeadTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuToHeadTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuToHeadTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuToHeadTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroBias_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroBias_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroBias_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroBias_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroBias_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroBias_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroBias_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroBias_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroScale_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroScale_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroScale_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroScale_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroScale_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroScale_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroScale_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroScale_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerBias_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerBias_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerBias_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerBias_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerBias_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerBias_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerBias_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerBias_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerScale_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerScale_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerScale_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerScale_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerScale_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerScale_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerScale_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerScale_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConfigurationIncludesLighthouse20Features_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConfigurationIncludesLighthouse20Features_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConfigurationIncludesLighthouse20Features_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConfigurationIncludesLighthouse20Features_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConfigurationIncludesLighthouse20Features_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConfigurationIncludesLighthouse20Features_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConfigurationIncludesLighthouse20Features_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConfigurationIncludesLighthouse20Features_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraCorrectionMode_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraCorrectionMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraCorrectionMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraCorrectionMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraCorrectionMode_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraCorrectionMode_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraCorrectionMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraCorrectionMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerLeft_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerLeft_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerLeft_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerLeft_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerLeft_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerLeft_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerLeft_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerLeft_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerRight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerRight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerRight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerRight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerRight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerRight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerRight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerRight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerTop_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerTop_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerTop_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerTop_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerTop_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerTop_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerTop_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerTop_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerBottom_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerBottom_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerBottom_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerBottom_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerBottom_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerBottom_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerBottom_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerBottom_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterLeft_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterLeft_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterLeft_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterLeft_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterLeft_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterLeft_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterLeft_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterLeft_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterRight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterRight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterRight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterRight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterRight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterRight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterRight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterRight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterTop_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterTop_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterTop_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterTop_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterTop_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterTop_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterTop_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterTop_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterBottom_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterBottom_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterBottom_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterBottom_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterBottom_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterBottom_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterBottom_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterBottom_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis0Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis0Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis1Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis1Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis2Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis2Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis3Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis3Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis4Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis4Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModeLabel_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModeLabel_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModeLabel_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModeLabel_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IconPathName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IconPathName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IconPathName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IconPathName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IconPathName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IconPathName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IconPathName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IconPathName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentContainer
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentContainer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentContainer
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentContainer(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentContainer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserConfigPath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserConfigPath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InstallPath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InstallPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InstallPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InstallPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InstallPath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InstallPath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InstallPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InstallPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasSpatialAnchorsSupport_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasSpatialAnchorsSupport_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasSpatialAnchorsSupport_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasSpatialAnchorsSupport_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasSpatialAnchorsSupport_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasSpatialAnchorsSupport_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasSpatialAnchorsSupport_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasSpatialAnchorsSupport_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerType_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerType_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerType_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackedDeviceProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedPropertyError
#include "OVR/OpenVR/ETrackedPropertyError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ETrackedPropertyError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSubmitFlags
#include "OVR/OpenVR/EVRSubmitFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRSubmitFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRState
#include "OVR/OpenVR/EVRState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Undefined
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Undefined
void OVR::OpenVR::EVRState::_set_Undefined(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Off
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Off
void OVR::OpenVR::EVRState::_set_Off(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching
void OVR::OpenVR::EVRState::_set_Searching(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching_Alert
void OVR::OpenVR::EVRState::_set_Searching_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready
void OVR::OpenVR::EVRState::_set_Ready(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert
void OVR::OpenVR::EVRState::_set_Ready_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState NotReady
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_NotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_NotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "NotReady"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState NotReady
void OVR::OpenVR::EVRState::_set_NotReady(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_NotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "NotReady", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Standby
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Standby
void OVR::OpenVR::EVRState::_set_Standby(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Standby", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert_Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
void OVR::OpenVR::EVRState::_set_Ready_Alert_Low(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert_Low", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVREventType
#include "OVR/OpenVR/EVREventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_None
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_None
void OVR::OpenVR::EVREventType::_set_VREvent_None(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
void OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
void OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
void OVR::OpenVR::EVREventType::_set_VREvent_MouseMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
void OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
void OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Scroll"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
void OVR::OpenVR::EVREventType::_set_VREvent_Scroll(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
void OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RenderToast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RenderToast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RenderToast"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
void OVR::OpenVR::EVREventType::_set_VREvent_RenderToast(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RenderToast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RenderToast", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
void OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
void OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
void OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Quit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Quit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Quit
void OVR::OpenVR::EVREventType::_set_VREvent_Quit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Quit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
void OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
void OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
void OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVREventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDeviceActivityLevel
#include "OVR/OpenVR/EDeviceActivityLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EDeviceActivityLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRButtonId
#include "OVR/OpenVR/EVRButtonId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_System"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
void OVR::OpenVR::EVRButtonId::_set_k_EButton_System(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_System", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Max(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRButtonId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMouseButton
#include "OVR/OpenVR/EVRMouseButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Left
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Left
void OVR::OpenVR::EVRMouseButton::_set_Left(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Right
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Right
void OVR::OpenVR::EVRMouseButton::_set_Right(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Middle
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Middle
void OVR::OpenVR::EVRMouseButton::_set_Middle(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRMouseButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EDualAnalogWhich::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError None
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError None
void OVR::OpenVR::EVRInputError::_set_None(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NameNotFound
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NameNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NameNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NameNotFound
void OVR::OpenVR::EVRInputError::_set_NameNotFound(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NameNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError WrongType
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_WrongType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_WrongType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "WrongType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError WrongType
void OVR::OpenVR::EVRInputError::_set_WrongType(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_WrongType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "WrongType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidHandle
void OVR::OpenVR::EVRInputError::_set_InvalidHandle(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidParam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidParam
void OVR::OpenVR::EVRInputError::_set_InvalidParam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoSteam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoSteam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoSteam
void OVR::OpenVR::EVRInputError::_set_NoSteam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoSteam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MaxCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MaxCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MaxCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
void OVR::OpenVR::EVRInputError::_set_MaxCapacityReached(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MaxCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MaxCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError IPCError
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_IPCError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_IPCError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "IPCError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError IPCError
void OVR::OpenVR::EVRInputError::_set_IPCError(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_IPCError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "IPCError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoActiveActionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoActiveActionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoActiveActionSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
void OVR::OpenVR::EVRInputError::_set_NoActiveActionSet(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoActiveActionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoActiveActionSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidDevice
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidDevice
void OVR::OpenVR::EVRInputError::_set_InvalidDevice(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
void OVR::OpenVR::EVRInputError::_set_InvalidSkeleton(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidBoneCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidBoneCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidBoneCount"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
void OVR::OpenVR::EVRInputError::_set_InvalidBoneCount(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidBoneCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidBoneCount", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidCompressedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidCompressedData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
void OVR::OpenVR::EVRInputError::_set_InvalidCompressedData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidCompressedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidCompressedData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoData
void OVR::OpenVR::EVRInputError::_set_NoData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
void OVR::OpenVR::EVRInputError::_set_BufferTooSmall(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
void OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MissingSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MissingSkeletonData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MissingSkeletonData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
void OVR::OpenVR::EVRInputError::_set_MissingSkeletonData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MissingSkeletonData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MissingSkeletonData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRInputError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
void OVR::OpenVR::EVRSpatialAnchorError::_set_Success(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
void OVR::OpenVR::EVRSpatialAnchorError::_set_Internal(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
void OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
void OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
void OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
void OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRSpatialAnchorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EHiddenAreaMeshType
#include "OVR/OpenVR/EHiddenAreaMeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EHiddenAreaMeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerAxisType
#include "OVR/OpenVR/EVRControllerAxisType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRControllerAxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerEventOutputType
#include "OVR/OpenVR/EVRControllerEventOutputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRControllerEventOutputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ECollisionBoundsStyle
#include "OVR/OpenVR/ECollisionBoundsStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ECollisionBoundsStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError None
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError None
void OVR::OpenVR::EVROverlayError::_set_None(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnknownOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnknownOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnknownOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
void OVR::OpenVR::EVROverlayError::_set_UnknownOverlay(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnknownOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnknownOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
void OVR::OpenVR::EVROverlayError::_set_InvalidHandle(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
void OVR::OpenVR::EVROverlayError::_set_PermissionDenied(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
void OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
void OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
void OVR::OpenVR::EVROverlayError::_set_KeyTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NameTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NameTooLong
void OVR::OpenVR::EVROverlayError::_set_NameTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongTransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongTransformType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongTransformType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
void OVR::OpenVR::EVROverlayError::_set_WrongTransformType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongTransformType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongTransformType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
void OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
void OVR::OpenVR::EVROverlayError::_set_InvalidParameter(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
void OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
void OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError RequestFailed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError RequestFailed
void OVR::OpenVR::EVROverlayError::_set_RequestFailed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
void OVR::OpenVR::EVROverlayError::_set_InvalidTexture(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
void OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NoNeighbor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NoNeighbor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NoNeighbor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
void OVR::OpenVR::EVROverlayError::_set_NoNeighbor(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NoNeighbor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NoNeighbor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
void OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
void OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
void OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
void OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureNotLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureNotLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureNotLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
void OVR::OpenVR::EVROverlayError::_set_TextureNotLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureNotLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureNotLocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVROverlayError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRFirmwareError
#include "OVR/OpenVR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError None
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError None
void OVR::OpenVR::EVRFirmwareError::_set_None(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Success
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Success
void OVR::OpenVR::EVRFirmwareError::_set_Success(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Fail
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Fail
void OVR::OpenVR::EVRFirmwareError::_set_Fail(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Fail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRFirmwareError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError OK
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError OK
void OVR::OpenVR::EVRNotificationError::_set_OK(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
void OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
void OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
void OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
void OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRNotificationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError None
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError None
void OVR::OpenVR::EVRInitError::_set_None(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Unknown
void OVR::OpenVR::EVRInitError::_set_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
void OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FileNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
void OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
void OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
void OVR::OpenVR::EVRInitError::_set_Init_NotInitialized(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
void OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
void OVR::OpenVR::EVRInitError::_set_Init_NoLogPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Retry
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Retry
void OVR::OpenVR::EVRInitError::_set_Init_Retry(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
void OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
void OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
void OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
void OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
void OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
void OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Internal
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Internal
void OVR::OpenVR::EVRInitError::_set_Init_Internal(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
void OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
void OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
void OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
void OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
void OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
void OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Failed
void OVR::OpenVR::EVRInitError::_set_Driver_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
void OVR::OpenVR::EVRInitError::_set_Driver_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
void OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
void OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
void OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
void OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
void OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_Failed
void OVR::OpenVR::EVRInitError::_set_IPC_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
void OVR::OpenVR::EVRInitError::_set_Compositor_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
void OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
void OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
void OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRInitError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType None
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType None
void OVR::OpenVR::EVRScreenshotType::_set_None(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Mono
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Mono
void OVR::OpenVR::EVRScreenshotType::_set_Mono(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Stereo
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Stereo
void OVR::OpenVR::EVRScreenshotType::_set_Stereo(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
void OVR::OpenVR::EVRScreenshotType::_set_Cubemap(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError None
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError None
void OVR::OpenVR::EVRTrackedCameraError::_set_None(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
void OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
void OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
void OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
void OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRTrackedCameraError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameLayout
#include "OVR/OpenVR/EVRTrackedCameraFrameLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameType
#include "OVR/OpenVR/EVRTrackedCameraFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVSync
#include "OVR/OpenVR/EVSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync None
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync None
void OVR::OpenVR::EVSync::_set_None(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync WaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_WaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_WaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "WaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync WaitRender
void OVR::OpenVR::EVSync::_set_WaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_WaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "WaitRender", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync NoWaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_NoWaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_NoWaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "NoWaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync NoWaitRender
void OVR::OpenVR::EVSync::_set_NoWaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_NoWaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "NoWaitRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVSync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMuraCorrectionMode
#include "OVR/OpenVR/EVRMuraCorrectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
void OVR::OpenVR::EVRMuraCorrectionMode::_set_Default(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
void OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.Imu_OffScaleFlags
#include "OVR/OpenVR/Imu_OffScaleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::Imu_OffScaleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError None
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError None
void OVR::OpenVR::EVRApplicationError::_set_None(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
void OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoManifest
void OVR::OpenVR::EVRApplicationError::_set_NoManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoApplication
void OVR::OpenVR::EVRApplicationError::_set_NoApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
void OVR::OpenVR::EVRApplicationError::_set_InvalidIndex(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
void OVR::OpenVR::EVRApplicationError::_set_UnknownApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
void OVR::OpenVR::EVRApplicationError::_set_IPCFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
void OVR::OpenVR::EVRApplicationError::_set_InvalidManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
void OVR::OpenVR::EVRApplicationError::_set_InvalidApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
void OVR::OpenVR::EVRApplicationError::_set_LaunchFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
void OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
void OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
void OVR::OpenVR::EVRApplicationError::_set_TransitionAborted(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
void OVR::OpenVR::EVRApplicationError::_set_IsTemplate(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
void OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
void OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
void OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
void OVR::OpenVR::EVRApplicationError::_set_UnknownProperty(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
void OVR::OpenVR::EVRApplicationError::_set_InvalidParameter(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidParameter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRApplicationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Name_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Name_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Name_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
void OVR::OpenVR::EVRApplicationProperty::_set_Name_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Name_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Name_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
void OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
void OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
void OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
void OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_URL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_URL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "URL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
void OVR::OpenVR::EVRApplicationProperty::_set_URL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_URL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "URL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Description_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Description_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Description_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
void OVR::OpenVR::EVRApplicationProperty::_set_Description_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Description_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Description_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
void OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Source_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Source_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Source_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
void OVR::OpenVR::EVRApplicationProperty::_set_Source_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Source_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Source_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
void OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRApplicationProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRApplicationTransitionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
void OVR::OpenVR::ChaperoneCalibrationState::_set_OK(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::ChaperoneCalibrationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Live
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Live() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Live");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Live"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Live
void OVR::OpenVR::EChaperoneConfigFile::_set_Live(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Live");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Live", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
void OVR::OpenVR::EChaperoneConfigFile::_set_Temp(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Temp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EChaperoneConfigFile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneImportFlags
#include "OVR/OpenVR/EChaperoneImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
::OVR::OpenVR::EChaperoneImportFlags OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneImportFlags>("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
void OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly(::OVR::OpenVR::EChaperoneImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EChaperoneImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError None
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError None
void OVR::OpenVR::EVRCompositorError::_set_None(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
void OVR::OpenVR::EVRCompositorError::_set_RequestFailed(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
void OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
void OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
void OVR::OpenVR::EVRCompositorError::_set_InvalidTexture(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
void OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
void OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
void OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
void OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
void OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
void OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
void OVR::OpenVR::EVRCompositorError::_set_InvalidBounds(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRCompositorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
void OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRCompositorTimingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod None
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod None
void OVR::OpenVR::VROverlayInputMethod::_set_None(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
void OVR::OpenVR::VROverlayInputMethod::_set_Mouse(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
void OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::VROverlayInputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::VROverlayTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags None
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags None
void OVR::OpenVR::VROverlayFlags::_set_None(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Curved
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Curved
void OVR::OpenVR::VROverlayFlags::_set_Curved(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
void OVR::OpenVR::VROverlayFlags::_set_RGSS4X(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
void OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
void OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
void OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
void OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
void OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Panorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Panorama
void OVR::OpenVR::VROverlayFlags::_set_Panorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
void OVR::OpenVR::VROverlayFlags::_set_StereoPanorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
void OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
void OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
void OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputMode
#include "OVR/OpenVR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputLineMode
#include "OVR/OpenVR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Up
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Up
void OVR::OpenVR::EOverlayDirection::_set_Up(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Down
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Down
void OVR::OpenVR::EOverlayDirection::_set_Down(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Left
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Left
void OVR::OpenVR::EOverlayDirection::_set_Left(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Right
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Right
void OVR::OpenVR::EOverlayDirection::_set_Right(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Count
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Count
void OVR::OpenVR::EOverlayDirection::_set_Count(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError None
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError None
void OVR::OpenVR::EVRRenderModelError::_set_None(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError Loading
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError Loading
void OVR::OpenVR::EVRRenderModelError::_set_Loading(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
void OVR::OpenVR::EVRRenderModelError::_set_NotSupported(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
void OVR::OpenVR::EVRRenderModelError::_set_InvalidArg(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
void OVR::OpenVR::EVRRenderModelError::_set_InvalidModel(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
void OVR::OpenVR::EVRRenderModelError::_set_NoShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
void OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
void OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
void OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
void OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
void OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRComponentProperty
#include "OVR/OpenVR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
void OVR::OpenVR::EVRComponentProperty::_set_IsStatic(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
void OVR::OpenVR::EVRComponentProperty::_set_IsVisible(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
void OVR::OpenVR::EVRComponentProperty::_set_IsTouched(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
void OVR::OpenVR::EVRComponentProperty::_set_IsPressed(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
void OVR::OpenVR::EVRComponentProperty::_set_IsScrolled(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient
void OVR::OpenVR::EVRNotificationType::_set_Transient(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Persistent
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Persistent
void OVR::OpenVR::EVRNotificationType::_set_Persistent(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
void OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle None
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle None
void OVR::OpenVR::EVRNotificationStyle::_set_None(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Application
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Application
void OVR::OpenVR::EVRNotificationStyle::_set_Application(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError None
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError None
void OVR::OpenVR::EVRSettingsError::_set_None(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
void OVR::OpenVR::EVRSettingsError::_set_IPCFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
void OVR::OpenVR::EVRSettingsError::_set_WriteFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
void OVR::OpenVR::EVRSettingsError::_set_ReadFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
void OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
void OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputFilterCancelType
#include "OVR/OpenVR/EVRInputFilterCancelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EVRInputFilterCancelType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EIOBufferError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Read
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Read
void OVR::OpenVR::EIOBufferMode::_set_Read(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Write
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Write
void OVR::OpenVR::EIOBufferMode::_set_Write(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Create
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Create
void OVR::OpenVR::EIOBufferMode::_set_Create(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVR::OpenVR::EIOBufferMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_Keyboard_t
#include "OVR/OpenVR/VREvent_Keyboard_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput0
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput1
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput2
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput3
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput4
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput5
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput6
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput7
[[deprecated]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 uUserValue
[[deprecated]] uint64_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uUserValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_Keyboard_t.get_cNewInput
::StringW OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cNewInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
[[deprecated]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
[[deprecated]] float& OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VREvent_Data_t data
[[deprecated]] ::OVR::OpenVR::VREvent_Data_t& OVR::OpenVR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed..ctor
OVR::OpenVR::VREvent_t_Packed::VREvent_t_Packed(::OVR::OpenVR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed.Unpack
void OVR::OpenVR::VREvent_t_Packed::Unpack(ByRef<::OVR::OpenVR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
[[deprecated]] uint& OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
[[deprecated]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
[[deprecated]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis0
[[deprecated]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis1
[[deprecated]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis2
[[deprecated]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis3
[[deprecated]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis4
[[deprecated]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed..ctor
OVR::OpenVR::VRControllerState_t_Packed::VRControllerState_t_Packed(::OVR::OpenVR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed.Unpack
void OVR::OpenVR::VRControllerState_t_Packed::Unpack(ByRef<::OVR::OpenVR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_TextureMap_t_Packed
#include "OVR/OpenVR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_TextureMap_t
#include "OVR/OpenVR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unWidth
[[deprecated]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unHeight
[[deprecated]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
[[deprecated]] ::System::IntPtr& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed..ctor
OVR::OpenVR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(::OVR::OpenVR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed.Unpack
void OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_t_Packed
#include "OVR/OpenVR/RenderModel_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_t
#include "OVR/OpenVR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
[[deprecated]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
[[deprecated]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
[[deprecated]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
[[deprecated]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
[[deprecated]] int& OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed..ctor
OVR::OpenVR::RenderModel_t_Packed::RenderModel_t_Packed(::OVR::OpenVR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed.Unpack
void OVR::OpenVR::RenderModel_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 devicePath
[[deprecated]] uint64_t& OVR::OpenVR::InputOriginInfo_t::dyn_devicePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_devicePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicePath"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated]] uint& OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName0
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName1
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName2
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName3
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName4
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName5
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName6
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName7
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName8
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName8"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName9
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName9"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName10
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName11
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName12
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName13
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName14
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName15
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName16
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName17
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName18
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName19
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName20
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName21
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName22
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName23
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName24
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName25
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName26
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName27
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName28
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName28"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName29
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName29"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName30
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName30"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName31
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName31"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName32
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName32"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName33
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName33"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName34
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName34"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName35
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName35"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName36
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName36"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName37
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName37"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName38
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName38"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName39
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName39"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName40
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName40"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName41
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName41"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName42
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName42"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName43
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName43"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName44
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName44"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName45
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName45"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName46
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName46"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName47
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName47"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName48
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName48"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName49
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName49"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName50
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName50"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName51
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName51"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName52
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName52"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName53
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName53"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName54
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName54"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName55
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName55"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName56
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName56"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName57
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName57"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName58
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName58"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName59
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName59"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName60
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName60"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName61
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName61"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName62
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName62"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName63
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName63"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName64
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName64"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName65
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName65"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName66
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName66"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName67
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName67"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName68
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName68"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName69
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName69"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName70
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName70"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName71
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName71"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName72
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName72"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName73
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName73"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName74
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName74"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName75
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName75"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName76
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName76"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName77
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName77"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName78
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName78"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName79
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName79"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName80
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName80"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName81
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName81"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName82
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName82"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName83
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName83"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName84
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName84"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName85
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName85"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName86
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName86"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName87
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName87"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName88
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName88"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName89
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName89"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName90
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName90"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName91
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName91"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName92
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName92"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName93
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName93"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName94
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName94"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName95
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName95"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName96
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName96"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName97
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName97"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName98
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName98"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName99
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName99"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName100
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName100"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName101
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName101"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName102
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName102"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName103
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName103"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName104
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName104"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName105
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName105"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName106
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName106"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName107
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName107"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName108
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName108"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName109
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName109"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName110
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName110"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName111
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName111"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName112
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName112"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName113
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName113"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName114
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName114"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName115
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName115"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName116
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName116"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName117
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName117"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName118
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName118"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName119
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName119"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName120
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName120"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName121
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName121"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName122
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName122"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName123
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName123"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName124
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName124"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName125
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName125"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName126
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName126"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName127
[[deprecated]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName127"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.InputOriginInfo_t.get_rchRenderModelComponentName
::StringW OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rchRenderModelComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR
#include "OVR/OpenVR/OpenVR.hpp"
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint OVR::OpenVR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void OVR::OpenVR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidDriverHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidDriverHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSkeletonPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSkeletonPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionSetHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionSetHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidInputValueHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidInputValueHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void OVR::OpenVR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void OVR::OpenVR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void OVR::OpenVR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void OVR::OpenVR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void OVR::OpenVR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void OVR::OpenVR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInput
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInput
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInputBinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInputBinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RenderCameraMode
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RenderCameraMode
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_RoomViewMode_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_RoomViewMode_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void OVR::OpenVR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUI
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUI
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebEnable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebEnable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebPort_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebPort_String
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_TrackingOverride_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_TrackingOverride_Section
void OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_ActionManifestURL_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_ActionManifestURL_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Trackers_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Trackers_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void OVR::OpenVR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionSetNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionSetNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionOriginCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionOriginCount
void OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRInput_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRInput_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRInput_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRInput_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRInput_Version
void OVR::OpenVR::OpenVR::_set_IVRInput_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRInput_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRInput_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidIOBufferHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidIOBufferHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRIOBuffer_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRIOBuffer_Version
void OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
uint OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSpatialAnchors_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSpatialAnchors_Version
void OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW OVR::OpenVR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void OVR::OpenVR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::OpenVR::COpenVRContext*>("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
void OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext(::OVR::OpenVR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_VRToken
uint OVR::OpenVR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.set_VRToken
void OVR::OpenVR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_System
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Chaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Compositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Overlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_RenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Settings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Applications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Screenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_TrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Input
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_SpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::get_SpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_SpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_SpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR..cctor
void OVR::OpenVR::OpenVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal
uint OVR::OpenVR::OpenVR::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal2
uint OVR::OpenVR::OpenVR::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.ShutdownInternal
void OVR::OpenVR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsHmdPresent
bool OVR::OpenVR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsRuntimeInstalled
bool OVR::OpenVR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetStringForHmdError
::StringW OVR::OpenVR::OpenVR::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetInitToken
uint OVR::OpenVR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Init
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::Init(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Shutdown
void OVR::OpenVR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSystem m_pVRSystem
[[deprecated]] ::OVR::OpenVR::CVRSystem*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperone m_pVRChaperone
[[deprecated]] ::OVR::OpenVR::CVRChaperone*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperoneSetup m_pVRChaperoneSetup
[[deprecated]] ::OVR::OpenVR::CVRChaperoneSetup*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRCompositor m_pVRCompositor
[[deprecated]] ::OVR::OpenVR::CVRCompositor*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVROverlay m_pVROverlay
[[deprecated]] ::OVR::OpenVR::CVROverlay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRRenderModels m_pVRRenderModels
[[deprecated]] ::OVR::OpenVR::CVRRenderModels*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRExtendedDisplay m_pVRExtendedDisplay
[[deprecated]] ::OVR::OpenVR::CVRExtendedDisplay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSettings m_pVRSettings
[[deprecated]] ::OVR::OpenVR::CVRSettings*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRApplications m_pVRApplications
[[deprecated]] ::OVR::OpenVR::CVRApplications*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRScreenshots m_pVRScreenshots
[[deprecated]] ::OVR::OpenVR::CVRScreenshots*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRTrackedCamera m_pVRTrackedCamera
[[deprecated]] ::OVR::OpenVR::CVRTrackedCamera*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRInput m_pVRInput
[[deprecated]] ::OVR::OpenVR::CVRInput*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRInput"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSpatialAnchors m_pVRSpatialAnchors
[[deprecated]] ::OVR::OpenVR::CVRSpatialAnchors*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSpatialAnchors"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSpatialAnchors**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.Clear
void OVR::OpenVR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.CheckClear
void OVR::OpenVR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSystem
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRCompositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VROverlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRRenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSettings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRApplications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRScreenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRTrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRInput
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::COpenVRContext::VRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Array
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Array
void OVRSimpleJSON::JSONNodeType::_set_Array(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Object
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Object
void OVRSimpleJSON::JSONNodeType::_set_Object(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType String
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "String"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType String
void OVRSimpleJSON::JSONNodeType::_set_String(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Number
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Number
void OVRSimpleJSON::JSONNodeType::_set_Number(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType NullValue
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_NullValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_NullValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "NullValue"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType NullValue
void OVRSimpleJSON::JSONNodeType::_set_NullValue(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_NullValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "NullValue", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Boolean
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Boolean
void OVRSimpleJSON::JSONNodeType::_set_Boolean(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType None
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType None
void OVRSimpleJSON::JSONNodeType::_set_None(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Custom
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Custom
void OVRSimpleJSON::JSONNodeType::_set_Custom(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVRSimpleJSON::JSONNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Compact
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Compact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Compact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Compact"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Compact
void OVRSimpleJSON::JSONTextMode::_set_Compact(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Compact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Compact", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Indent
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Indent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Indent"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Indent
void OVRSimpleJSON::JSONTextMode::_set_Indent(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Indent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Indent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVRSimpleJSON::JSONTextMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean forceASCII
bool OVRSimpleJSON::JSONNode::_get_forceASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_forceASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "forceASCII"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean forceASCII
void OVRSimpleJSON::JSONNode::_set_forceASCII(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_forceASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "forceASCII", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean longAsString
bool OVRSimpleJSON::JSONNode::_get_longAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_longAsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "longAsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean longAsString
void OVRSimpleJSON::JSONNode::_set_longAsString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_longAsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "longAsString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder m_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder m_EscapeBuilder
void OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_VectorContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_VectorContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "VectorContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
void OVRSimpleJSON::JSONNode::_set_VectorContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_VectorContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "VectorContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_QuaternionContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_QuaternionContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "QuaternionContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
void OVRSimpleJSON::JSONNode::_set_QuaternionContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_QuaternionContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "QuaternionContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_RectContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_RectContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "RectContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
void OVRSimpleJSON::JSONNode::_set_RectContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_RectContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "RectContainerType", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNode::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Value
::StringW OVRSimpleJSON::JSONNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Value
void OVRSimpleJSON::JSONNode::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Count
int OVRSimpleJSON::JSONNode::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNumber
bool OVRSimpleJSON::JSONNode::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsString
bool OVRSimpleJSON::JSONNode::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsBoolean
bool OVRSimpleJSON::JSONNode::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNull
bool OVRSimpleJSON::JSONNode::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsArray
bool OVRSimpleJSON::JSONNode::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsObject
bool OVRSimpleJSON::JSONNode::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Inline
bool OVRSimpleJSON::JSONNode::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Inline
void OVRSimpleJSON::JSONNode::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Children");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_DeepChildren
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_DeepChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_DeepChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeepChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Linq
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::get_Linq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Linq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Linq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Keys
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Values
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsDouble
double OVRSimpleJSON::JSONNode::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsDouble
void OVRSimpleJSON::JSONNode::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsInt
int OVRSimpleJSON::JSONNode::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsInt
void OVRSimpleJSON::JSONNode::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsFloat
float OVRSimpleJSON::JSONNode::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 33));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsFloat
void OVRSimpleJSON::JSONNode::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsBool
bool OVRSimpleJSON::JSONNode::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsBool
void OVRSimpleJSON::JSONNode::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsLong
int64_t OVRSimpleJSON::JSONNode::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsLong
void OVRSimpleJSON::JSONNode::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONNode::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONNode::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::get_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_EscapeBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "get_EscapeBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode..cctor
void OVRSimpleJSON::JSONNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString(int aIndent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, aIndent);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteToStringBuilder
void OVRSimpleJSON::JSONNode::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNode::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Escape
::StringW OVRSimpleJSON::JSONNode::Escape(::StringW aText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aText)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aText);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ParseElement
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ParseElement(::StringW token, bool quoted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(quoted)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token, quoted);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetContainer
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::GetContainer(::OVRSimpleJSON::JSONContainerType aType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "GetContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aType)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aType);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::UnityEngine::Vector2 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector2
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector2(::UnityEngine::Vector2 aVec, ::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::UnityEngine::Vector3 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector3
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector3(::UnityEngine::Vector3 aVec, ::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4(::UnityEngine::Vector4 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector4
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector4(::UnityEngine::Vector4 aVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion(::UnityEngine::Quaternion aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteQuaternion
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteQuaternion(::UnityEngine::Quaternion aRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRot)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRot);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect(::UnityEngine::Rect aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRect
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRect(::UnityEngine::Rect aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset(::UnityEngine::RectOffset* aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRectOffset
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRectOffset(::UnityEngine::RectOffset* aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadMatrix
::UnityEngine::Matrix4x4 OVRSimpleJSON::JSONNode::ReadMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteMatrix
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteMatrix(::UnityEngine::Matrix4x4 aMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aMatrix);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Equals
bool OVRSimpleJSON::JSONNode::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetHashCode
int OVRSimpleJSON::JSONNode::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type type
[[deprecated]] ::OVRSimpleJSON::JSONNode::Enumerator::Type& OVRSimpleJSON::JSONNode::Enumerator::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> m_Object
[[deprecated]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Object"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> m_Array
[[deprecated]] typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Array"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_IsValid
bool OVRSimpleJSON::JSONNode::Enumerator::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.MoveNext
bool OVRSimpleJSON::JSONNode::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
// Including type: System.Collections.Generic.List`1/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
// Including type: System.Collections.Generic.List`1/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.get_Current
::StringW OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Dispose
void OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Reset
void OVRSimpleJSON::JSONNode::LinqEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::LinqEnumerator*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.MoveNext
bool OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_Children$d__40*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode <>4__this
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap2
[[deprecated]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.MoveNext
bool OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally1
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally2
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRSimpleJSON.JSONNode> m_List
[[deprecated]] ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONArray::dyn_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_m_List");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_List"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated]] bool& OVRSimpleJSON::JSONArray::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Inline
bool OVRSimpleJSON::JSONArray::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Inline
void OVRSimpleJSON::JSONArray::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONArray::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_IsArray
bool OVRSimpleJSON::JSONArray::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_IsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Count
int OVRSimpleJSON::JSONArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Children");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Add
void OVRSimpleJSON::JSONArray::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.WriteToStringBuilder
void OVRSimpleJSON::JSONArray::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONArray <>4__this
[[deprecated]] ::OVRSimpleJSON::JSONArray*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated]] typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.IDisposable.Dispose
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.MoveNext
bool OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.<>m__Finally1
void OVRSimpleJSON::JSONArray::$get_Children$d__22::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONArray::$get_Children$d__22*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVRSimpleJSON.JSONNode> m_Dict
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONObject::dyn_m_Dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_m_Dict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated]] bool& OVRSimpleJSON::JSONObject::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Inline
bool OVRSimpleJSON::JSONObject::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Inline
void OVRSimpleJSON::JSONObject::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Inline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONObject::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_IsObject
bool OVRSimpleJSON::JSONObject::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_IsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Count
int OVRSimpleJSON::JSONObject::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Children");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Add
void OVRSimpleJSON::JSONObject::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.WriteToStringBuilder
void OVRSimpleJSON::JSONObject::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode aNode
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aNode"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0.<Remove>b__0
bool OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::$Remove$b__0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONObject <>4__this
[[deprecated]] ::OVRSimpleJSON::JSONObject*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.IDisposable.Dispose
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.MoveNext
bool OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.<>m__Finally1
void OVRSimpleJSON::JSONObject::$get_Children$d__23::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONObject::$get_Children$d__23*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONString
#include "OVRSimpleJSON/JSONString.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Data
[[deprecated]] ::StringW& OVRSimpleJSON::JSONString::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONString::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_IsString
bool OVRSimpleJSON::JSONString::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_IsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Value
::StringW OVRSimpleJSON::JSONString::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.set_Value
void OVRSimpleJSON::JSONString::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONString::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.WriteToStringBuilder
void OVRSimpleJSON::JSONString::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONString.Equals
bool OVRSimpleJSON::JSONString::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetHashCode
int OVRSimpleJSON::JSONString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNumber
#include "OVRSimpleJSON/JSONNumber.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Data
[[deprecated]] double& OVRSimpleJSON::JSONNumber::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.IsNumeric
bool OVRSimpleJSON::JSONNumber::IsNumeric(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNumber", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNumber::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_IsNumber
bool OVRSimpleJSON::JSONNumber::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Value
::StringW OVRSimpleJSON::JSONNumber::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_Value
void OVRSimpleJSON::JSONNumber::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsDouble
double OVRSimpleJSON::JSONNumber::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsDouble
void OVRSimpleJSON::JSONNumber::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsLong
int64_t OVRSimpleJSON::JSONNumber::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsLong
void OVRSimpleJSON::JSONNumber::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNumber::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.WriteToStringBuilder
void OVRSimpleJSON::JSONNumber::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.Equals
bool OVRSimpleJSON::JSONNumber::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetHashCode
int OVRSimpleJSON::JSONNumber::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONBool
#include "OVRSimpleJSON/JSONBool.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Data
[[deprecated]] bool& OVRSimpleJSON::JSONBool::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONBool::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_IsBoolean
bool OVRSimpleJSON::JSONBool::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Value
::StringW OVRSimpleJSON::JSONBool::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_Value
void OVRSimpleJSON::JSONBool::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_AsBool
bool OVRSimpleJSON::JSONBool::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_AsBool
void OVRSimpleJSON::JSONBool::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONBool::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.WriteToStringBuilder
void OVRSimpleJSON::JSONBool::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.Equals
bool OVRSimpleJSON::JSONBool::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetHashCode
int OVRSimpleJSON::JSONBool::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNull
#include "OVRSimpleJSON/JSONNull.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::_get_m_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_m_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNull*>("OVRSimpleJSON", "JSONNull", "m_StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
void OVRSimpleJSON::JSONNull::_set_m_StaticInstance(::OVRSimpleJSON::JSONNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_m_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "m_StaticInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean reuseSameInstance
bool OVRSimpleJSON::JSONNull::_get_reuseSameInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_reuseSameInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNull", "reuseSameInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean reuseSameInstance
void OVRSimpleJSON::JSONNull::_set_reuseSameInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_reuseSameInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "reuseSameInstance", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNull.CreateOrGet
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::CreateOrGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::CreateOrGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", "CreateOrGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNull*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNull::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_IsNull
bool OVRSimpleJSON::JSONNull::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Value
::StringW OVRSimpleJSON::JSONNull::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_Value
void OVRSimpleJSON::JSONNull::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_AsBool
bool OVRSimpleJSON::JSONNull::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_AsBool
void OVRSimpleJSON::JSONNull::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull..cctor
void OVRSimpleJSON::JSONNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNull::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.Equals
bool OVRSimpleJSON::JSONNull::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetHashCode
int OVRSimpleJSON::JSONNull::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.WriteToStringBuilder
void OVRSimpleJSON::JSONNull::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONLazyCreator
#include "OVRSimpleJSON/JSONLazyCreator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONLazyCreator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Key
[[deprecated]] ::StringW& OVRSimpleJSON::JSONLazyCreator::dyn_m_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONLazyCreator::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Tag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsInt
int OVRSimpleJSON::JSONLazyCreator::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 31));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsInt
void OVRSimpleJSON::JSONLazyCreator::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsFloat
float OVRSimpleJSON::JSONLazyCreator::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 33));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsFloat
void OVRSimpleJSON::JSONLazyCreator::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsDouble
double OVRSimpleJSON::JSONLazyCreator::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsDouble
void OVRSimpleJSON::JSONLazyCreator::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsLong
int64_t OVRSimpleJSON::JSONLazyCreator::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsLong
void OVRSimpleJSON::JSONLazyCreator::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsBool
bool OVRSimpleJSON::JSONLazyCreator::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsBool
void OVRSimpleJSON::JSONLazyCreator::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsBool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONLazyCreator::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONLazyCreator::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONLazyCreator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Equals
bool OVRSimpleJSON::JSONLazyCreator::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetHashCode
int OVRSimpleJSON::JSONLazyCreator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.WriteToStringBuilder
void OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVRSimpleJSON::JSONNode*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSON
#include "OVRSimpleJSON/JSON.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSimpleJSON.JSON.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSON::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSON::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSON", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONContainerType
#include "OVRSimpleJSON/JSONContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Array
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Array
void OVRSimpleJSON::JSONContainerType::_set_Array(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Object
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Object
void OVRSimpleJSON::JSONContainerType::_set_Object(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& OVRSimpleJSON::JSONContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.Record
#include "Assets/OVR/Scripts/Record.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String category
[[deprecated]] ::StringW& Assets::OVR::Scripts::Record::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated]] ::StringW& Assets::OVR::Scripts::Record::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.RangedRecord
#include "Assets/OVR/Scripts/RangedRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single value
[[deprecated]] float& Assets::OVR::Scripts::RangedRecord::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated]] float& Assets::OVR::Scripts::RangedRecord::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated]] float& Assets::OVR::Scripts::RangedRecord::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.Invoke
void Assets::OVR::Scripts::FixMethodDelegate::Invoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, isLastInSet, selectedIndex);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.BeginInvoke
::System::IAsyncResult* Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, isLastInSet, selectedIndex, callback, object);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.EndInvoke
void Assets::OVR::Scripts::FixMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Assets::OVR::Scripts::FixMethodDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.FixRecord
#include "Assets/OVR/Scripts/FixRecord.hpp"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Assets.OVR.Scripts.FixMethodDelegate fixMethod
[[deprecated]] ::Assets::OVR::Scripts::FixMethodDelegate*& Assets::OVR::Scripts::FixRecord::dyn_fixMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_fixMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixMethod"))->offset;
  return *reinterpret_cast<::Assets::OVR::Scripts::FixMethodDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object targetObject
[[deprecated]] ::UnityEngine::Object*& Assets::OVR::Scripts::FixRecord::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] buttonNames
[[deprecated]] ::ArrayW<::StringW>& Assets::OVR::Scripts::FixRecord::dyn_buttonNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_buttonNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editModeRequired
[[deprecated]] bool& Assets::OVR::Scripts::FixRecord::dyn_editModeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_editModeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editModeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean complete
[[deprecated]] bool& Assets::OVR::Scripts::FixRecord::dyn_complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
[[deprecated]] ::UnityEngine::Transform*& UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCursor m_Cursor
[[deprecated]] ::GlobalNamespace::OVRCursor*& UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cursor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCursor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button joyPadClickButton
[[deprecated]] ::GlobalNamespace::OVRInput::Button& UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joyPadClickButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode gazeClickKey
[[deprecated]] ::UnityEngine::KeyCode& UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeClickKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean performSphereCastForGazepointer
[[deprecated]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performSphereCastForGazepointer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRightStickScroll
[[deprecated]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRightStickScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickDeadZone
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickDeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSwipeScroll
[[deprecated]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSwipeScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragThreshold
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragScale
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertSwipeXAxis
[[deprecated]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertSwipeXAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRaycaster activeGraphicRaycaster
[[deprecated]] ::GlobalNamespace::OVRRaycaster*& UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeGraphicRaycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleDragThreshold
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpherecastRadius
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NextAction
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextAction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
[[deprecated]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
[[deprecated]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_HorizontalAxis
[[deprecated]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_VerticalAxis
[[deprecated]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SubmitButton
[[deprecated]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CancelButton
[[deprecated]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InputActionsPerSecond
[[deprecated]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputActionsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivationOnMobileDevice
[[deprecated]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivationOnMobileDevice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.OVRPointerEventData> m_VRRayPointerData
[[deprecated]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>*& UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VRRayPointerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState m_MouseState
[[deprecated]] ::UnityEngine::EventSystems::PointerInputModule::MouseState*& UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MouseState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerInputModule::MouseState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputMode
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::OVRInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_horizontalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_horizontalAxis
void UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_verticalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_verticalAxis
void UnityEngine::EventSystems::OVRInputModule::set_verticalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_submitButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_submitButton
void UnityEngine::EventSystems::OVRInputModule::set_submitButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_cancelButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_cancelButton
void UnityEngine::EventSystems::OVRInputModule::set_cancelButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.AllowMoveEventProcessing
bool UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowMoveEventProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRawMoveVector
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMousePress
void UnityEngine::EventSystems::OVRInputModule::ProcessMousePress(::UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent(::UnityEngine::EventSystems::PointerInputModule::MouseState* mouseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UseMouse
bool UnityEngine::EventSystems::OVRInputModule::UseMouse(bool pressed, bool released, ::UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "UseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(pointerData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, released, pointerData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::OVRPointerEventData* from, ::UnityEngine::EventSystems::OVRPointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetPointerData
bool UnityEngine::EventSystems::OVRInputModule::GetPointerData(int id, ByRef<::UnityEngine::EventSystems::OVRPointerEventData*> data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::OVRPointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(data), create);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRectTransformNormal
::UnityEngine::Vector3 UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "GetRectTransformNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazePointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetGazePointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazePointerData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRInputModule*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetCanvasPointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsPointerMoving
bool UnityEngine::EventSystems::OVRInputModule::IsPointerMoving(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SwipeAdjustedPosition
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition(::UnityEngine::Vector2 originalPosition, ::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwipeAdjustedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPosition), ::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, originalPosition, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazeButtonState
::UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRInputModule*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetExtraScrollDelta
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtraScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UpdateModule
void UnityEngine::EventSystems::OVRInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsModuleSupported
bool UnityEngine::EventSystems::OVRInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ActivateModule
void UnityEngine::EventSystems::OVRInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.DeactivateModule
void UnityEngine::EventSystems::OVRInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.Process
void UnityEngine::EventSystems::OVRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseInputModule*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::PointerEventData* from, ::UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ClearSelection
void UnityEngine::EventSystems::OVRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessDrag
void UnityEngine::EventSystems::OVRInputModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::PointerInputModule*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
[[deprecated]] ::UnityEngine::LayerMask& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
[[deprecated]] int& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_depth
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::OVRPhysicsRaycaster*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Spherecast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList, radius);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.GetScreenPos
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Raycast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::BaseRaycaster*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9(::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c..cctor
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Raycast>b__15_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Raycast$b__15_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Raycast>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Spherecast>b__16_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Spherecast$b__16_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Spherecast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Spherecast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Ray worldSpaceRay
[[deprecated]] ::UnityEngine::Ray& UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swipeStart
[[deprecated]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPointerEventData.ToString
::StringW UnityEngine::EventSystems::OVRPointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::PointerEventData*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSection
#include "System/Configuration/ConfigurationSection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationSection.DeserializeSection
void System::Configuration::ConfigurationSection::DeserializeSection(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Configuration.ConfigurationSection.SerializeSection
::StringW System::Configuration::ConfigurationSection::SerializeSection(::System::Configuration::ConfigurationElement* parentElement, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentElement, name, saveMode);
}
// Autogenerated method: System.Configuration.ConfigurationSection.IsModified
bool System::Configuration::ConfigurationSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationSection.ResetModified
void System::Configuration::ConfigurationSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::ConfigurationElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.IsModified
bool System::Configuration::ConfigurationElement::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.Reset
void System::Configuration::ConfigurationElement::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElement.ResetModified
void System::Configuration::ConfigurationElement::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Full
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Full
void System::Configuration::ConfigurationSaveMode::_set_Full(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Minimal
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Minimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Minimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Minimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Minimal
void System::Configuration::ConfigurationSaveMode::_set_Minimal(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Minimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Minimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Modified
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Modified
void System::Configuration::ConfigurationSaveMode::_set_Modified(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Configuration::ConfigurationSaveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationCollectionAttribute
#include "System/Configuration/ConfigurationCollectionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.IgnoreSection
#include "System/Configuration/IgnoreSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.IgnoreSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::IgnoreSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.DeserializeSection
void System::Configuration::IgnoreSection::DeserializeSection(::System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Configuration.IgnoreSection.IsModified
bool System::Configuration::IgnoreSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.Reset
void System::Configuration::IgnoreSection::Reset(::System::Configuration::ConfigurationElement* parentSection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentSection);
}
// Autogenerated method: System.Configuration.IgnoreSection.ResetModified
void System::Configuration::IgnoreSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.SerializeSection
::StringW System::Configuration::IgnoreSection::SerializeSection(::System::Configuration::ConfigurationElement* parentSection, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentSection, name, saveMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionPolicy
#include "System/Threading/LockRecursionPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy NoRecursion
::System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_NoRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockRecursionPolicy::_get_NoRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "NoRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy NoRecursion
void System::Threading::LockRecursionPolicy::_set_NoRecursion(::System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockRecursionPolicy::_set_NoRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "NoRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
::System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_SupportsRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockRecursionPolicy::_get_SupportsRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "SupportsRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
void System::Threading::LockRecursionPolicy::_set_SupportsRecursion(::System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockRecursionPolicy::_set_SupportsRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "SupportsRecursion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Threading::LockRecursionPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LockRecursionPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 lockID
[[deprecated]] int64_t& System::Threading::ReaderWriterCount::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterCount::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 readercount
[[deprecated]] int& System::Threading::ReaderWriterCount::dyn_readercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterCount::dyn_readercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 writercount
[[deprecated]] int& System::Threading::ReaderWriterCount::dyn_writercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterCount::dyn_writercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 upgradecount
[[deprecated]] int& System::Threading::ReaderWriterCount::dyn_upgradecount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterCount::dyn_upgradecount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradecount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ReaderWriterCount next
[[deprecated]] ::System::Threading::ReaderWriterCount*& System::Threading::ReaderWriterCount::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterCount::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterCount**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim
#include "System/Threading/ReaderWriterLockSlim.hpp"
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 s_nextLockID
int64_t System::Threading::ReaderWriterLockSlim::_get_s_nextLockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::_get_s_nextLockID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "ReaderWriterLockSlim", "s_nextLockID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 s_nextLockID
void System::Threading::ReaderWriterLockSlim::_set_s_nextLockID(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::_set_s_nextLockID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "s_nextLockID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ReaderWriterCount t_rwc
::System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::_get_t_rwc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::_get_t_rwc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ReaderWriterCount*>("System.Threading", "ReaderWriterLockSlim", "t_rwc"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ReaderWriterCount t_rwc
void System::Threading::ReaderWriterLockSlim::_set_t_rwc(::System::Threading::ReaderWriterCount* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::_set_t_rwc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "t_rwc", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fIsReentrant
[[deprecated]] bool& System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fIsReentrant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myLock
[[deprecated]] int& System::Threading::ReaderWriterLockSlim::dyn_myLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_myLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myLock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteWaiters
[[deprecated]] uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numReadWaiters
[[deprecated]] uint& System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numReadWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteUpgradeWaiters
[[deprecated]] uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numUpgradeWaiters
[[deprecated]] uint& System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fNoWaiters
[[deprecated]] bool& System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fNoWaiters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 upgradeLockOwnerId
[[deprecated]] int& System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writeLockOwnerId
[[deprecated]] int& System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle writeEvent
[[deprecated]] ::System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_writeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_writeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeEvent"))->offset;
  return *reinterpret_cast<::System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle readEvent
[[deprecated]] ::System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_readEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_readEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readEvent"))->offset;
  return *reinterpret_cast<::System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle upgradeEvent
[[deprecated]] ::System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeEvent"))->offset;
  return *reinterpret_cast<::System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle waitUpgradeEvent
[[deprecated]] ::System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitUpgradeEvent"))->offset;
  return *reinterpret_cast<::System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 lockID
[[deprecated]] int64_t& System::Threading::ReaderWriterLockSlim::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fUpgradeThreadHoldingRead
[[deprecated]] bool& System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fUpgradeThreadHoldingRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 owners
[[deprecated]] uint& System::Threading::ReaderWriterLockSlim::dyn_owners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_owners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owners"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fDisposed
[[deprecated]] bool& System::Threading::ReaderWriterLockSlim::dyn_fDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::dyn_fDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpgradeableReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsWriteLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWriteLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveReadCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveWriteCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingReadCount
int System::Threading::ReaderWriterLockSlim::get_WaitingReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_WaitingReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingWriteCount
int System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.InitializeThreadCounts
void System::Threading::ReaderWriterLockSlim::InitializeThreadCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::InitializeThreadCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeThreadCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRWEntryEmpty
bool System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty(::System::Threading::ReaderWriterCount* rwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "IsRWEntryEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRwHashEntryChanged
bool System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged(::System::Threading::ReaderWriterCount* lrwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRwHashEntryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lrwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lrwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetThreadRWCount
::System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::GetThreadRWCount(bool dontAllocate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::GetThreadRWCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThreadRWCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dontAllocate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ReaderWriterCount*, false>(this, ___internal__method, dontAllocate);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterWriteLock
void System::Threading::ReaderWriterLockSlim::EnterWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::EnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(::System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore(::System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(::System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore(::System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitWriteLock
void System::Threading::ReaderWriterLockSlim::ExitWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.LazyCreateEvent
void System::Threading::ReaderWriterLockSlim::LazyCreateEvent(ByRef<::System::Threading::EventWaitHandle*> waitEvent, bool makeAutoResetEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::LazyCreateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyCreateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(makeAutoResetEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(waitEvent), makeAutoResetEvent);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.WaitOnEvent
bool System::Threading::ReaderWriterLockSlim::WaitOnEvent(::System::Threading::EventWaitHandle* waitEvent, ByRef<uint> numWaiters, ::System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout, bool isWriteWaiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::WaitOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(numWaiters), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(isWriteWaiter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, waitEvent, byref(numWaiters), timeout, isWriteWaiter);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaitersPreferringWriters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaitersPreferringWriters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateReadWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateReadWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsWriterAcquired
bool System::Threading::ReaderWriterLockSlim::IsWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::IsWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWriterAcquired
void System::Threading::ReaderWriterLockSlim::SetWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::SetWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWriterAcquired
void System::Threading::ReaderWriterLockSlim::ClearWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ClearWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWritersWaiting
void System::Threading::ReaderWriterLockSlim::SetWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::SetWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWritersWaiting
void System::Threading::ReaderWriterLockSlim::ClearWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ClearWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetNumReaders
uint System::Threading::ReaderWriterLockSlim::GetNumReaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::GetNumReaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumReaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLock
void System::Threading::ReaderWriterLockSlim::EnterMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::EnterMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLockSpin
void System::Threading::ReaderWriterLockSlim::EnterMyLockSpin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::EnterMyLockSpin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLockSpin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitMyLock
void System::Threading::ReaderWriterLockSlim::ExitMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::ExitMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SpinWait
void System::Threading::ReaderWriterLockSlim::SpinWait(int SpinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::SpinWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "SpinWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(SpinCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, SpinCount);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::ReaderWriterLockSlim*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_total
[[deprecated]] int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_start
[[deprecated]] int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_RemainingMilliseconds
int System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RemainingMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_IsExpired
bool System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker..ctor
System::Threading::ReaderWriterLockSlim::TimeoutTracker::TimeoutTracker(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::ReaderWriterLockSlim::TimeoutTracker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskExtensions
#include "System/Threading/Tasks/TaskExtensions.hpp"
// Including type: System.Threading.Tasks.TaskExtensions/System.Threading.Tasks.VoidResult
#include "System/Threading/Tasks/TaskExtensions_VoidResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskExtensions.Unwrap
::System::Threading::Tasks::Task* System::Threading::Tasks::TaskExtensions::Unwrap(::System::Threading::Tasks::Task_1<::System::Threading::Tasks::Task*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExtensions::Unwrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExtensions", "Unwrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesManaged
#include "System/Security/Cryptography/AesManaged.hpp"
// Including type: System.Security.Cryptography.RijndaelManaged
#include "System/Security/Cryptography/RijndaelManaged.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RijndaelManaged m_rijndael
[[deprecated]] ::System::Security::Cryptography::RijndaelManaged*& System::Security::Cryptography::AesManaged::dyn_m_rijndael() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::dyn_m_rijndael");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rijndael"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RijndaelManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_FeedbackSize
int System::Security::Cryptography::AesManaged::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_IV
void System::Security::Cryptography::AesManaged::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Key
void System::Security::Cryptography::AesManaged::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_KeySize
int System::Security::Cryptography::AesManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_KeySize
void System::Security::Cryptography::AesManaged::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Mode
::System::Security::Cryptography::CipherMode System::Security::Cryptography::AesManaged::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Mode
void System::Security::Cryptography::AesManaged::set_Mode(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesManaged::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Padding
void System::Security::Cryptography::AesManaged::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.Dispose
void System::Security::Cryptography::AesManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateIV
void System::Security::Cryptography::AesManaged::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateKey
void System::Security::Cryptography::AesManaged::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_IV
void System::Security::Cryptography::AesCryptoServiceProvider::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Key
void System::Security::Cryptography::AesCryptoServiceProvider::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_KeySize
int System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_KeySize
void System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_FeedbackSize
int System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Mode
::System::Security::Cryptography::CipherMode System::Security::Cryptography::AesCryptoServiceProvider::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Mode
void System::Security::Cryptography::AesCryptoServiceProvider::set_Mode(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesCryptoServiceProvider::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Padding
void System::Security::Cryptography::AesCryptoServiceProvider::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.Dispose
void System::Security::Cryptography::AesCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesTransform
#include "System/Security/Cryptography/AesTransform.hpp"
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Rcon
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_Rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_Rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "Rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Rcon
void System::Security::Cryptography::AesTransform::_set_Rcon(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_Rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "Rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_SBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_SBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "SBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SBox
void System::Security::Cryptography::AesTransform::_set_SBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_SBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "SBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] iSBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_iSBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iSBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "iSBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] iSBox
void System::Security::Cryptography::AesTransform::_set_iSBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iSBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iSBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T0
void System::Security::Cryptography::AesTransform::_set_T0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T1
void System::Security::Cryptography::AesTransform::_set_T1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T2
void System::Security::Cryptography::AesTransform::_set_T2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T3
void System::Security::Cryptography::AesTransform::_set_T3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT0
void System::Security::Cryptography::AesTransform::_set_iT0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT1
void System::Security::Cryptography::AesTransform::_set_iT1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT2
void System::Security::Cryptography::AesTransform::_set_iT2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT3
void System::Security::Cryptography::AesTransform::_set_iT3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT3", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] expandedKey
[[deprecated]] ::ArrayW<uint>& System::Security::Cryptography::AesTransform::dyn_expandedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_expandedKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nk
[[deprecated]] int& System::Security::Cryptography::AesTransform::dyn_Nk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_Nk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nr
[[deprecated]] int& System::Security::Cryptography::AesTransform::dyn_Nr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_Nr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesTransform..cctor
void System::Security::Cryptography::AesTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.SubByte
uint System::Security::Cryptography::AesTransform::SubByte(uint a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::SubByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Encrypt128
void System::Security::Cryptography::AesTransform::Encrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::Encrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Decrypt128
void System::Security::Cryptography::AesTransform::Decrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::Decrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.ECB
void System::Security::Cryptography::AesTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Error
#include "System/Linq/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Error.ArgumentNull
::System::Exception* System::Linq::Error::ArgumentNull(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.ArgumentOutOfRange
::System::Exception* System::Linq::Error::ArgumentOutOfRange(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.MoreThanOneElement
::System::Exception* System::Linq::Error::MoreThanOneElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::MoreThanOneElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.MoreThanOneMatch
::System::Exception* System::Linq::Error::MoreThanOneMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::MoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoElements
::System::Exception* System::Linq::Error::NoElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NoElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoMatch
::System::Exception* System::Linq::Error::NoMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NoMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NotSupported
::System::Exception* System::Linq::Error::NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Enumerable
#include "System/Linq/Enumerable.hpp"
// Including type: System.Linq.Enumerable/System.Linq.Iterator`1
#include "System/Linq/Enumerable_Iterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereEnumerableIterator`1
#include "System/Linq/Enumerable_WhereEnumerableIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereArrayIterator`1
#include "System/Linq/Enumerable_WhereArrayIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereListIterator`1
#include "System/Linq/Enumerable_WhereListIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectEnumerableIterator`2
#include "System/Linq/Enumerable_WhereSelectEnumerableIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectArrayIterator`2
#include "System/Linq/Enumerable_WhereSelectArrayIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectListIterator`2
#include "System/Linq/Enumerable_WhereSelectListIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass6_0`1
#include "System/Linq/Enumerable_--c__DisplayClass6_0_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass7_0`3
#include "System/Linq/Enumerable_--c__DisplayClass7_0_3.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SelectManyIterator>d__17`2
#include "System/Linq/Enumerable_-SelectManyIterator-d__17_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<TakeIterator>d__25`1
#include "System/Linq/Enumerable_-TakeIterator-d__25_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ConcatIterator>d__59`1
#include "System/Linq/Enumerable_-ConcatIterator-d__59_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<UnionIterator>d__71`1
#include "System/Linq/Enumerable_-UnionIterator-d__71_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<CastIterator>d__99`1
#include "System/Linq/Enumerable_-CastIterator-d__99_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Linq.IOrderedEnumerable`1
#include "System/Linq/IOrderedEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Enumerable.Range
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::Range(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.RangeIterator
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::RangeIterator(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::RangeIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "RangeIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.Min
float System::Linq::Enumerable::Min(::System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
int System::Linq::Enumerable::Max(::System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
float System::Linq::Enumerable::Max(::System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Average
float System::Linq::Enumerable::Average(::System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Average");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Average", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 start
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__start
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__count
[[deprecated]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.IDisposable.Dispose
void System::Linq::Enumerable::$RangeIterator$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.MoveNext
bool System::Linq::Enumerable::$RangeIterator$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.Reset
void System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<int>* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.CachedReflectionInfo
#include "System/Linq/Expressions/CachedReflectionInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_SetNotMatched
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_SetNotMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_SetNotMatched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_SetNotMatched"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_SetNotMatched
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_SetNotMatched(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_SetNotMatched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_SetNotMatched", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_CreateMatchmaker
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_CreateMatchmaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_CreateMatchmaker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_CreateMatchmaker"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_CreateMatchmaker
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_CreateMatchmaker(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_CreateMatchmaker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_CreateMatchmaker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetMatch
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetMatch
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetMatch(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetMatch", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_ClearMatch
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_ClearMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_ClearMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_ClearMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_ClearMatch
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_ClearMatch(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_ClearMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_ClearMatch", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_UpdateRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_UpdateRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_UpdateRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_UpdateRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_UpdateRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_UpdateRules(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_UpdateRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_UpdateRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRules(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRuleCache
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRuleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRuleCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRuleCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRuleCache
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRuleCache(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRuleCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRuleCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetCachedRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetCachedRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetCachedRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetCachedRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetCachedRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetCachedRules(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetCachedRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetCachedRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_AddRule
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_AddRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_AddRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_AddRule"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_AddRule
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_AddRule(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_AddRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_AddRule", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_MoveRule
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_MoveRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_MoveRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_MoveRule"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_MoveRule
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_MoveRule(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_MoveRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_MoveRule", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_Bind
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_Bind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_Bind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_Bind"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_Bind
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_Bind(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_Bind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_Bind", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_String_op_Equality_String_String
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_String_op_Equality_String_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_String_op_Equality_String_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_String_op_Equality_String_String"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_String_op_Equality_String_String
void System::Linq::Expressions::CachedReflectionInfo::_set_s_String_op_Equality_String_String(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_String_op_Equality_String_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_String_op_Equality_String_String", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_Math_Pow_Double_Double
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_Math_Pow_Double_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_get_s_Math_Pow_Double_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_Math_Pow_Double_Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_Math_Pow_Double_Double
void System::Linq::Expressions::CachedReflectionInfo::_set_s_Math_Pow_Double_Double(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::_set_s_Math_Pow_Double_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_Math_Pow_Double_Double", value));
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_SetNotMatched
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_SetNotMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_SetNotMatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_SetNotMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_CreateMatchmaker
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_CreateMatchmaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_CreateMatchmaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_CreateMatchmaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetMatch
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_ClearMatch
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_ClearMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_ClearMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_ClearMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_UpdateRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_UpdateRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_UpdateRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_UpdateRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetRuleCache
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRuleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRuleCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetRuleCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetCachedRules
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetCachedRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetCachedRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetCachedRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_AddRule
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_AddRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_AddRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_AddRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_MoveRule
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_MoveRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_MoveRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_MoveRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_Bind
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_Bind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_String_op_Equality_String_String
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_String_op_Equality_String_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_String_op_Equality_String_String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_String_op_Equality_String_String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_Math_Pow_Double_Double
::System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_Math_Pow_Double_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CachedReflectionInfo::get_Math_Pow_Double_Double");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_Math_Pow_Double_Double", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Right>k__BackingField
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::BinaryExpression::dyn_$Right$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::dyn_$Right$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Right>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Left>k__BackingField
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::BinaryExpression::dyn_$Left$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::dyn_$Left$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Left>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Right
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_Right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Left
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_Left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Method
::System::Reflection::MethodInfo* System::Linq::Expressions::BinaryExpression::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Conversion
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::BinaryExpression::get_Conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_Conversion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Conversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLifted
bool System::Linq::Expressions::BinaryExpression::get_IsLifted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_IsLifted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLifted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLiftedToNull
bool System::Linq::Expressions::BinaryExpression::get_IsLiftedToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_IsLiftedToNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLiftedToNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLiftedLogical
bool System::Linq::Expressions::BinaryExpression::get_IsLiftedLogical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_IsLiftedLogical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLiftedLogical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsReferenceComparison
bool System::Linq::Expressions::BinaryExpression::get_IsReferenceComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_IsReferenceComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReferenceComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.IsOpAssignment
bool System::Linq::Expressions::BinaryExpression::IsOpAssignment(::System::Linq::Expressions::ExpressionType op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::IsOpAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BinaryExpression", "IsOpAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetMethod
::System::Reflection::MethodInfo* System::Linq::Expressions::BinaryExpression::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::GetMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BinaryExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Update
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::BinaryExpression::Update(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::LambdaExpression* conversion, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(this, ___internal__method, left, conversion, right);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetBinaryOpFromAssignmentOp
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::BinaryExpression::GetBinaryOpFromAssignmentOp(::System::Linq::Expressions::ExpressionType op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::GetBinaryOpFromAssignmentOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BinaryExpression", "GetBinaryOpFromAssignmentOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceVariable
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::ReduceVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceMember
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::ReduceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceIndex
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::ReduceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetConversion
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::BinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BinaryExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceUserdefinedLifted
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceUserdefinedLifted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::ReduceUserdefinedLifted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceUserdefinedLifted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_CanReduce
bool System::Linq::Expressions::BinaryExpression::get_CanReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::get_CanReduce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Reduce
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::Reduce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Accept
::System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::Accept(::System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BinaryExpression::Accept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LogicalBinaryExpression
#include "System/Linq/Expressions/LogicalBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
[[deprecated]] ::System::Linq::Expressions::ExpressionType& System::Linq::Expressions::LogicalBinaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::LogicalBinaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LogicalBinaryExpression.get_Type
::System::Type* System::Linq::Expressions::LogicalBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::LogicalBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LogicalBinaryExpression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::LogicalBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::LogicalBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.AssignBinaryExpression
#include "System/Linq/Expressions/AssignBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.AssignBinaryExpression.get_Type
::System::Type* System::Linq::Expressions::AssignBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::AssignBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.AssignBinaryExpression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::AssignBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::AssignBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.CoalesceConversionBinaryExpression
#include "System/Linq/Expressions/CoalesceConversionBinaryExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LambdaExpression _conversion
[[deprecated]] ::System::Linq::Expressions::LambdaExpression*& System::Linq::Expressions::CoalesceConversionBinaryExpression::dyn__conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CoalesceConversionBinaryExpression::dyn__conversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conversion"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::LambdaExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::CoalesceConversionBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CoalesceConversionBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.get_Type
::System::Type* System::Linq::Expressions::CoalesceConversionBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CoalesceConversionBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.GetConversion
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::CoalesceConversionBinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::CoalesceConversionBinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BinaryExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.OpAssignMethodConversionBinaryExpression
#include "System/Linq/Expressions/OpAssignMethodConversionBinaryExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LambdaExpression _conversion
[[deprecated]] ::System::Linq::Expressions::LambdaExpression*& System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::dyn__conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::dyn__conversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conversion"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::LambdaExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.OpAssignMethodConversionBinaryExpression.GetConversion
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BinaryExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.SimpleBinaryExpression
#include "System/Linq/Expressions/SimpleBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
[[deprecated]] ::System::Linq::Expressions::ExpressionType& System::Linq::Expressions::SimpleBinaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::SimpleBinaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
[[deprecated]] ::System::Type*& System::Linq::Expressions::SimpleBinaryExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::SimpleBinaryExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.SimpleBinaryExpression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::SimpleBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::SimpleBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SimpleBinaryExpression.get_Type
::System::Type* System::Linq::Expressions::SimpleBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::SimpleBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MethodBinaryExpression
#include "System/Linq/Expressions/MethodBinaryExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo _method
[[deprecated]] ::System::Reflection::MethodInfo*& System::Linq::Expressions::MethodBinaryExpression::dyn__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::MethodBinaryExpression::dyn__method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodBinaryExpression.GetMethod
::System::Reflection::MethodInfo* System::Linq::Expressions::MethodBinaryExpression::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::MethodBinaryExpression::GetMethod");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BinaryExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.BinaryExpressionProxy
#include "System/Linq/Expressions/Expression_BinaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.BlockExpressionProxy
#include "System/Linq/Expressions/Expression_BlockExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.CatchBlockProxy
#include "System/Linq/Expressions/Expression_CatchBlockProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ConditionalExpressionProxy
#include "System/Linq/Expressions/Expression_ConditionalExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ConstantExpressionProxy
#include "System/Linq/Expressions/Expression_ConstantExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.DebugInfoExpressionProxy
#include "System/Linq/Expressions/Expression_DebugInfoExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.DefaultExpressionProxy
#include "System/Linq/Expressions/Expression_DefaultExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.GotoExpressionProxy
#include "System/Linq/Expressions/Expression_GotoExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.IndexExpressionProxy
#include "System/Linq/Expressions/Expression_IndexExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.InvocationExpressionProxy
#include "System/Linq/Expressions/Expression_InvocationExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LabelExpressionProxy
#include "System/Linq/Expressions/Expression_LabelExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LambdaExpressionProxy
#include "System/Linq/Expressions/Expression_LambdaExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ListInitExpressionProxy
#include "System/Linq/Expressions/Expression_ListInitExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LoopExpressionProxy
#include "System/Linq/Expressions/Expression_LoopExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MemberExpressionProxy
#include "System/Linq/Expressions/Expression_MemberExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MemberInitExpressionProxy
#include "System/Linq/Expressions/Expression_MemberInitExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MethodCallExpressionProxy
#include "System/Linq/Expressions/Expression_MethodCallExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.NewArrayExpressionProxy
#include "System/Linq/Expressions/Expression_NewArrayExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.NewExpressionProxy
#include "System/Linq/Expressions/Expression_NewExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ParameterExpressionProxy
#include "System/Linq/Expressions/Expression_ParameterExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.RuntimeVariablesExpressionProxy
#include "System/Linq/Expressions/Expression_RuntimeVariablesExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.SwitchCaseProxy
#include "System/Linq/Expressions/Expression_SwitchCaseProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.SwitchExpressionProxy
#include "System/Linq/Expressions/Expression_SwitchExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.TryExpressionProxy
#include "System/Linq/Expressions/Expression_TryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.TypeBinaryExpressionProxy
#include "System/Linq/Expressions/Expression_TypeBinaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.UnaryExpressionProxy
#include "System/Linq/Expressions/Expression_UnaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo
#include "System/Linq/Expressions/Expression_ExtensionInfo.hpp"
// Including type: System.Dynamic.Utils.CacheDict`2
#include "System/Dynamic/Utils/CacheDict_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Linq.Expressions.ConditionalExpression
#include "System/Linq/Expressions/ConditionalExpression.hpp"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
// Including type: System.Linq.Expressions.GotoExpression
#include "System/Linq/Expressions/GotoExpression.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Linq.Expressions.GotoExpressionKind
#include "System/Linq/Expressions/GotoExpressionKind.hpp"
// Including type: System.Linq.Expressions.IndexExpression
#include "System/Linq/Expressions/IndexExpression.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Linq.Expressions.InvocationExpression
#include "System/Linq/Expressions/InvocationExpression.hpp"
// Including type: System.Linq.Expressions.LabelExpression
#include "System/Linq/Expressions/LabelExpression.hpp"
// Including type: System.Linq.Expressions.Expression`1
#include "System/Linq/Expressions/Expression_1.hpp"
// Including type: System.Linq.Expressions.LoopExpression
#include "System/Linq/Expressions/LoopExpression.hpp"
// Including type: System.Linq.Expressions.MemberExpression
#include "System/Linq/Expressions/MemberExpression.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Linq.Expressions.MethodCallExpression
#include "System/Linq/Expressions/MethodCallExpression.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Linq.Expressions.NewArrayExpression
#include "System/Linq/Expressions/NewArrayExpression.hpp"
// Including type: System.Linq.Expressions.TryExpression
#include "System/Linq/Expressions/TryExpression.hpp"
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Linq.Expressions.UnaryExpression
#include "System/Linq/Expressions/UnaryExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Dynamic.Utils.CacheDict`2<System.Type,System.Reflection.MethodInfo> s_lambdaDelegateCache
::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Reflection::MethodInfo*>* System::Linq::Expressions::Expression::_get_s_lambdaDelegateCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_get_s_lambdaDelegateCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Reflection::MethodInfo*>*>("System.Linq.Expressions", "Expression", "s_lambdaDelegateCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Dynamic.Utils.CacheDict`2<System.Type,System.Reflection.MethodInfo> s_lambdaDelegateCache
void System::Linq::Expressions::Expression::_set_s_lambdaDelegateCache(::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Reflection::MethodInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_set_s_lambdaDelegateCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_lambdaDelegateCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Dynamic.Utils.CacheDict`2<System.Type,System.Func`5<System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression>,System.Linq.Expressions.LambdaExpression>> s_lambdaFactories
::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Func_5<::System::Linq::Expressions::Expression*, ::StringW, bool, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>*, ::System::Linq::Expressions::LambdaExpression*>*>* System::Linq::Expressions::Expression::_get_s_lambdaFactories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_get_s_lambdaFactories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Func_5<::System::Linq::Expressions::Expression*, ::StringW, bool, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>*, ::System::Linq::Expressions::LambdaExpression*>*>*>("System.Linq.Expressions", "Expression", "s_lambdaFactories")));
}
// Autogenerated static field setter
// Set static field: static private System.Dynamic.Utils.CacheDict`2<System.Type,System.Func`5<System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression>,System.Linq.Expressions.LambdaExpression>> s_lambdaFactories
void System::Linq::Expressions::Expression::_set_s_lambdaFactories(::System::Dynamic::Utils::CacheDict_2<::System::Type*, ::System::Func_5<::System::Linq::Expressions::Expression*, ::StringW, bool, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>*, ::System::Linq::Expressions::LambdaExpression*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_set_s_lambdaFactories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_lambdaFactories", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Linq.Expressions.Expression,System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo> s_legacyCtorSupportTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Linq::Expressions::Expression*, ::System::Linq::Expressions::Expression::ExtensionInfo*>* System::Linq::Expressions::Expression::_get_s_legacyCtorSupportTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_get_s_legacyCtorSupportTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Linq::Expressions::Expression*, ::System::Linq::Expressions::Expression::ExtensionInfo*>*>("System.Linq.Expressions", "Expression", "s_legacyCtorSupportTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Linq.Expressions.Expression,System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo> s_legacyCtorSupportTable
void System::Linq::Expressions::Expression::_set_s_legacyCtorSupportTable(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Linq::Expressions::Expression*, ::System::Linq::Expressions::Expression::ExtensionInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::_set_s_legacyCtorSupportTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_legacyCtorSupportTable", value));
}
// Autogenerated method: System.Linq.Expressions.Expression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::Expression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.get_Type
::System::Type* System::Linq::Expressions::Expression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.get_CanReduce
bool System::Linq::Expressions::Expression::get_CanReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::get_CanReduce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression..cctor
void System::Linq::Expressions::Expression::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Assign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Assign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Assign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Assign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator(::System::Linq::Expressions::ExpressionType binaryType, ::StringW name, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedBinaryOperator
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetMethodBasedBinaryOperator(::System::Linq::Expressions::ExpressionType binaryType, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetMethodBasedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, method, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedAssignOperator
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetMethodBasedAssignOperator(::System::Linq::Expressions::ExpressionType binaryType, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetMethodBasedAssignOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedAssignOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, method, conversion, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperatorOrThrow
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperatorOrThrow(::System::Linq::Expressions::ExpressionType binaryType, ::StringW name, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedBinaryOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedAssignOperatorOrThrow
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedAssignOperatorOrThrow(::System::Linq::Expressions::ExpressionType binaryType, ::StringW name, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Linq::Expressions::LambdaExpression* conversion, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedAssignOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedAssignOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, conversion, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator
::System::Reflection::MethodInfo* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator(::System::Linq::Expressions::ExpressionType binaryType, ::System::Type* leftType, ::System::Type* rightType, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(leftType), ::il2cpp_utils::ExtractType(rightType), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, leftType, rightType, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsLiftingConditionalLogicalOperator
bool System::Linq::Expressions::Expression::IsLiftingConditionalLogicalOperator(::System::Type* left, ::System::Type* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::ExpressionType binaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsLiftingConditionalLogicalOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsLiftingConditionalLogicalOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(binaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, binaryType);
}
// Autogenerated method: System.Linq.Expressions.Expression.ParameterIsAssignable
bool System::Linq::Expressions::Expression::ParameterIsAssignable(::System::Reflection::ParameterInfo* pi, ::System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ParameterIsAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ParameterIsAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(argType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pi, argType);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateParamswithOperandsOrThrow
void System::Linq::Expressions::Expression::ValidateParamswithOperandsOrThrow(::System::Type* paramType, ::System::Type* operandType, ::System::Linq::Expressions::ExpressionType exprType, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateParamswithOperandsOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateParamswithOperandsOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramType), ::il2cpp_utils::ExtractType(operandType), ::il2cpp_utils::ExtractType(exprType), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramType, operandType, exprType, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOperator
void System::Linq::Expressions::Expression::ValidateOperator(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateMethodInfo
void System::Linq::Expressions::Expression::ValidateMethodInfo(::System::Reflection::MethodInfo* method, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsNullComparison
bool System::Linq::Expressions::Expression::IsNullComparison(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsNullComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsNullComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsNullConstant
bool System::Linq::Expressions::Expression::IsNullConstant(::System::Linq::Expressions::Expression* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsNullConstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsNullConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateUserDefinedConditionalLogicOperator
void System::Linq::Expressions::Expression::ValidateUserDefinedConditionalLogicOperator(::System::Linq::Expressions::ExpressionType nodeType, ::System::Type* left, ::System::Type* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateUserDefinedConditionalLogicOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateUserDefinedConditionalLogicOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.VerifyOpTrueFalse
void System::Linq::Expressions::Expression::VerifyOpTrueFalse(::System::Linq::Expressions::ExpressionType nodeType, ::System::Type* left, ::System::Reflection::MethodInfo* opTrue, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::VerifyOpTrueFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "VerifyOpTrueFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(opTrue), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, left, opTrue, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsValidLiftedConditionalLogicalOperator
bool System::Linq::Expressions::Expression::IsValidLiftedConditionalLogicalOperator(::System::Type* left, ::System::Type* right, ::ArrayW<::System::Reflection::ParameterInfo*> pms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsValidLiftedConditionalLogicalOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsValidLiftedConditionalLogicalOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(pms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, pms);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeBinary
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MakeBinary(::System::Linq::Expressions::ExpressionType binaryType, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeBinary
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MakeBinary(::System::Linq::Expressions::ExpressionType binaryType, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, liftToNull, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Equal
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Equal(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.Equal
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Equal(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReferenceEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ReferenceEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ReferenceEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ReferenceEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.NotEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::NotEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.NotEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::NotEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReferenceNotEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ReferenceNotEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ReferenceNotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ReferenceNotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetEqualityComparisonOperator
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetEqualityComparisonOperator(::System::Linq::Expressions::ExpressionType binaryType, ::StringW opName, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetEqualityComparisonOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetEqualityComparisonOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(opName), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, opName, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GreaterThan
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GreaterThan(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LessThan
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LessThan(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GreaterThanOrEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GreaterThanOrEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LessThanOrEqual
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LessThanOrEqual(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetComparisonOperator
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetComparisonOperator(::System::Linq::Expressions::ExpressionType binaryType, ::StringW opName, ::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetComparisonOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetComparisonOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(opName), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, opName, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAlso
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAlso(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AndAlso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAlso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAlso
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAlso(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AndAlso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAlso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OrElse
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::OrElse(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::OrElse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OrElse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Coalesce
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Coalesce(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Coalesce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Coalesce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateCoalesceArgTypes
::System::Type* System::Linq::Expressions::Expression::ValidateCoalesceArgTypes(::System::Type* left, ::System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateCoalesceArgTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateCoalesceArgTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.Add
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Add(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AddAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOpAssignConversionLambda
void System::Linq::Expressions::Expression::ValidateOpAssignConversionLambda(::System::Linq::Expressions::LambdaExpression* conversion, ::System::Linq::Expressions::Expression* left, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::ExpressionType nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateOpAssignConversionLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOpAssignConversionLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, conversion, left, method, nodeType);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddAssignChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddAssignChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AddAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AddChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Subtract
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Subtract(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::SubtractAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractAssignChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractAssignChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::SubtractAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::SubtractChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Divide
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Divide(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Divide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Divide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.DivideAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::DivideAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::DivideAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "DivideAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Modulo
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Modulo(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ModuloAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ModuloAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ModuloAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ModuloAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Multiply
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Multiply(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MultiplyAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyAssignChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyAssignChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MultiplyAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyChecked
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyChecked(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MultiplyChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsSimpleShift
bool System::Linq::Expressions::Expression::IsSimpleShift(::System::Type* left, ::System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsSimpleShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsSimpleShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetResultTypeOfShift
::System::Type* System::Linq::Expressions::Expression::GetResultTypeOfShift(::System::Type* left, ::System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetResultTypeOfShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetResultTypeOfShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.LeftShift
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LeftShift(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LeftShiftAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LeftShiftAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::LeftShiftAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LeftShiftAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.RightShift
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::RightShift(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.RightShiftAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::RightShiftAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::RightShiftAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RightShiftAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.And
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::And(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::AndAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Or
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Or(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OrAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::OrAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::OrAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OrAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ExclusiveOr
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ExclusiveOr(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ExclusiveOr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ExclusiveOr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ExclusiveOrAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ExclusiveOrAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ExclusiveOrAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ExclusiveOrAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Power
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Power(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Power");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Power", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PowerAssign
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::PowerAssign(::System::Linq::Expressions::Expression* left, ::System::Linq::Expressions::Expression* right, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PowerAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PowerAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayIndex
::System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ArrayIndex(::System::Linq::Expressions::Expression* array, ::System::Linq::Expressions::Expression* index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3, ::System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Type* type, ::ArrayW<::System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Type* type, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Type* type, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(::System::Type* type, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.BlockCore
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::BlockCore(::System::Type* type, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::BlockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "BlockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateVariables
void System::Linq::Expressions::Expression::ValidateVariables(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* varList, ::StringW collectionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(varList), ::il2cpp_utils::ExtractType(collectionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, varList, collectionName);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetOptimizedBlockExpression
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::GetOptimizedBlockExpression(::System::Collections::Generic::IReadOnlyList_1<::System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetOptimizedBlockExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetOptimizedBlockExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeCatchBlock
::System::Linq::Expressions::CatchBlock* System::Linq::Expressions::Expression::MakeCatchBlock(::System::Type* type, ::System::Linq::Expressions::ParameterExpression* variable, ::System::Linq::Expressions::Expression* body, ::System::Linq::Expressions::Expression* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeCatchBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeCatchBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::CatchBlock*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variable, body, filter);
}
// Autogenerated method: System.Linq.Expressions.Expression.Condition
::System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::Condition(::System::Linq::Expressions::Expression* test, ::System::Linq::Expressions::Expression* ifTrue, ::System::Linq::Expressions::Expression* ifFalse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue, ifFalse);
}
// Autogenerated method: System.Linq.Expressions.Expression.Condition
::System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::Condition(::System::Linq::Expressions::Expression* test, ::System::Linq::Expressions::Expression* ifTrue, ::System::Linq::Expressions::Expression* ifFalse, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue, ifFalse, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.IfThen
::System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::IfThen(::System::Linq::Expressions::Expression* test, ::System::Linq::Expressions::Expression* ifTrue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IfThen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IfThen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Constant
::System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Expression::Constant(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.Constant
::System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Expression::Constant(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Empty
::System::Linq::Expressions::DefaultExpression* System::Linq::Expressions::Expression::Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::DefaultExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Default
::System::Linq::Expressions::DefaultExpression* System::Linq::Expressions::Expression::Default(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::DefaultExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Reduce
::System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Reduce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.VisitChildren
::System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::VisitChildren(::System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::VisitChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated method: System.Linq.Expressions.Expression.Accept
::System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::Accept(::System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Accept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReduceAndCheck
::System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::ReduceAndCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ReduceAndCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceAndCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.RequiresCanRead
void System::Linq::Expressions::Expression::RequiresCanRead(::System::Collections::Generic::IReadOnlyList_1<::System::Linq::Expressions::Expression*>* items, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::RequiresCanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RequiresCanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, items, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.RequiresCanWrite
void System::Linq::Expressions::Expression::RequiresCanWrite(::System::Linq::Expressions::Expression* expression, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::RequiresCanWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RequiresCanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Break
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Break(::System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Break");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Break", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Return
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Return(::System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Return
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Return(::System::Linq::Expressions::LabelTarget* target, ::System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.Goto
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Goto(::System::Linq::Expressions::LabelTarget* target, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Goto
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Goto(::System::Linq::Expressions::LabelTarget* target, ::System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeGoto
::System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::MakeGoto(::System::Linq::Expressions::GotoExpressionKind kind, ::System::Linq::Expressions::LabelTarget* target, ::System::Linq::Expressions::Expression* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeGoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kind, target, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateGoto
void System::Linq::Expressions::Expression::ValidateGoto(::System::Linq::Expressions::LabelTarget* target, ByRef<::System::Linq::Expressions::Expression*> value, ::StringW targetParameter, ::StringW valueParameter, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateGoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetParameter), ::il2cpp_utils::ExtractType(valueParameter), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, byref(value), targetParameter, valueParameter, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateGotoType
void System::Linq::Expressions::Expression::ValidateGotoType(::System::Type* expectedType, ByRef<::System::Linq::Expressions::Expression*> value, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateGotoType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateGotoType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedType), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedType, byref(value), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeIndex
::System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::MakeIndex(::System::Linq::Expressions::Expression* instance, ::System::Reflection::PropertyInfo* indexer, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayAccess
::System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::ArrayAccess(::System::Linq::Expressions::Expression* array, ::ArrayW<::System::Linq::Expressions::Expression*> indexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ArrayAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(indexes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, indexes);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayAccess
::System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::ArrayAccess(::System::Linq::Expressions::Expression* array, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* indexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ArrayAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(indexes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, indexes);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
::System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::Property(::System::Linq::Expressions::Expression* instance, ::System::Reflection::PropertyInfo* indexer, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeIndexProperty
::System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::MakeIndexProperty(::System::Linq::Expressions::Expression* instance, ::System::Reflection::PropertyInfo* indexer, ::StringW paramName, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* argList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeIndexProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeIndexProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(argList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, paramName, argList);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateIndexedProperty
void System::Linq::Expressions::Expression::ValidateIndexedProperty(::System::Linq::Expressions::Expression* instance, ::System::Reflection::PropertyInfo* indexer, ::StringW paramName, ByRef<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*> argList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateIndexedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateIndexedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(argList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, paramName, byref(argList));
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateAccessor
void System::Linq::Expressions::Expression::ValidateAccessor(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::ArrayW<::System::Reflection::ParameterInfo*> indexes, ByRef<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*> arguments, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateAccessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateAccessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(indexes), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, indexes, byref(arguments), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateAccessorArgumentTypes
void System::Linq::Expressions::Expression::ValidateAccessorArgumentTypes(::System::Reflection::MethodInfo* method, ::ArrayW<::System::Reflection::ParameterInfo*> indexes, ByRef<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*> arguments, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateAccessorArgumentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateAccessorArgumentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(indexes), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, indexes, byref(arguments), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3, ::System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
::System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(::System::Linq::Expressions::Expression* expression, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetInvokeMethod
::System::Reflection::MethodInfo* System::Linq::Expressions::Expression::GetInvokeMethod(::System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetInvokeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetInvokeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelExpression* System::Linq::Expressions::Expression::Label(::System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelExpression* System::Linq::Expressions::Expression::Label(::System::Linq::Expressions::LabelTarget* target, ::System::Linq::Expressions::Expression* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, defaultValue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
::System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(::System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.CreateLambda
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::CreateLambda(::System::Type* delegateType, ::System::Linq::Expressions::Expression* body, ::StringW name, bool tailCall, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::CreateLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "CreateLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tailCall), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, name, tailCall, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.Lambda
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::Lambda(::System::Type* delegateType, ::System::Linq::Expressions::Expression* body, ::ArrayW<::System::Linq::Expressions::ParameterExpression*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Lambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Lambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.Lambda
::System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::Lambda(::System::Type* delegateType, ::System::Linq::Expressions::Expression* body, ::StringW name, bool tailCall, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::ParameterExpression*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Lambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Lambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tailCall), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, name, tailCall, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateLambdaArgs
void System::Linq::Expressions::Expression::ValidateLambdaArgs(::System::Type* delegateType, ByRef<::System::Linq::Expressions::Expression*> body, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* parameters, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateLambdaArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateLambdaArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, byref(body), parameters, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Loop
::System::Linq::Expressions::LoopExpression* System::Linq::Expressions::Expression::Loop(::System::Linq::Expressions::Expression* body, ::System::Linq::Expressions::LabelTarget* _break, ::System::Linq::Expressions::LabelTarget* _continue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(_break), ::il2cpp_utils::ExtractType(_continue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::LoopExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, body, _break, _continue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Field
::System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Field(::System::Linq::Expressions::Expression* expression, ::System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Field");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Field", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, field);
}
// Autogenerated method: System.Linq.Expressions.Expression.Field
::System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Field(::System::Linq::Expressions::Expression* expression, ::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Field");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Field", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, fieldName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
::System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Property(::System::Linq::Expressions::Expression* expression, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, propertyName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
::System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Property(::System::Linq::Expressions::Expression* expression, ::System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, property);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeMemberAccess
::System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::MakeMemberAccess(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeMemberAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeMemberAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, member);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2, ::System::Linq::Expressions::Expression* arg3, ::System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::ArrayW<::System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Reflection::MethodInfo* method, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::ArrayW<::System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::System::Linq::Expressions::Expression* arg0, ::System::Linq::Expressions::Expression* arg1, ::System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::StringW methodName, ::ArrayW<::System::Type*> typeArguments, ::ArrayW<::System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(typeArguments), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, methodName, typeArguments, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
::System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateMethodAndGetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Linq::Expressions::Expression::ValidateMethodAndGetParameters(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateMethodAndGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateMethodAndGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateStaticOrInstanceMethod
void System::Linq::Expressions::Expression::ValidateStaticOrInstanceMethod(::System::Linq::Expressions::Expression* instance, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateStaticOrInstanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateStaticOrInstanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateCallInstanceType
void System::Linq::Expressions::Expression::ValidateCallInstanceType(::System::Type* instanceType, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateCallInstanceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateCallInstanceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceType), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceType, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateArgumentTypes
void System::Linq::Expressions::Expression::ValidateArgumentTypes(::System::Reflection::MethodBase* method, ::System::Linq::Expressions::ExpressionType nodeKind, ByRef<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*> arguments, ::StringW methodParamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateArgumentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateArgumentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(methodParamName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, byref(arguments), methodParamName);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetParametersForValidation
::ArrayW<::System::Reflection::ParameterInfo*> System::Linq::Expressions::Expression::GetParametersForValidation(::System::Reflection::MethodBase* method, ::System::Linq::Expressions::ExpressionType nodeKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetParametersForValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetParametersForValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateArgumentCount
void System::Linq::Expressions::Expression::ValidateArgumentCount(::System::Reflection::MethodBase* method, ::System::Linq::Expressions::ExpressionType nodeKind, int count, ::ArrayW<::System::Reflection::ParameterInfo*> pis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateArgumentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(pis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, count, pis);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOneArgument
::System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::ValidateOneArgument(::System::Reflection::MethodBase* method, ::System::Linq::Expressions::ExpressionType nodeKind, ::System::Linq::Expressions::Expression* arg, ::System::Reflection::ParameterInfo* pi, ::StringW methodParamName, ::StringW argumentParamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateOneArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOneArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(methodParamName), ::il2cpp_utils::ExtractType(argumentParamName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, arg, pi, methodParamName, argumentParamName);
}
// Autogenerated method: System.Linq.Expressions.Expression.TryQuote
bool System::Linq::Expressions::Expression::TryQuote(::System::Type* parameterType, ByRef<::System::Linq::Expressions::Expression*> argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::TryQuote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TryQuote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterType), ::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameterType, byref(argument));
}
// Autogenerated method: System.Linq.Expressions.Expression.FindMethod
::System::Reflection::MethodInfo* System::Linq::Expressions::Expression::FindMethod(::System::Type* type, ::StringW methodName, ::ArrayW<::System::Type*> typeArgs, ::ArrayW<::System::Linq::Expressions::Expression*> args, ::System::Reflection::BindingFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(typeArgs), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName, typeArgs, args, flags);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsCompatible
bool System::Linq::Expressions::Expression::IsCompatible(::System::Reflection::MethodBase* m, ::ArrayW<::System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsCompatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsCompatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ApplyTypeArgs
::System::Reflection::MethodInfo* System::Linq::Expressions::Expression::ApplyTypeArgs(::System::Reflection::MethodInfo* m, ::ArrayW<::System::Type*> typeArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ApplyTypeArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ApplyTypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(typeArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m, typeArgs);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayInit
::System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayInit(::System::Type* type, ::ArrayW<::System::Linq::Expressions::Expression*> initializers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NewArrayInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(initializers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, initializers);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayInit
::System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayInit(::System::Type* type, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* initializers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NewArrayInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(initializers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, initializers);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayBounds
::System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayBounds(::System::Type* type, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::Expression*>* bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NewArrayBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bounds);
}
// Autogenerated method: System.Linq.Expressions.Expression.Parameter
::System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Parameter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Parameter
::System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Parameter(::System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Variable
::System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Variable(::System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Variable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Variable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Validate
void System::Linq::Expressions::Expression::Validate(::System::Type* type, bool allowByRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(allowByRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, allowByRef);
}
// Autogenerated method: System.Linq.Expressions.Expression.TryFinally
::System::Linq::Expressions::TryExpression* System::Linq::Expressions::Expression::TryFinally(::System::Linq::Expressions::Expression* body, ::System::Linq::Expressions::Expression* finally) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::TryFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TryFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(finally)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::TryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, body, finally);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeTry
::System::Linq::Expressions::TryExpression* System::Linq::Expressions::Expression::MakeTry(::System::Type* type, ::System::Linq::Expressions::Expression* body, ::System::Linq::Expressions::Expression* finally, ::System::Linq::Expressions::Expression* fault, ::System::Collections::Generic::IEnumerable_1<::System::Linq::Expressions::CatchBlock*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(finally), ::il2cpp_utils::ExtractType(fault), ::il2cpp_utils::ExtractType(handlers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::TryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, body, finally, fault, handlers);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateTryAndCatchHaveSameType
void System::Linq::Expressions::Expression::ValidateTryAndCatchHaveSameType(::System::Type* type, ::System::Linq::Expressions::Expression* tryBody, ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::CatchBlock*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ValidateTryAndCatchHaveSameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateTryAndCatchHaveSameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(tryBody), ::il2cpp_utils::ExtractType(handlers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, tryBody, handlers);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeIs
::System::Linq::Expressions::TypeBinaryExpression* System::Linq::Expressions::Expression::TypeIs(::System::Linq::Expressions::Expression* expression, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::TypeIs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeIs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::TypeBinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeEqual
::System::Linq::Expressions::TypeBinaryExpression* System::Linq::Expressions::Expression::TypeEqual(::System::Linq::Expressions::Expression* expression, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::TypeEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::TypeBinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeUnary
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::MakeUnary(::System::Linq::Expressions::ExpressionType unaryType, ::System::Linq::Expressions::Expression* operand, ::System::Type* type, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedUnaryOperatorOrThrow
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedUnaryOperatorOrThrow(::System::Linq::Expressions::ExpressionType unaryType, ::StringW name, ::System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedUnaryOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedUnaryOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, name, operand);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedUnaryOperator
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedUnaryOperator(::System::Linq::Expressions::ExpressionType unaryType, ::StringW name, ::System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedUnaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedUnaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, name, operand);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedUnaryOperator
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetMethodBasedUnaryOperator(::System::Linq::Expressions::ExpressionType unaryType, ::System::Linq::Expressions::Expression* operand, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetMethodBasedUnaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedUnaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedCoercionOrThrow(::System::Linq::Expressions::ExpressionType coercionType, ::System::Linq::Expressions::Expression* expression, ::System::Type* convertToType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedCoercionOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedCoercionOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coercionType), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(convertToType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, coercionType, expression, convertToType);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedCoercion
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedCoercion(::System::Linq::Expressions::ExpressionType coercionType, ::System::Linq::Expressions::Expression* expression, ::System::Type* convertToType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetUserDefinedCoercion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedCoercion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coercionType), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(convertToType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, coercionType, expression, convertToType);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedCoercionOperator
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetMethodBasedCoercionOperator(::System::Linq::Expressions::ExpressionType unaryType, ::System::Linq::Expressions::Expression* operand, ::System::Type* convertToType, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::GetMethodBasedCoercionOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedCoercionOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(convertToType), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, convertToType, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Negate
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Negate(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.UnaryPlus
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::UnaryPlus(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::UnaryPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "UnaryPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.NegateChecked
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::NegateChecked(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::NegateChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NegateChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Not
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Not(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Not");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Not", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsFalse
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::IsFalse(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsTrue
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::IsTrue(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OnesComplement
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::OnesComplement(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::OnesComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OnesComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeAs
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::TypeAs(::System::Linq::Expressions::Expression* expression, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::TypeAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Unbox
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Unbox(::System::Linq::Expressions::Expression* expression, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Unbox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Unbox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Convert
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Convert(::System::Linq::Expressions::Expression* expression, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Convert
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Convert(::System::Linq::Expressions::Expression* expression, ::System::Type* type, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ConvertChecked
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::ConvertChecked(::System::Linq::Expressions::Expression* expression, ::System::Type* type, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ConvertChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ConvertChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayLength
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::ArrayLength(::System::Linq::Expressions::Expression* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Linq.Expressions.Expression.Quote
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Quote(::System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Quote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Quote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Throw
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Throw(::System::Linq::Expressions::Expression* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Increment
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Increment(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Decrement
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Decrement(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreIncrementAssign
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreIncrementAssign(::System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PreIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreIncrementAssign
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreIncrementAssign(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PreIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreDecrementAssign
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreDecrementAssign(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PreDecrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreDecrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PostIncrementAssign
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PostIncrementAssign(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PostIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PostIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PostDecrementAssign
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PostDecrementAssign(::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::PostDecrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PostDecrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeOpAssignUnary
::System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::MakeOpAssignUnary(::System::Linq::Expressions::ExpressionType kind, ::System::Linq::Expressions::Expression* expression, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::MakeOpAssignUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeOpAssignUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kind, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ToString
::StringW System::Linq::Expressions::Expression::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Expression::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Expressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::get_Expressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::get_Expressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Variables
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::BlockExpression::get_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::get_Variables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_ExpressionCount
int System::Linq::Expressions::BlockExpression::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetExpression
::System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpression::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::GetExpression");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetOrMakeExpressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetOrMakeVariables
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::BlockExpression::GetOrMakeVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::GetOrMakeVariables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.Rewrite
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::BlockExpression::Rewrite(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::Rewrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.ReturnReadOnlyExpressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::ReturnReadOnlyExpressions(::System::Linq::Expressions::BlockExpression* provider, ByRef<::Il2CppObject*> collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::ReturnReadOnlyExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BlockExpression", "ReturnReadOnlyExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, byref(collection));
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_NodeType
::System::Linq::Expressions::ExpressionType System::Linq::Expressions::BlockExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Type
::System::Type* System::Linq::Expressions::BlockExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.Accept
::System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpression::Accept(::System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::BlockExpression::Accept");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::Expression*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block2
#include "System/Linq/Expressions/Block2.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
[[deprecated]] ::Il2CppObject*& System::Linq::Expressions::Block2::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block2::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block2.get_ExpressionCount
int System::Linq::Expressions::Block2::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block2.GetExpression
::System::Linq::Expressions::Expression* System::Linq::Expressions::Block2::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::GetExpression");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block2.GetOrMakeExpressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block2::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block2.Rewrite
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block2::Rewrite(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block2::Rewrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block3
#include "System/Linq/Expressions/Block3.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
[[deprecated]] ::Il2CppObject*& System::Linq::Expressions::Block3::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block3::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block3::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block3.get_ExpressionCount
int System::Linq::Expressions::Block3::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block3.GetExpression
::System::Linq::Expressions::Expression* System::Linq::Expressions::Block3::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::GetExpression");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block3.GetOrMakeExpressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block3::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block3.Rewrite
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block3::Rewrite(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block3::Rewrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block4
#include "System/Linq/Expressions/Block4.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
[[deprecated]] ::Il2CppObject*& System::Linq::Expressions::Block4::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
[[deprecated]] ::System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<::System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block4.get_ExpressionCount
int System::Linq::Expressions::Block4::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block4.GetExpression
::System::Linq::Expressions::Expression* System::Linq::Expressions::Block4::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::GetExpression");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block4.GetOrMakeExpressions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block4::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block4.Rewrite
::System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block4::Rewrite(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<::System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Expressions::Block4::Rewrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Expressions::BlockExpression*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
