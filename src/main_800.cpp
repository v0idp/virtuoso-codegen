// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IngameConsole
#include "VROSC/IngameConsole.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& VROSC::IngameConsole::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludes
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& VROSC::IngameConsole::dyn__excludes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__excludes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludes"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showErrors
[[deprecated("Use field access instead!")]] bool& VROSC::IngameConsole::dyn__showErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__showErrors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showErrors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showWarnings
[[deprecated("Use field access instead!")]] bool& VROSC::IngameConsole::dyn__showWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__showWarnings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showWarnings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showLogs
[[deprecated("Use field access instead!")]] bool& VROSC::IngameConsole::dyn__showLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__showLogs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showLogs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lines
[[deprecated("Use field access instead!")]] int& VROSC::IngameConsole::dyn__lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxLines
[[deprecated("Use field access instead!")]] int& VROSC::IngameConsole::dyn__maxLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__maxLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _loggedErrorStacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& VROSC::IngameConsole::dyn__loggedErrorStacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::dyn__loggedErrorStacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loggedErrorStacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IngameConsole.Awake
void VROSC::IngameConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IngameConsole.OnEnable
void VROSC::IngameConsole::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IngameConsole.OnDisable
void VROSC::IngameConsole::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IngameConsole.LogReceived
void VROSC::IngameConsole::LogReceived(::StringW logString, ::StringW stackTrace, ::UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::LogReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(logType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logString, stackTrace, logType);
}
// Autogenerated method: VROSC.IngameConsole.LogErrorToFirebase
void VROSC::IngameConsole::LogErrorToFirebase(::StringW message, ::StringW stack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IngameConsole::LogErrorToFirebase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogErrorToFirebase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, stack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Environment
#include "VROSC/Environment.hpp"
// Including type: VROSC.EnvironmentData
#include "VROSC/EnvironmentData.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.EnvironmentData _data
[[deprecated("Use field access instead!")]] ::VROSC::EnvironmentData*& VROSC::Environment::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::VROSC::EnvironmentData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _effectsAmount
[[deprecated("Use field access instead!")]] float& VROSC::Environment::dyn__effectsAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::dyn__effectsAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectsAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Environment.get_Data
::VROSC::EnvironmentData* VROSC::Environment::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::EnvironmentData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.get_SkyboxMaterial
::UnityEngine::Material* VROSC::Environment::get_SkyboxMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::get_SkyboxMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkyboxMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.get_BassModifier
float VROSC::Environment::get_BassModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::get_BassModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BassModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.get_MidModifier
float VROSC::Environment::get_MidModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::get_MidModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MidModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.get_TopModifier
float VROSC::Environment::get_TopModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::get_TopModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.SetEffectsAmount
void VROSC::Environment::SetEffectsAmount(float effectsAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::SetEffectsAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEffectsAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectsAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effectsAmount);
}
// Autogenerated method: VROSC.Environment.Awake
void VROSC::Environment::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.SetAllSubObjectsToEnvironmentLayer
void VROSC::Environment::SetAllSubObjectsToEnvironmentLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::SetAllSubObjectsToEnvironmentLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllSubObjectsToEnvironmentLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Environment.GetChildrenRecurisve
void VROSC::Environment::GetChildrenRecurisve(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* list, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Environment::GetChildrenRecurisve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildrenRecurisve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, gameObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.EnvironmentController
#include "VROSC/EnvironmentController.hpp"
// Including type: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27
#include "VROSC/EnvironmentController_-FadeToOtherEnvironment-d__27.hpp"
// Including type: VROSC.EnvironmentData
#include "VROSC/EnvironmentData.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.Environment
#include "VROSC/Environment.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Environment> OnNewEnvironment
::System::Action_1<::VROSC::Environment*>* VROSC::EnvironmentController::_get_OnNewEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::_get_OnNewEnvironment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Environment*>*>("VROSC", "EnvironmentController", "OnNewEnvironment"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Environment> OnNewEnvironment
void VROSC::EnvironmentController::_set_OnNewEnvironment(::System::Action_1<::VROSC::Environment*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::_set_OnNewEnvironment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "EnvironmentController", "OnNewEnvironment", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.EnvironmentData _startEnvironment
[[deprecated("Use field access instead!")]] ::VROSC::EnvironmentData*& VROSC::EnvironmentController::dyn__startEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn__startEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startEnvironment"))->offset;
  return *reinterpret_cast<::VROSC::EnvironmentData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _screenFadeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::EnvironmentController::dyn__screenFadeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn__screenFadeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenFadeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _screenFadeTime
[[deprecated("Use field access instead!")]] float& VROSC::EnvironmentController::dyn__screenFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn__screenFadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenFadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _scenes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& VROSC::EnvironmentController::dyn__scenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn__scenes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Environment <CurrentEnvironment>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::Environment*& VROSC::EnvironmentController::dyn_$CurrentEnvironment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn_$CurrentEnvironment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentEnvironment>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Environment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <EffectsAmount>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::EnvironmentController::dyn_$EffectsAmount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn_$EffectsAmount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EffectsAmount>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.Environment> _environments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::Environment*>*& VROSC::EnvironmentController::dyn__environments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn__environments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::Environment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ScenesLoaded>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::EnvironmentController::dyn_$ScenesLoaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::dyn_$ScenesLoaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ScenesLoaded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.EnvironmentController.get_StartEnvironment
::VROSC::EnvironmentData* VROSC::EnvironmentController::get_StartEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::get_StartEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::EnvironmentData*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.get_CurrentEnvironment
::VROSC::Environment* VROSC::EnvironmentController::get_CurrentEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::get_CurrentEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Environment*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.set_CurrentEnvironment
void VROSC::EnvironmentController::set_CurrentEnvironment(::VROSC::Environment* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::set_CurrentEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.EnvironmentController.get_EffectsAmount
float VROSC::EnvironmentController::get_EffectsAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::get_EffectsAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EffectsAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.set_EffectsAmount
void VROSC::EnvironmentController::set_EffectsAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::set_EffectsAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EffectsAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.EnvironmentController.get_ScenesLoaded
bool VROSC::EnvironmentController::get_ScenesLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::get_ScenesLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScenesLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.set_ScenesLoaded
void VROSC::EnvironmentController::set_ScenesLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::set_ScenesLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScenesLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.EnvironmentController.Awake
void VROSC::EnvironmentController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.OnDestroy
void VROSC::EnvironmentController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.OnApplicationQuit
void VROSC::EnvironmentController::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.LoadScenes
void VROSC::EnvironmentController::LoadScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::LoadScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.SceneLoaded
void VROSC::EnvironmentController::SceneLoaded(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::SceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, mode);
}
// Autogenerated method: VROSC.EnvironmentController.SetEnvironment
void VROSC::EnvironmentController::SetEnvironment(::VROSC::EnvironmentData* environmentData, bool animate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::SetEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentData), ::il2cpp_utils::ExtractType(animate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, environmentData, animate);
}
// Autogenerated method: VROSC.EnvironmentController.SetEnvironment
void VROSC::EnvironmentController::SetEnvironment(::VROSC::Environment* environment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::SetEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, environment);
}
// Autogenerated method: VROSC.EnvironmentController.FadeToOtherEnvironment
::System::Collections::IEnumerator* VROSC::EnvironmentController::FadeToOtherEnvironment(::VROSC::Environment* environment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::FadeToOtherEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeToOtherEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environment)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, environment);
}
// Autogenerated method: VROSC.EnvironmentController.ActivateEnvironment
void VROSC::EnvironmentController::ActivateEnvironment(::VROSC::Environment* environment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::ActivateEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, environment);
}
// Autogenerated method: VROSC.EnvironmentController.HideCurrentEnvironment
void VROSC::EnvironmentController::HideCurrentEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::HideCurrentEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideCurrentEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController.SetEnvironmentEffectsInput
void VROSC::EnvironmentController::SetEnvironmentEffectsInput(float effectsAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::SetEnvironmentEffectsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnvironmentEffectsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectsAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effectsAmount);
}
// Autogenerated method: VROSC.EnvironmentController.GetEnvironment
::VROSC::Environment* VROSC::EnvironmentController::GetEnvironment(::StringW environmentId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::GetEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentId)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Environment*, false>(this, ___internal__method, environmentId);
}
// Autogenerated method: VROSC.EnvironmentController.UserDataLoaded
void VROSC::EnvironmentController::UserDataLoaded(::VROSC::UserDataControllers* userDataControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::UserDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userDataControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userDataControllers);
}
// Autogenerated method: VROSC.EnvironmentController.SessionDataLoaded
void VROSC::EnvironmentController::SessionDataLoaded(::VROSC::UserDataControllers* userDataControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::SessionDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SessionDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userDataControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userDataControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27
#include "VROSC/EnvironmentController_-FadeToOtherEnvironment-d__27.hpp"
// Including type: VROSC.Environment
#include "VROSC/Environment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.EnvironmentController <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::EnvironmentController*& VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::EnvironmentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.Environment environment
[[deprecated("Use field access instead!")]] ::VROSC::Environment*& VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_environment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::dyn_environment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environment"))->offset;
  return *reinterpret_cast<::VROSC::Environment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27.System.IDisposable.Dispose
void VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27.MoveNext
bool VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentController/VROSC.<FadeToOtherEnvironment>d__27.System.Collections.IEnumerator.Reset
void VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::EnvironmentController::$FadeToOtherEnvironment$d__27*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.EnvironmentData
#include "VROSC/EnvironmentData.hpp"
// Including type: VROSC.Environment
#include "VROSC/Environment.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Environment _prefab
[[deprecated("Use field access instead!")]] ::VROSC::Environment*& VROSC::EnvironmentData::dyn__prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefab"))->offset;
  return *reinterpret_cast<::VROSC::Environment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _previewImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& VROSC::EnvironmentData::dyn__previewImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__previewImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::EnvironmentData::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _id
[[deprecated("Use field access instead!")]] ::StringW& VROSC::EnvironmentData::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _skyboxMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& VROSC::EnvironmentData::dyn__skyboxMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__skyboxMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skyboxMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bass
[[deprecated("Use field access instead!")]] float& VROSC::EnvironmentData::dyn__bass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__bass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bass"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mid
[[deprecated("Use field access instead!")]] float& VROSC::EnvironmentData::dyn__mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__mid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mid"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _top
[[deprecated("Use field access instead!")]] float& VROSC::EnvironmentData::dyn__top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::dyn__top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_top"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.EnvironmentData.get_Prefab
::VROSC::Environment* VROSC::EnvironmentData::get_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_Prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Environment*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_PreviewImage
::UnityEngine::Texture2D* VROSC::EnvironmentData::get_PreviewImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_PreviewImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreviewImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_DisplayName
::StringW VROSC::EnvironmentData::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_ID
::StringW VROSC::EnvironmentData::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_SkyboxMaterial
::UnityEngine::Material* VROSC::EnvironmentData::get_SkyboxMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_SkyboxMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkyboxMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_BassEffect
float VROSC::EnvironmentData::get_BassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_BassEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BassEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_MidEffect
float VROSC::EnvironmentData::get_MidEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_MidEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MidEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.EnvironmentData.get_TopEffect
float VROSC::EnvironmentData::get_TopEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EnvironmentData::get_TopEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SyncAnimationToBeat
#include "VROSC/SyncAnimationToBeat.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _animationMatchesBPM
[[deprecated("Use field access instead!")]] float& VROSC::SyncAnimationToBeat::dyn__animationMatchesBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::dyn__animationMatchesBPM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationMatchesBPM"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& VROSC::SyncAnimationToBeat::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playbackSpeed
[[deprecated("Use field access instead!")]] float& VROSC::SyncAnimationToBeat::dyn__playbackSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::dyn__playbackSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SyncAnimationToBeat.OnEnable
void VROSC::SyncAnimationToBeat::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SyncAnimationToBeat.SyncAnimator
void VROSC::SyncAnimationToBeat::SyncAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::SyncAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SyncAnimationToBeat.OnDisable
void VROSC::SyncAnimationToBeat::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SyncAnimationToBeat.BPMChanged
void VROSC::SyncAnimationToBeat::BPMChanged(float newBPM) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::BPMChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BPMChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBPM)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBPM);
}
// Autogenerated method: VROSC.SyncAnimationToBeat.SyncNextBeat
void VROSC::SyncAnimationToBeat::SyncNextBeat(int obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SyncAnimationToBeat::SyncNextBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncNextBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Rotator
#include "VROSC/Rotator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::Rotator::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Rotator::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Rotator.Update
void VROSC::Rotator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Rotator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SmoothMovement
#include "VROSC/SmoothMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <SmoothPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SmoothMovement::dyn_$SmoothPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::dyn_$SmoothPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SmoothPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _smoothingVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SmoothMovement::dyn__smoothingVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::dyn__smoothingVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothingVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _needsReset
[[deprecated("Use field access instead!")]] bool& VROSC::SmoothMovement::dyn__needsReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::dyn__needsReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_needsReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SmoothMovement.get_SmoothPosition
::UnityEngine::Vector3 VROSC::SmoothMovement::get_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::get_SmoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SmoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SmoothMovement.set_SmoothPosition
void VROSC::SmoothMovement::set_SmoothPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::set_SmoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SmoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.SmoothMovement.Update
void VROSC::SmoothMovement::Update(::UnityEngine::Vector3 position, float smoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(smoothing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, smoothing);
}
// Autogenerated method: VROSC.SmoothMovement.ResetSmoothing
void VROSC::SmoothMovement::ResetSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SmoothMovement::ResetSmoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetSmoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Launchpad
#include "VROSC/Launchpad.hpp"
// Including type: VROSC.Launchpad/VROSC.<LaunchpadHit>d__27
#include "VROSC/Launchpad_-LaunchpadHit-d__27.hpp"
// Including type: VROSC.TransformMover
#include "VROSC/TransformMover.hpp"
// Including type: VROSC.PadUI
#include "VROSC/PadUI.hpp"
// Including type: VROSC.LaunchPadEffectOnSignal
#include "VROSC/LaunchPadEffectOnSignal.hpp"
// Including type: VROSC.PredictiveHittable
#include "VROSC/PredictiveHittable.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.LaunchpadSpawner
#include "VROSC/LaunchpadSpawner.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
// Including type: VROSC.GrabData
#include "VROSC/GrabData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.TransformMover _mover
[[deprecated("Use field access instead!")]] ::VROSC::TransformMover*& VROSC::Launchpad::dyn__mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__mover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mover"))->offset;
  return *reinterpret_cast<::VROSC::TransformMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PadUI _UI
[[deprecated("Use field access instead!")]] ::VROSC::PadUI*& VROSC::Launchpad::dyn__UI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__UI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UI"))->offset;
  return *reinterpret_cast<::VROSC::PadUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.LaunchPadEffectOnSignal _visual
[[deprecated("Use field access instead!")]] ::VROSC::LaunchPadEffectOnSignal*& VROSC::Launchpad::dyn__visual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__visual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visual"))->offset;
  return *reinterpret_cast<::VROSC::LaunchPadEffectOnSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PredictiveHittable _hittable
[[deprecated("Use field access instead!")]] ::VROSC::PredictiveHittable*& VROSC::Launchpad::dyn__hittable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__hittable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hittable"))->offset;
  return *reinterpret_cast<::VROSC::PredictiveHittable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _trackName
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& VROSC::Launchpad::dyn__trackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__trackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackName"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LaunchpadSpawner _launchpadSpawner
[[deprecated("Use field access instead!")]] ::VROSC::LaunchpadSpawner*& VROSC::Launchpad::dyn__launchpadSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__launchpadSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadSpawner"))->offset;
  return *reinterpret_cast<::VROSC::LaunchpadSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadHit
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::Launchpad::dyn_OnLaunchPadHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn_OnLaunchPadHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadHit"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadMoved
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::Launchpad::dyn_OnLaunchPadMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn_OnLaunchPadMoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadMoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadDeletedByUser
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::Launchpad::dyn_OnLaunchPadDeletedByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn_OnLaunchPadDeletedByUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadDeletedByUser"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VROSC::Launchpad::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TargetID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VROSC::Launchpad::dyn_$TargetID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn_$TargetID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _overlaps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& VROSC::Launchpad::dyn__overlaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__overlaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlaps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LaunchpadSpawner _overlappingSpawner
[[deprecated("Use field access instead!")]] ::VROSC::LaunchpadSpawner*& VROSC::Launchpad::dyn__overlappingSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__overlappingSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overlappingSpawner"))->offset;
  return *reinterpret_cast<::VROSC::LaunchpadSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnerDeleteDistance
[[deprecated("Use field access instead!")]] float& VROSC::Launchpad::dyn__spawnerDeleteDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::dyn__spawnerDeleteDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnerDeleteDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Launchpad.get_Mover
::VROSC::TransformMover* VROSC::Launchpad::get_Mover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::get_Mover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TransformMover*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.get_ID
::StringW VROSC::Launchpad::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.set_ID
void VROSC::Launchpad::set_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Launchpad.get_TargetID
::StringW VROSC::Launchpad::get_TargetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::get_TargetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.set_TargetID
void VROSC::Launchpad::set_TargetID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::set_TargetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Launchpad.Awake
void VROSC::Launchpad::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.OnDestroy
void VROSC::Launchpad::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Launchpad*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.Setup
void VROSC::Launchpad::Setup(::VROSC::LaunchpadSpawner* launchpadSpawner, ::StringW id, ::StringW targetID, ::StringW displayName, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Launchpad*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpadSpawner, id, targetID, displayName, color);
}
// Autogenerated method: VROSC.Launchpad.SetColor
void VROSC::Launchpad::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.Launchpad.SetDisplayName
void VROSC::Launchpad::SetDisplayName(::StringW newName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::SetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newName);
}
// Autogenerated method: VROSC.Launchpad.LaunchpadHit
void VROSC::Launchpad::LaunchpadHit(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::LaunchpadHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchpadHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.Launchpad.Grab
void VROSC::Launchpad::Grab(::VROSC::GrabData* grabData, bool grabbing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grabData), ::il2cpp_utils::ExtractType(grabbing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabData, grabbing);
}
// Autogenerated method: VROSC.Launchpad.GrabEnded
void VROSC::Launchpad::GrabEnded(::VROSC::TransformMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::GrabEnded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabEnded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.Launchpad.DeletePressed
void VROSC::Launchpad::DeletePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::DeletePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeletePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad.Delete
void VROSC::Launchpad::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Launchpad/VROSC.<LaunchpadHit>d__27
#include "VROSC/Launchpad_-LaunchpadHit-d__27.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.Launchpad <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::Launchpad*& VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::Launchpad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.Signal signal
[[deprecated("Use field access instead!")]] ::VROSC::Signal*& VROSC::Launchpad::$LaunchpadHit$d__27::dyn_signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::dyn_signal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signal"))->offset;
  return *reinterpret_cast<::VROSC::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Launchpad/VROSC.<LaunchpadHit>d__27.MoveNext
void VROSC::Launchpad::$LaunchpadHit$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::Launchpad::$LaunchpadHit$d__27), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Launchpad/VROSC.<LaunchpadHit>d__27.SetStateMachine
void VROSC::Launchpad::$LaunchpadHit$d__27::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Launchpad::$LaunchpadHit$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::Launchpad::$LaunchpadHit$d__27), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LaunchpadSpawner
#include "VROSC/LaunchpadSpawner.hpp"
// Including type: VROSC.Launchpad
#include "VROSC/Launchpad.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
// Including type: VROSC.GrabData
#include "VROSC/GrabData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Launchpad _launchpadPrefab
[[deprecated("Use field access instead!")]] ::VROSC::Launchpad*& VROSC::LaunchpadSpawner::dyn__launchpadPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__launchpadPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchpadPrefab"))->offset;
  return *reinterpret_cast<::VROSC::Launchpad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::LaunchpadSpawner::dyn__spawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__spawnPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.Launchpad> _spawnedLaunchPads
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::Launchpad*>*& VROSC::LaunchpadSpawner::dyn__spawnedLaunchPads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__spawnedLaunchPads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnedLaunchPads"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadCreated
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::LaunchpadSpawner::dyn_OnLaunchPadCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnLaunchPadCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadCreated"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadMoved
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::LaunchpadSpawner::dyn_OnLaunchPadMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnLaunchPadMoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadMoved"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadDeleted
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::LaunchpadSpawner::dyn_OnLaunchPadDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnLaunchPadDeleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadDeleted"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Launchpad> OnLaunchPadHit
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Launchpad*>*& VROSC::LaunchpadSpawner::dyn_OnLaunchPadHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnLaunchPadHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLaunchPadHit"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Launchpad*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Color> OnTargetColorChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Color>*& VROSC::LaunchpadSpawner::dyn_OnTargetColorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnTargetColorChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTargetColorChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> OnTargetNameChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::LaunchpadSpawner::dyn_OnTargetNameChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_OnTargetNameChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTargetNameChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CurrentName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VROSC::LaunchpadSpawner::dyn_$CurrentName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_$CurrentName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <CurrentColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& VROSC::LaunchpadSpawner::dyn_$CurrentColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn_$CurrentColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _targetID
[[deprecated("Use field access instead!")]] ::StringW& VROSC::LaunchpadSpawner::dyn__targetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__targetID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _launchPadParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::LaunchpadSpawner::dyn__launchPadParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__launchPadParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_launchPadParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Launchpad _currentlyHeldLaunchpad
[[deprecated("Use field access instead!")]] ::VROSC::Launchpad*& VROSC::LaunchpadSpawner::dyn__currentlyHeldLaunchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::dyn__currentlyHeldLaunchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyHeldLaunchpad"))->offset;
  return *reinterpret_cast<::VROSC::Launchpad**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LaunchpadSpawner.get_CurrentName
::StringW VROSC::LaunchpadSpawner::get_CurrentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::get_CurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LaunchpadSpawner.set_CurrentName
void VROSC::LaunchpadSpawner::set_CurrentName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::set_CurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LaunchpadSpawner.get_CurrentColor
::UnityEngine::Color VROSC::LaunchpadSpawner::get_CurrentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::get_CurrentColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LaunchpadSpawner.set_CurrentColor
void VROSC::LaunchpadSpawner::set_CurrentColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::set_CurrentColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LaunchpadSpawner.Setup
void VROSC::LaunchpadSpawner::Setup(::StringW targetID, ::UnityEngine::Transform* launchPadParent, ::StringW displayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetID), ::il2cpp_utils::ExtractType(launchPadParent), ::il2cpp_utils::ExtractType(displayName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetID, launchPadParent, displayName);
}
// Autogenerated method: VROSC.LaunchpadSpawner.SpawnLaunchpad
::VROSC::Launchpad* VROSC::LaunchpadSpawner::SpawnLaunchpad(::StringW padID, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 localScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::SpawnLaunchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnLaunchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(localScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Launchpad*, false>(this, ___internal__method, padID, position, rotation, localScale);
}
// Autogenerated method: VROSC.LaunchpadSpawner.LaunchPadHit
void VROSC::LaunchpadSpawner::LaunchPadHit(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::LaunchPadHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LaunchpadSpawner.LaunchPadMoved
void VROSC::LaunchpadSpawner::LaunchPadMoved(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::LaunchPadMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LaunchpadSpawner.LaunchPadDeleted
void VROSC::LaunchpadSpawner::LaunchPadDeleted(::VROSC::Launchpad* launchpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::LaunchPadDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchPadDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchpad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpad);
}
// Autogenerated method: VROSC.LaunchpadSpawner.LoadLaunchPad
::VROSC::Launchpad* VROSC::LaunchpadSpawner::LoadLaunchPad(::StringW padID, ::VROSC::TransformDataController* transformData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::LoadLaunchPad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLaunchPad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padID), ::il2cpp_utils::ExtractType(transformData)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Launchpad*, false>(this, ___internal__method, padID, transformData);
}
// Autogenerated method: VROSC.LaunchpadSpawner.SetLaunchpadColor
void VROSC::LaunchpadSpawner::SetLaunchpadColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::SetLaunchpadColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaunchpadColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.LaunchpadSpawner.SetLaunchpadDisplayName
void VROSC::LaunchpadSpawner::SetLaunchpadDisplayName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::SetLaunchpadDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaunchpadDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: VROSC.LaunchpadSpawner.TearDown
void VROSC::LaunchpadSpawner::TearDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::TearDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TearDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LaunchpadSpawner.Grab
void VROSC::LaunchpadSpawner::Grab(::VROSC::GrabData* grabData, bool grabbing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LaunchpadSpawner::Grab");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Grabable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabData, grabbing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PlayButtonLaunchpad
#include "VROSC/PlayButtonLaunchpad.hpp"
// Including type: VROSC.LoopPlayButton
#include "VROSC/LoopPlayButton.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.OverridePlaybackSettingsUI
#include "VROSC/OverridePlaybackSettingsUI.hpp"
// Including type: VROSC.LoopPlaybackSettingsUI
#include "VROSC/LoopPlaybackSettingsUI.hpp"
// Including type: VROSC.LoopPlaybackSettingsToggle
#include "VROSC/LoopPlaybackSettingsToggle.hpp"
// Including type: VROSC.LoopPlaybackConfig
#include "VROSC/LoopPlaybackConfig.hpp"
// Including type: VROSC.LaunchpadSpawner
#include "VROSC/LaunchpadSpawner.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlayButton _loopPlayButton
[[deprecated("Use field access instead!")]] ::VROSC::LoopPlayButton*& VROSC::PlayButtonLaunchpad::dyn__loopPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__loopPlayButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlayButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlayButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _updaterMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& VROSC::PlayButtonLaunchpad::dyn__updaterMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__updaterMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updaterMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _timingMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& VROSC::PlayButtonLaunchpad::dyn__timingMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__timingMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timingMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _startIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& VROSC::PlayButtonLaunchpad::dyn__startIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__startIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _stopIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& VROSC::PlayButtonLaunchpad::dyn__stopIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__stopIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.OverridePlaybackSettingsUI _overridePlaybackSettingsUI
[[deprecated("Use field access instead!")]] ::VROSC::OverridePlaybackSettingsUI*& VROSC::PlayButtonLaunchpad::dyn__overridePlaybackSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__overridePlaybackSettingsUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overridePlaybackSettingsUI"))->offset;
  return *reinterpret_cast<::VROSC::OverridePlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsUI _loopPlaybackSettingsUI
[[deprecated("Use field access instead!")]] ::VROSC::LoopPlaybackSettingsUI*& VROSC::PlayButtonLaunchpad::dyn__loopPlaybackSettingsUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__loopPlaybackSettingsUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopPlaybackSettingsUI"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoopPlaybackSettingsToggle _toggleButton
[[deprecated("Use field access instead!")]] ::VROSC::LoopPlaybackSettingsToggle*& VROSC::PlayButtonLaunchpad::dyn__toggleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::dyn__toggleButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleButton"))->offset;
  return *reinterpret_cast<::VROSC::LoopPlaybackSettingsToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.AssignConfig
void VROSC::PlayButtonLaunchpad::AssignConfig(::VROSC::LoopPlaybackConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::AssignConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, config);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.Unassign
void VROSC::PlayButtonLaunchpad::Unassign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::Unassign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unassign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.AssignButton
void VROSC::PlayButtonLaunchpad::AssignButton(::VROSC::LoopPlayButton* loopPlayButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::AssignButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loopPlayButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loopPlayButton);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.UpdateLoopPlayer
void VROSC::PlayButtonLaunchpad::UpdateLoopPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::UpdateLoopPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLoopPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.Update
void VROSC::PlayButtonLaunchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.LoopIsPlaying
void VROSC::PlayButtonLaunchpad::LoopIsPlaying(bool isPlaying) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::LoopIsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopIsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPlaying)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPlaying);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.Setup
void VROSC::PlayButtonLaunchpad::Setup(::VROSC::LaunchpadSpawner* launchpadSpawner, ::StringW id, ::StringW targetID, ::StringW displayName, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Launchpad*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, launchpadSpawner, id, targetID, displayName, color);
}
// Autogenerated method: VROSC.PlayButtonLaunchpad.OnDestroy
void VROSC::PlayButtonLaunchpad::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayButtonLaunchpad::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::Launchpad*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.DisableMallets
#include "VROSC/DisableMallets.hpp"
// Including type: VROSC.ControllerInputNode
#include "VROSC/ControllerInputNode.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.ControllerInputNode _controllerInputNode
[[deprecated("Use field access instead!")]] ::VROSC::ControllerInputNode*& VROSC::DisableMallets::dyn__controllerInputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DisableMallets::dyn__controllerInputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerInputNode"))->offset;
  return *reinterpret_cast<::VROSC::ControllerInputNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.DisableMallets.Awake
void VROSC::DisableMallets::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DisableMallets::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.DisableMallets.HoverBegin
void VROSC::DisableMallets::HoverBegin(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DisableMallets::HoverBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.DisableMallets.HoverEnd
void VROSC::DisableMallets::HoverEnd(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DisableMallets::HoverEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GrabMalletButton
#include "VROSC/GrabMalletButton.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _grabSticksButton
[[deprecated("Use field access instead!")]] ::VROSC::UIButton*& VROSC::GrabMalletButton::dyn__grabSticksButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabMalletButton::dyn__grabSticksButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabSticksButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _grabBoth
[[deprecated("Use field access instead!")]] bool& VROSC::GrabMalletButton::dyn__grabBoth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabMalletButton::dyn__grabBoth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabBoth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.GrabMalletButton.Awake
void VROSC::GrabMalletButton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabMalletButton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GrabMalletButton.OnDestroy
void VROSC::GrabMalletButton::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabMalletButton::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GrabMalletButton.GrabSticks
void VROSC::GrabMalletButton::GrabSticks(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GrabMalletButton::GrabSticks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabSticks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.KeyHitter
#include "VROSC/KeyHitter.hpp"
// Including type: VROSC.SimpleHaptic
#include "VROSC/SimpleHaptic.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Key
#include "GlobalNamespace/Key.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SimpleHaptic _haptic
[[deprecated("Use field access instead!")]] ::VROSC::SimpleHaptic*& VROSC::KeyHitter::dyn__haptic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::dyn__haptic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_haptic"))->offset;
  return *reinterpret_cast<::VROSC::SimpleHaptic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& VROSC::KeyHitter::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputDevice _device
[[deprecated("Use field access instead!")]] ::VROSC::InputDevice*& VROSC::KeyHitter::dyn__device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::dyn__device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_device"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _followTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::KeyHitter::dyn__followTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::dyn__followTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_followTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& VROSC::KeyHitter::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.KeyHitter.Awake
void VROSC::KeyHitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.KeyHitter.Setup
void VROSC::KeyHitter::Setup(::VROSC::InputDevice* device, ::UnityEngine::Transform* followTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(followTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, followTransform);
}
// Autogenerated method: VROSC.KeyHitter.FollowObject
void VROSC::KeyHitter::FollowObject(::UnityEngine::Transform* followTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::FollowObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FollowObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(followTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, followTransform);
}
// Autogenerated method: VROSC.KeyHitter.OnEnable
void VROSC::KeyHitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.KeyHitter.OnDisable
void VROSC::KeyHitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.KeyHitter.Update
void VROSC::KeyHitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.KeyHitter.KeyPressedHapticFeedback
void VROSC::KeyHitter::KeyPressedHapticFeedback(::GlobalNamespace::Key* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::KeyHitter::KeyPressedHapticFeedback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPressedHapticFeedback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Mallet
#include "VROSC/Mallet.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.MalletVisual
#include "VROSC/MalletVisual.hpp"
// Including type: VROSC.PredictiveHitter
#include "VROSC/PredictiveHitter.hpp"
// Including type: VROSC.MalletGrabbing
#include "VROSC/MalletGrabbing.hpp"
// Including type: VROSC.MalletAnimator
#include "VROSC/MalletAnimator.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stick
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::Mallet::dyn__stick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__stick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stick"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MalletVisual _malletVisual
[[deprecated("Use field access instead!")]] ::VROSC::MalletVisual*& VROSC::Mallet::dyn__malletVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__malletVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_malletVisual"))->offset;
  return *reinterpret_cast<::VROSC::MalletVisual**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PredictiveHitter _predictiveHitter
[[deprecated("Use field access instead!")]] ::VROSC::PredictiveHitter*& VROSC::Mallet::dyn__predictiveHitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__predictiveHitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_predictiveHitter"))->offset;
  return *reinterpret_cast<::VROSC::PredictiveHitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MalletGrabbing _grabbing
[[deprecated("Use field access instead!")]] ::VROSC::MalletGrabbing*& VROSC::Mallet::dyn__grabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__grabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grabbing"))->offset;
  return *reinterpret_cast<::VROSC::MalletGrabbing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MalletAnimator _animator
[[deprecated("Use field access instead!")]] ::VROSC::MalletAnimator*& VROSC::Mallet::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::VROSC::MalletAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TriggerButton _holdingButton
[[deprecated("Use field access instead!")]] ::VROSC::TriggerButton& VROSC::Mallet::dyn__holdingButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn__holdingButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_holdingButton"))->offset;
  return *reinterpret_cast<::VROSC::TriggerButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InputDevice <InputDevice>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::InputDevice*& VROSC::Mallet::dyn_$InputDevice$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn_$InputDevice$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InputDevice>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Active>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::Mallet::dyn_$Active$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::dyn_$Active$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Active>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Mallet.get_InputDevice
::VROSC::InputDevice* VROSC::Mallet::get_InputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::get_InputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InputDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.set_InputDevice
void VROSC::Mallet::set_InputDevice(::VROSC::InputDevice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::set_InputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Mallet.get_InteractionPoint
::UnityEngine::Transform* VROSC::Mallet::get_InteractionPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::get_InteractionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.get_PredictiveHitter
::VROSC::PredictiveHitter* VROSC::Mallet::get_PredictiveHitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::get_PredictiveHitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PredictiveHitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::PredictiveHitter*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.get_Active
bool VROSC::Mallet::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.set_Active
void VROSC::Mallet::set_Active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::set_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.Mallet.Awake
void VROSC::Mallet::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.OnDestroy
void VROSC::Mallet::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Mallet.Setup
void VROSC::Mallet::Setup(::VROSC::InputDevice* inputDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice);
}
// Autogenerated method: VROSC.Mallet.SetLength
void VROSC::Mallet::SetLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: VROSC.Mallet.SetAngle
void VROSC::Mallet::SetAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::SetAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle);
}
// Autogenerated method: VROSC.Mallet.Grab
void VROSC::Mallet::Grab(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::Grab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: VROSC.Mallet.Drop
void VROSC::Mallet::Drop(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::Drop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Drop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: VROSC.Mallet.SetActive
void VROSC::Mallet::SetActive(bool shouldUseMallets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldUseMallets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shouldUseMallets);
}
// Autogenerated method: VROSC.Mallet.AnimationFinished
void VROSC::Mallet::AnimationFinished(bool malletsActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Mallet::AnimationFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimationFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(malletsActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, malletsActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MalletAnimator
#include "VROSC/MalletAnimator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.LocalTransformData
#include "VROSC/LocalTransformData.hpp"
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> OnFinished
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& VROSC::MalletAnimator::dyn_OnFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn_OnFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFinished"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& VROSC::MalletAnimator::dyn__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset _enterTimeline
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableAsset*& VROSC::MalletAnimator::dyn__enterTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__enterTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterTimeline"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset _exitTimeline
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableAsset*& VROSC::MalletAnimator::dyn__exitTimeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__exitTimeline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitTimeline"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _startPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::MalletAnimator::dyn__startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LocalTransformData _defaultStartPosition
[[deprecated("Use field access instead!")]] ::VROSC::LocalTransformData*& VROSC::MalletAnimator::dyn__defaultStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__defaultStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultStartPosition"))->offset;
  return *reinterpret_cast<::VROSC::LocalTransformData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& VROSC::MalletAnimator::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MalletAnimator.Awake
void VROSC::MalletAnimator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletAnimator.SetActive
void VROSC::MalletAnimator::SetActive(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.MalletAnimator.GrabbedAt
void VROSC::MalletAnimator::GrabbedAt(::VROSC::ClickData* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::GrabbedAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabbedAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: VROSC.MalletAnimator.OnDestroy
void VROSC::MalletAnimator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletAnimator.OnPlayableDirectorStopped
void VROSC::MalletAnimator::OnPlayableDirectorStopped(::UnityEngine::Playables::PlayableDirector* aDirector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletAnimator::OnPlayableDirectorStopped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDirectorStopped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDirector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDirector);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MalletGrabbing
#include "VROSC/MalletGrabbing.hpp"
// Including type: VROSC.Mallet
#include "VROSC/Mallet.hpp"
// Including type: VROSC.MalletSettings
#include "VROSC/MalletSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Mallet _mallet
[[deprecated("Use field access instead!")]] ::VROSC::Mallet*& VROSC::MalletGrabbing::dyn__mallet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__mallet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mallet"))->offset;
  return *reinterpret_cast<::VROSC::Mallet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MalletSettings _malletSettings
[[deprecated("Use field access instead!")]] ::VROSC::MalletSettings*& VROSC::MalletGrabbing::dyn__malletSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__malletSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_malletSettings"))->offset;
  return *reinterpret_cast<::VROSC::MalletSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isGrabbing
[[deprecated("Use field access instead!")]] bool& VROSC::MalletGrabbing::dyn__isGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__isGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _changeTimer
[[deprecated("Use field access instead!")]] float& VROSC::MalletGrabbing::dyn__changeTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__changeTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hitTimer
[[deprecated("Use field access instead!")]] float& VROSC::MalletGrabbing::dyn__hitTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__hitTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _laserWasHovering
[[deprecated("Use field access instead!")]] bool& VROSC::MalletGrabbing::dyn__laserWasHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__laserWasHovering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserWasHovering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _laserIsDim
[[deprecated("Use field access instead!")]] bool& VROSC::MalletGrabbing::dyn__laserIsDim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__laserIsDim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserIsDim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _userDisabledLaser
[[deprecated("Use field access instead!")]] bool& VROSC::MalletGrabbing::dyn__userDisabledLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::dyn__userDisabledLaser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userDisabledLaser"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MalletGrabbing.Awake
void VROSC::MalletGrabbing::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletGrabbing.OnDestroy
void VROSC::MalletGrabbing::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletGrabbing.OnHitDSP
void VROSC::MalletGrabbing::OnHitDSP(float predictedTime, bool dimLaser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::OnHitDSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHitDSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predictedTime), ::il2cpp_utils::ExtractType(dimLaser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, predictedTime, dimLaser);
}
// Autogenerated method: VROSC.MalletGrabbing.ToggleUserDisabledLaser
void VROSC::MalletGrabbing::ToggleUserDisabledLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::ToggleUserDisabledLaser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleUserDisabledLaser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletGrabbing.SetActive
void VROSC::MalletGrabbing::SetActive(bool shouldUseMallets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldUseMallets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shouldUseMallets);
}
// Autogenerated method: VROSC.MalletGrabbing.Update
void VROSC::MalletGrabbing::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletGrabbing.CheckIfLaserHovering
void VROSC::MalletGrabbing::CheckIfLaserHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::CheckIfLaserHovering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfLaserHovering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletGrabbing.SetLaserDimmed
void VROSC::MalletGrabbing::SetLaserDimmed(bool dimmed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletGrabbing::SetLaserDimmed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaserDimmed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimmed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dimmed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.MalletManager
#include "VROSC/MalletManager.hpp"
// Including type: VROSC.MalletSettings
#include "VROSC/MalletSettings.hpp"
// Including type: VROSC.Mallet
#include "VROSC/Mallet.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.MinMaxFloat
#include "VROSC/MinMaxFloat.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: VROSC.ClickData
#include "VROSC/ClickData.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.MalletSettings _malletSettings
[[deprecated("Use field access instead!")]] ::VROSC::MalletSettings*& VROSC::MalletManager::dyn__malletSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__malletSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_malletSettings"))->offset;
  return *reinterpret_cast<::VROSC::MalletSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Mallet _leftMallet
[[deprecated("Use field access instead!")]] ::VROSC::Mallet*& VROSC::MalletManager::dyn__leftMallet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__leftMallet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMallet"))->offset;
  return *reinterpret_cast<::VROSC::Mallet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Mallet _rightMallet
[[deprecated("Use field access instead!")]] ::VROSC::Mallet*& VROSC::MalletManager::dyn__rightMallet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__rightMallet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMallet"))->offset;
  return *reinterpret_cast<::VROSC::Mallet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <CurrentAngle>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::MalletManager::dyn_$CurrentAngle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_$CurrentAngle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentAngle>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <CurrentLength>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::MalletManager::dyn_$CurrentLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_$CurrentLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentLength>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AutoDimLaserWithMallets>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::MalletManager::dyn_$AutoDimLaserWithMallets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_$AutoDimLaserWithMallets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AutoDimLaserWithMallets>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnCurrentAngleChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::MalletManager::dyn_OnCurrentAngleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_OnCurrentAngleChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnCurrentAngleChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnCurrentLengthChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::MalletManager::dyn_OnCurrentLengthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_OnCurrentLengthChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnCurrentLengthChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLeftMalletToggled
[[deprecated("Use field access instead!")]] bool& VROSC::MalletManager::dyn__isLeftMalletToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__isLeftMalletToggled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLeftMalletToggled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRightMalletToggled
[[deprecated("Use field access instead!")]] bool& VROSC::MalletManager::dyn__isRightMalletToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__isRightMalletToggled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRightMalletToggled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsLeftMalletGrabbed>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::MalletManager::dyn_$IsLeftMalletGrabbed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_$IsLeftMalletGrabbed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsLeftMalletGrabbed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRightMalletGrabbed>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::MalletManager::dyn_$IsRightMalletGrabbed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn_$IsRightMalletGrabbed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRightMalletGrabbed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> _leftDisableSources
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& VROSC::MalletManager::dyn__leftDisableSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__leftDisableSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftDisableSources"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> _rightDisableSources
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& VROSC::MalletManager::dyn__rightDisableSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::dyn__rightDisableSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightDisableSources"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MalletManager.get_CurrentAngle
float VROSC::MalletManager::get_CurrentAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_CurrentAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.set_CurrentAngle
void VROSC::MalletManager::set_CurrentAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::set_CurrentAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MalletManager.get_CurrentLength
float VROSC::MalletManager::get_CurrentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_CurrentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.set_CurrentLength
void VROSC::MalletManager::set_CurrentLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::set_CurrentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MalletManager.get_AutoDimLaserWithMallets
bool VROSC::MalletManager::get_AutoDimLaserWithMallets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_AutoDimLaserWithMallets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoDimLaserWithMallets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.set_AutoDimLaserWithMallets
void VROSC::MalletManager::set_AutoDimLaserWithMallets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::set_AutoDimLaserWithMallets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoDimLaserWithMallets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MalletManager.get_MinMaxMalletAngle
::VROSC::MinMaxFloat* VROSC::MalletManager::get_MinMaxMalletAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_MinMaxMalletAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinMaxMalletAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MinMaxFloat*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.get_MinMaxMalletLength
::VROSC::MinMaxFloat* VROSC::MalletManager::get_MinMaxMalletLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_MinMaxMalletLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinMaxMalletLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MinMaxFloat*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.get_DefaultColor
::UnityEngine::Color VROSC::MalletManager::get_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_DefaultColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.get_IsLeftMalletGrabbed
bool VROSC::MalletManager::get_IsLeftMalletGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_IsLeftMalletGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLeftMalletGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.set_IsLeftMalletGrabbed
void VROSC::MalletManager::set_IsLeftMalletGrabbed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::set_IsLeftMalletGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsLeftMalletGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MalletManager.get_IsRightMalletGrabbed
bool VROSC::MalletManager::get_IsRightMalletGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::get_IsRightMalletGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRightMalletGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.set_IsRightMalletGrabbed
void VROSC::MalletManager::set_IsRightMalletGrabbed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::set_IsRightMalletGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRightMalletGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.MalletManager.Setup
void VROSC::MalletManager::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.OnDestroy
void VROSC::MalletManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletManager.ToggleMallet
void VROSC::MalletManager::ToggleMallet(::VROSC::ClickData* clickData, bool toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::ToggleMallet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleMallet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData), ::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData, toggle);
}
// Autogenerated method: VROSC.MalletManager.GrabMallet
void VROSC::MalletManager::GrabMallet(bool isLeftHand, bool grab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::GrabMallet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabMallet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(grab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand, grab);
}
// Autogenerated method: VROSC.MalletManager.SetMalletLength
void VROSC::MalletManager::SetMalletLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::SetMalletLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMalletLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: VROSC.MalletManager.SetLaserAutoDimWhenHoldingMallets
void VROSC::MalletManager::SetLaserAutoDimWhenHoldingMallets(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::SetLaserAutoDimWhenHoldingMallets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaserAutoDimWhenHoldingMallets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: VROSC.MalletManager.SetDrumpadsActive
void VROSC::MalletManager::SetDrumpadsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::SetDrumpadsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrumpadsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: VROSC.MalletManager.DisableMallets
void VROSC::MalletManager::DisableMallets(bool disable, ::VROSC::HandType handType, ::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::DisableMallets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMallets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disable), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disable, handType, source);
}
// Autogenerated method: VROSC.MalletManager.DisableMallet
void VROSC::MalletManager::DisableMallet(bool disable, ::Il2CppObject* source, bool left) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::DisableMallet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMallet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disable), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(left)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disable, source, left);
}
// Autogenerated method: VROSC.MalletManager.SetMalletAngle
void VROSC::MalletManager::SetMalletAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::SetMalletAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMalletAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle);
}
// Autogenerated method: VROSC.MalletManager.UserDataLoaded
void VROSC::MalletManager::UserDataLoaded(::VROSC::UserDataControllers* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::UserDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: VROSC.MalletManager.ResetValuesToDefault
void VROSC::MalletManager::ResetValuesToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletManager::ResetValuesToDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetValuesToDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MalletSettings
#include "VROSC/MalletSettings.hpp"
// Including type: VROSC.MinMaxFloat
#include "VROSC/MinMaxFloat.hpp"
// Including type: VROSC.Mallet
#include "VROSC/Mallet.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.MinMaxFloat _minMaxMalletAngle
[[deprecated("Use field access instead!")]] ::VROSC::MinMaxFloat*& VROSC::MalletSettings::dyn__minMaxMalletAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__minMaxMalletAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minMaxMalletAngle"))->offset;
  return *reinterpret_cast<::VROSC::MinMaxFloat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MinMaxFloat _minMaxMalletLength
[[deprecated("Use field access instead!")]] ::VROSC::MinMaxFloat*& VROSC::MalletSettings::dyn__minMaxMalletLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__minMaxMalletLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minMaxMalletLength"))->offset;
  return *reinterpret_cast<::VROSC::MinMaxFloat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _autoDimLaser
[[deprecated("Use field access instead!")]] bool& VROSC::MalletSettings::dyn__autoDimLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__autoDimLaser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoDimLaser"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defualtMalletAngle
[[deprecated("Use field access instead!")]] float& VROSC::MalletSettings::dyn__defualtMalletAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__defualtMalletAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defualtMalletAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defualtMalletLength
[[deprecated("Use field access instead!")]] float& VROSC::MalletSettings::dyn__defualtMalletLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__defualtMalletLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defualtMalletLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _laserEnableTime
[[deprecated("Use field access instead!")]] float& VROSC::MalletSettings::dyn__laserEnableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__laserEnableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserEnableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _laserDisableTime
[[deprecated("Use field access instead!")]] float& VROSC::MalletSettings::dyn__laserDisableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__laserDisableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserDisableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hitExtendsDisableTime
[[deprecated("Use field access instead!")]] float& VROSC::MalletSettings::dyn__hitExtendsDisableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__hitExtendsDisableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitExtendsDisableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Mallet _malletPrefab
[[deprecated("Use field access instead!")]] ::VROSC::Mallet*& VROSC::MalletSettings::dyn__malletPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__malletPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_malletPrefab"))->offset;
  return *reinterpret_cast<::VROSC::Mallet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& VROSC::MalletSettings::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MalletSettings.get_DefualtMalletAngle
float VROSC::MalletSettings::get_DefualtMalletAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_DefualtMalletAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefualtMalletAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_DefaultMalletLength
float VROSC::MalletSettings::get_DefaultMalletLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_DefaultMalletLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultMalletLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_LaserAutoDimWhenHoldingMallets
bool VROSC::MalletSettings::get_LaserAutoDimWhenHoldingMallets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_LaserAutoDimWhenHoldingMallets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LaserAutoDimWhenHoldingMallets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_MinMaxMalletAngle
::VROSC::MinMaxFloat* VROSC::MalletSettings::get_MinMaxMalletAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_MinMaxMalletAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinMaxMalletAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MinMaxFloat*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_MinMaxMalletLength
::VROSC::MinMaxFloat* VROSC::MalletSettings::get_MinMaxMalletLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_MinMaxMalletLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinMaxMalletLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MinMaxFloat*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_LaserEnableTime
float VROSC::MalletSettings::get_LaserEnableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_LaserEnableTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LaserEnableTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_LaserDisableTime
float VROSC::MalletSettings::get_LaserDisableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_LaserDisableTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LaserDisableTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_HitExtendsDisableTime
float VROSC::MalletSettings::get_HitExtendsDisableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_HitExtendsDisableTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HitExtendsDisableTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.get_DefaultColor
::UnityEngine::Color VROSC::MalletSettings::get_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::get_DefaultColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletSettings.CreateMallet
::VROSC::Mallet* VROSC::MalletSettings::CreateMallet(::VROSC::InputDevice* inputDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletSettings::CreateMallet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMallet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Mallet*, false>(this, ___internal__method, inputDevice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MalletVisual
#include "VROSC/MalletVisual.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: VROSC.PredictiveHitWisp
#include "VROSC/PredictiveHitWisp.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stick
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::MalletVisual::dyn__stick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__stick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stick"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _head
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::MalletVisual::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _tipRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& VROSC::MalletVisual::dyn__tipRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__tipRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tipRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _stickRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& VROSC::MalletVisual::dyn__stickRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__stickRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stickRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PredictiveHitWisp _wisp
[[deprecated("Use field access instead!")]] ::VROSC::PredictiveHitWisp*& VROSC::MalletVisual::dyn__wisp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__wisp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wisp"))->offset;
  return *reinterpret_cast<::VROSC::PredictiveHitWisp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& VROSC::MalletVisual::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headStartPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::MalletVisual::dyn__headStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::dyn__headStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headStartPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MalletVisual.Awake
void VROSC::MalletVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MalletVisual.SetColor
void VROSC::MalletVisual::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: VROSC.MalletVisual.SetLength
void VROSC::MalletVisual::SetLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: VROSC.MalletVisual.SetAngle
void VROSC::MalletVisual::SetAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MalletVisual::SetAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Decrement
#include "VROSC/Decrement.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _amount
[[deprecated("Use field access instead!")]] int& VROSC::Decrement::dyn__amount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Decrement::dyn__amount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_amount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Decrement.SetValueBySignal
void VROSC::Decrement::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Decrement::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FloatChanger
#include "VROSC/FloatChanger.hpp"
// Including type: VROSC.FloatNode
#include "VROSC/FloatNode.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.FloatNode _outputNode
[[deprecated("Use field access instead!")]] ::VROSC::FloatNode*& VROSC::FloatChanger::dyn__outputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::dyn__outputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputNode"))->offset;
  return *reinterpret_cast<::VROSC::FloatNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _continuous
[[deprecated("Use field access instead!")]] bool& VROSC::FloatChanger::dyn__continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::dyn__continuous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continuous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FloatChanger.SetValueBySignal
void VROSC::FloatChanger::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::FloatChanger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.FloatChanger.get_MaxInputs
int VROSC::FloatChanger::get_MaxInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::get_MaxInputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatChanger.NodeBegin
void VROSC::FloatChanger::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.FloatChanger.NodeStay
void VROSC::FloatChanger::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatChanger::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FloatField
#include "VROSC/FloatField.hpp"
// Including type: VROSC.FloatNode
#include "VROSC/FloatNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single EnteredValue
[[deprecated("Use field access instead!")]] float& VROSC::FloatField::dyn_EnteredValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::dyn_EnteredValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnteredValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.FloatNode ConnectedValue
[[deprecated("Use field access instead!")]] ::VROSC::FloatNode*& VROSC::FloatField::dyn_ConnectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::dyn_ConnectedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedValue"))->offset;
  return *reinterpret_cast<::VROSC::FloatNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FloatField.get_Value
float VROSC::FloatField::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatField.GetNode
::VROSC::FloatNode* VROSC::FloatField::GetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::FloatNode*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatField.SetNode
void VROSC::FloatField::SetNode(::VROSC::FloatNode* floatNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatField::SetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, floatNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FloatNode
#include "VROSC/FloatNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single _minValue
[[deprecated("Use field access instead!")]] float& VROSC::FloatNode::dyn__minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::dyn__minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _maxValue
[[deprecated("Use field access instead!")]] float& VROSC::FloatNode::dyn__maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::dyn__maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& VROSC::FloatNode::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> OnValueChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::FloatNode::dyn_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::dyn_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnValueChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FloatNode.get_MinValue
float VROSC::FloatNode::get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::get_MinValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatNode.get_MaxValue
float VROSC::FloatNode::get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::get_MaxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatNode.get_Value
float VROSC::FloatNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FloatNode.set_Value
void VROSC::FloatNode::set_Value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.FloatNode.SetValueInRange
float VROSC::FloatNode::SetValueInRange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FloatNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::FloatNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Increment
#include "VROSC/Increment.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _amount
[[deprecated("Use field access instead!")]] int& VROSC::Increment::dyn__amount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Increment::dyn__amount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_amount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Increment.SetValueBySignal
void VROSC::Increment::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Increment::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IntChanger
#include "VROSC/IntChanger.hpp"
// Including type: VROSC.IntNode
#include "VROSC/IntNode.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.IntNode _outputNode
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::IntChanger::dyn__outputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::dyn__outputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputNode"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _continuous
[[deprecated("Use field access instead!")]] bool& VROSC::IntChanger::dyn__continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::dyn__continuous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continuous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IntChanger.SetValueBySignal
void VROSC::IntChanger::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.IntChanger.get_MaxInputs
int VROSC::IntChanger::get_MaxInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::get_MaxInputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntChanger.NodeBegin
void VROSC::IntChanger::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.IntChanger.NodeStay
void VROSC::IntChanger::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntChanger::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: VROSC.IntNode
#include "VROSC/IntNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 EnteredValue
[[deprecated("Use field access instead!")]] int& VROSC::IntField::dyn_EnteredValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntField::dyn_EnteredValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnteredValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.IntNode ConnectedValue
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::IntField::dyn_ConnectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntField::dyn_ConnectedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedValue"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IntField.get_Value
int VROSC::IntField::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntField::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntField.GetNode
::VROSC::IntNode* VROSC::IntField::GetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntField::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::IntNode*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntField.SetNode
void VROSC::IntField::SetNode(::VROSC::IntNode* intNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntField::SetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IntNode
#include "VROSC/IntNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _minValue
[[deprecated("Use field access instead!")]] int& VROSC::IntNode::dyn__minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::dyn__minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxValue
[[deprecated("Use field access instead!")]] int& VROSC::IntNode::dyn__maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::dyn__maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.IntNode/VROSC.OverflowBehaviour _overflowBehaviour
[[deprecated("Use field access instead!")]] ::VROSC::IntNode::OverflowBehaviour& VROSC::IntNode::dyn__overflowBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::dyn__overflowBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overflowBehaviour"))->offset;
  return *reinterpret_cast<::VROSC::IntNode::OverflowBehaviour*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
[[deprecated("Use field access instead!")]] int& VROSC::IntNode::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Int32> OnValueChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& VROSC::IntNode::dyn_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::dyn_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnValueChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IntNode.get_MinValue
int VROSC::IntNode::get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::get_MinValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntNode.get_MaxValue
int VROSC::IntNode::get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::get_MaxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntNode.get_Value
int VROSC::IntNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntNode.set_Value
void VROSC::IntNode::set_Value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.IntNode.OnValidate
void VROSC::IntNode::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.IntNode.SetValueInRange
int VROSC::IntNode::SetValueInRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IntNode/VROSC.OverflowBehaviour
#include "VROSC/IntNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.IntNode/VROSC.OverflowBehaviour Limit
::VROSC::IntNode::OverflowBehaviour VROSC::IntNode::OverflowBehaviour::_get_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OverflowBehaviour::_get_Limit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::IntNode::OverflowBehaviour>("VROSC", "IntNode/OverflowBehaviour", "Limit"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.IntNode/VROSC.OverflowBehaviour Limit
void VROSC::IntNode::OverflowBehaviour::_set_Limit(::VROSC::IntNode::OverflowBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OverflowBehaviour::_set_Limit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "IntNode/OverflowBehaviour", "Limit", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.IntNode/VROSC.OverflowBehaviour Wrap
::VROSC::IntNode::OverflowBehaviour VROSC::IntNode::OverflowBehaviour::_get_Wrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OverflowBehaviour::_get_Wrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::IntNode::OverflowBehaviour>("VROSC", "IntNode/OverflowBehaviour", "Wrap"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.IntNode/VROSC.OverflowBehaviour Wrap
void VROSC::IntNode::OverflowBehaviour::_set_Wrap(::VROSC::IntNode::OverflowBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OverflowBehaviour::_set_Wrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "IntNode/OverflowBehaviour", "Wrap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::IntNode::OverflowBehaviour::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntNode::OverflowBehaviour::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MultiplyBySignal
#include "VROSC/MultiplyBySignal.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.MultiplyBySignal.SetValueBySignal
void VROSC::MultiplyBySignal::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MultiplyBySignal::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteField
#include "VROSC/NoteField.hpp"
// Including type: VROSC.NoteNode
#include "VROSC/NoteNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.Note EnteredValue
[[deprecated("Use field access instead!")]] ::VROSC::Note& VROSC::NoteField::dyn_EnteredValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteField::dyn_EnteredValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnteredValue"))->offset;
  return *reinterpret_cast<::VROSC::Note*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NoteNode ConnectedValue
[[deprecated("Use field access instead!")]] ::VROSC::NoteNode*& VROSC::NoteField::dyn_ConnectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteField::dyn_ConnectedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedValue"))->offset;
  return *reinterpret_cast<::VROSC::NoteNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteField.get_Value
int VROSC::NoteField::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteField::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteNode
#include "VROSC/NoteNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Note _note
[[deprecated("Use field access instead!")]] ::VROSC::Note& VROSC::NoteNode::dyn__note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteNode::dyn__note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_note"))->offset;
  return *reinterpret_cast<::VROSC::Note*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteNode.get_Note
::VROSC::Note VROSC::NoteNode::get_Note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteNode::get_Note");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Note", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteNode.set_Note
void VROSC::NoteNode::set_Note(::VROSC::Note value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteNode::set_Note");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Note", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.NoteNode.OnValidate
void VROSC::NoteNode::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteNode::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteNode.SetValueInRange
int VROSC::NoteNode::SetValueInRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteToggle
#include "VROSC/NoteToggle.hpp"
// Including type: VROSC.NoteNode
#include "VROSC/NoteNode.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteNode _note
[[deprecated("Use field access instead!")]] ::VROSC::NoteNode*& VROSC::NoteToggle::dyn__note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteToggle::dyn__note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_note"))->offset;
  return *reinterpret_cast<::VROSC::NoteNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteToggle.SetValueBySignal
void VROSC::NoteToggle::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteToggle::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PercussionNode
#include "VROSC/PercussionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.MidiPercussion _percussionValue
[[deprecated("Use field access instead!")]] ::VROSC::MidiPercussion& VROSC::PercussionNode::dyn__percussionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PercussionNode::dyn__percussionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_percussionValue"))->offset;
  return *reinterpret_cast<::VROSC::MidiPercussion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PercussionNode.get_PercussionValue
::VROSC::MidiPercussion VROSC::PercussionNode::get_PercussionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PercussionNode::get_PercussionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercussionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::MidiPercussion, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PercussionNode.set_PercussionValue
void VROSC::PercussionNode::set_PercussionValue(::VROSC::MidiPercussion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PercussionNode::set_PercussionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PercussionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.PercussionNode.OnValidate
void VROSC::PercussionNode::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PercussionNode::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PercussionNode.SetValueInRange
int VROSC::PercussionNode::SetValueInRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PercussionNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PlayBehaviourField
#include "VROSC/PlayBehaviourField.hpp"
// Including type: VROSC.PlayBehaviourNode
#include "VROSC/PlayBehaviourNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.NoteBoardPlayer/VROSC.PlayBehaviour EnteredValue
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoardPlayer::PlayBehaviour& VROSC::PlayBehaviourField::dyn_EnteredValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourField::dyn_EnteredValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnteredValue"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoardPlayer::PlayBehaviour*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.PlayBehaviourNode ConnectedValue
[[deprecated("Use field access instead!")]] ::VROSC::PlayBehaviourNode*& VROSC::PlayBehaviourField::dyn_ConnectedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourField::dyn_ConnectedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedValue"))->offset;
  return *reinterpret_cast<::VROSC::PlayBehaviourNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PlayBehaviourField.get_Value
int VROSC::PlayBehaviourField::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourField::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PlayBehaviourNode
#include "VROSC/PlayBehaviourNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoardPlayer/VROSC.PlayBehaviour _playBehaviour
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoardPlayer::PlayBehaviour& VROSC::PlayBehaviourNode::dyn__playBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourNode::dyn__playBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playBehaviour"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoardPlayer::PlayBehaviour*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PlayBehaviourNode.get_PlayBehaviour
::VROSC::NoteBoardPlayer::PlayBehaviour VROSC::PlayBehaviourNode::get_PlayBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourNode::get_PlayBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::NoteBoardPlayer::PlayBehaviour, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PlayBehaviourNode.set_PlayBehaviour
void VROSC::PlayBehaviourNode::set_PlayBehaviour(::VROSC::NoteBoardPlayer::PlayBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourNode::set_PlayBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.PlayBehaviourNode.OnValidate
void VROSC::PlayBehaviourNode::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourNode::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PlayBehaviourNode.SetValueInRange
int VROSC::PlayBehaviourNode::SetValueInRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PlayBehaviourNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ScaleNode
#include "VROSC/ScaleNode.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: VROSC.Note
#include "VROSC/Note.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action OnScaleSet
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::ScaleNode::dyn_OnScaleSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::dyn_OnScaleSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnScaleSet"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Scale _scale
[[deprecated("Use field access instead!")]] ::VROSC::Scale& VROSC::ScaleNode::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::VROSC::Scale*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ScaleNode.get_Scale
::VROSC::Scale VROSC::ScaleNode::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ScaleNode.set_Scale
void VROSC::ScaleNode::set_Scale(::VROSC::Scale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::set_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ScaleNode.SetScale
void VROSC::ScaleNode::SetScale(::VROSC::Scale scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::SetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: VROSC.ScaleNode.RandomScale
::VROSC::Scale VROSC::ScaleNode::RandomScale(ByRef<::VROSC::Note> baseNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::RandomScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ScaleNode", "RandomScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::VROSC::Note&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(baseNote));
}
// Autogenerated method: VROSC.ScaleNode.OnValidate
void VROSC::ScaleNode::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::OnValidate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ScaleNode.SetValueInRange
int VROSC::ScaleNode::SetValueInRange(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleNode::SetValueInRange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SetFloat
#include "VROSC/SetFloat.hpp"
// Including type: VROSC.FloatField
#include "VROSC/FloatField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.FloatField _setTo
[[deprecated("Use field access instead!")]] ::VROSC::FloatField*& VROSC::SetFloat::dyn__setTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetFloat::dyn__setTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setTo"))->offset;
  return *reinterpret_cast<::VROSC::FloatField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useSignalValue
[[deprecated("Use field access instead!")]] bool& VROSC::SetFloat::dyn__useSignalValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetFloat::dyn__useSignalValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useSignalValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.FloatField _minValue
[[deprecated("Use field access instead!")]] ::VROSC::FloatField*& VROSC::SetFloat::dyn__minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetFloat::dyn__minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minValue"))->offset;
  return *reinterpret_cast<::VROSC::FloatField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.FloatField _maxValue
[[deprecated("Use field access instead!")]] ::VROSC::FloatField*& VROSC::SetFloat::dyn__maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetFloat::dyn__maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxValue"))->offset;
  return *reinterpret_cast<::VROSC::FloatField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SetFloat.SetValueBySignal
void VROSC::SetFloat::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetFloat::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::FloatChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SetInt
#include "VROSC/SetInt.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _setTo
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::SetInt::dyn__setTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetInt::dyn__setTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setTo"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useSignalValue
[[deprecated("Use field access instead!")]] bool& VROSC::SetInt::dyn__useSignalValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetInt::dyn__useSignalValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useSignalValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _minValue
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::SetInt::dyn__minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetInt::dyn__minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minValue"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _maxValue
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::SetInt::dyn__maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetInt::dyn__maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxValue"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SetInt.SetValueBySignal
void VROSC::SetInt::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SetInt::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SlideValueByController
#include "VROSC/SlideValueByController.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Axis _slideAxis
[[deprecated("Use field access instead!")]] ::VROSC::Axis& VROSC::SlideValueByController::dyn__slideAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::dyn__slideAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slideAxis"))->offset;
  return *reinterpret_cast<::VROSC::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _sensitivity
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::SlideValueByController::dyn__sensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::dyn__sensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sensitivity"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SlideValueByController::dyn__startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::dyn__startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startValue
[[deprecated("Use field access instead!")]] int& VROSC::SlideValueByController::dyn__startValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::dyn__startValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _affectingTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::SlideValueByController::dyn__affectingTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::dyn__affectingTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_affectingTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SlideValueByController.get_RequireOrigin
bool VROSC::SlideValueByController::get_RequireOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::get_RequireOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SlideValueByController.NodeBegin
void VROSC::SlideValueByController::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SlideValueByController.NodeStay
void VROSC::SlideValueByController::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SlideValueByController.SetValueBySignal
void VROSC::SlideValueByController::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SlideValueByController::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Transpose
#include "VROSC/Transpose.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _transposeAmount
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::Transpose::dyn__transposeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Transpose::dyn__transposeAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transposeAmount"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetOnNodeEnd
[[deprecated("Use field access instead!")]] bool& VROSC::Transpose::dyn__resetOnNodeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Transpose::dyn__resetOnNodeEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetOnNodeEnd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 changeAmount
[[deprecated("Use field access instead!")]] int& VROSC::Transpose::dyn_changeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Transpose::dyn_changeAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changeAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Transpose.SetValueBySignal
void VROSC::Transpose::SetValueBySignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Transpose::SetValueBySignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::IntChanger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.Transpose.NodeEnd
void VROSC::Transpose::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Transpose::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Node
#include "VROSC/Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GameObjectDestroyer
#include "VROSC/GameObjectDestroyer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _targetGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& VROSC::GameObjectDestroyer::dyn__targetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectDestroyer::dyn__targetGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.GameObjectDestroyer.NodeBegin
void VROSC::GameObjectDestroyer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectDestroyer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.GameObjectToggler
#include "VROSC/GameObjectToggler.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _targetGameObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& VROSC::GameObjectToggler::dyn__targetGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__targetGameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetGameObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideStartState
[[deprecated("Use field access instead!")]] bool& VROSC::GameObjectToggler::dyn__overrideStartState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__overrideStartState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideStartState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startEnabled
[[deprecated("Use field access instead!")]] bool& VROSC::GameObjectToggler::dyn__startEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__startEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _onWithSignal
[[deprecated("Use field access instead!")]] bool& VROSC::GameObjectToggler::dyn__onWithSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__onWithSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onWithSignal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setState
[[deprecated("Use field access instead!")]] bool& VROSC::GameObjectToggler::dyn__setState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__setState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setStateTo
[[deprecated("Use field access instead!")]] bool& VROSC::GameObjectToggler::dyn__setStateTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::dyn__setStateTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setStateTo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.GameObjectToggler.Start
void VROSC::GameObjectToggler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.GameObjectToggler.NodeBegin
void VROSC::GameObjectToggler::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.GameObjectToggler.NodeEnd
void VROSC::GameObjectToggler::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GameObjectToggler::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.HapticClipPlayer
#include "VROSC/HapticClipPlayer.hpp"
// Including type: VROSC.SignalControllerInfo
#include "VROSC/SignalControllerInfo.hpp"
// Including type: VROSC.HapticClipPlayer/VROSC.<StartHaptics>d__11
#include "VROSC/HapticClipPlayer_-StartHaptics-d__11.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _amplitude
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::dyn__amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _frequency
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::dyn__frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _decayTime
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::dyn__decayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__decayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _decayCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::HapticClipPlayer::dyn__decayCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__decayCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decayCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HapticClipPlayer/VROSC.HapticHand _playOnHand
[[deprecated("Use field access instead!")]] ::VROSC::HapticClipPlayer::HapticHand& VROSC::HapticClipPlayer::dyn__playOnHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__playOnHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playOnHand"))->offset;
  return *reinterpret_cast<::VROSC::HapticClipPlayer::HapticHand*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _decayCounter
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::dyn__decayCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__decayCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decayCounter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastSignalAmplitude
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::dyn__lastSignalAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__lastSignalAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSignalAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HandType _lastHand
[[deprecated("Use field access instead!")]] ::VROSC::HandType& VROSC::HapticClipPlayer::dyn__lastHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::dyn__lastHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastHand"))->offset;
  return *reinterpret_cast<::VROSC::HandType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.HapticClipPlayer.StartHaptics
void VROSC::HapticClipPlayer::StartHaptics(float signalAmplitude, ::VROSC::SignalControllerInfo* signalControllerInfo, double dspTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::StartHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signalAmplitude), ::il2cpp_utils::ExtractType(signalControllerInfo), ::il2cpp_utils::ExtractType(dspTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signalAmplitude, signalControllerInfo, dspTime);
}
// Autogenerated method: VROSC.HapticClipPlayer.GenerateHaptics
void VROSC::HapticClipPlayer::GenerateHaptics(float amplitude, float frequency, ::VROSC::HandType hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::GenerateHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(hand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amplitude, frequency, hand);
}
// Autogenerated method: VROSC.HapticClipPlayer.Update
void VROSC::HapticClipPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.HapticClipPlayer.NodeBegin
void VROSC::HapticClipPlayer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.HapticClipPlayer.NodeStay
void VROSC::HapticClipPlayer::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.HapticClipPlayer/VROSC.HapticHand
#include "VROSC/HapticClipPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand SignalOrigin
::VROSC::HapticClipPlayer::HapticHand VROSC::HapticClipPlayer::HapticHand::_get_SignalOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_get_SignalOrigin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::HapticClipPlayer::HapticHand>("VROSC", "HapticClipPlayer/HapticHand", "SignalOrigin"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand SignalOrigin
void VROSC::HapticClipPlayer::HapticHand::_set_SignalOrigin(::VROSC::HapticClipPlayer::HapticHand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_set_SignalOrigin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "HapticClipPlayer/HapticHand", "SignalOrigin", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Left
::VROSC::HapticClipPlayer::HapticHand VROSC::HapticClipPlayer::HapticHand::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::HapticClipPlayer::HapticHand>("VROSC", "HapticClipPlayer/HapticHand", "Left"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Left
void VROSC::HapticClipPlayer::HapticHand::_set_Left(::VROSC::HapticClipPlayer::HapticHand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "HapticClipPlayer/HapticHand", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Right
::VROSC::HapticClipPlayer::HapticHand VROSC::HapticClipPlayer::HapticHand::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::HapticClipPlayer::HapticHand>("VROSC", "HapticClipPlayer/HapticHand", "Right"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Right
void VROSC::HapticClipPlayer::HapticHand::_set_Right(::VROSC::HapticClipPlayer::HapticHand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "HapticClipPlayer/HapticHand", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Both
::VROSC::HapticClipPlayer::HapticHand VROSC::HapticClipPlayer::HapticHand::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::HapticClipPlayer::HapticHand>("VROSC", "HapticClipPlayer/HapticHand", "Both"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.HapticClipPlayer/VROSC.HapticHand Both
void VROSC::HapticClipPlayer::HapticHand::_set_Both(::VROSC::HapticClipPlayer::HapticHand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "HapticClipPlayer/HapticHand", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::HapticClipPlayer::HapticHand::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::HapticHand::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.HapticClipPlayer/VROSC.<StartHaptics>d__11
#include "VROSC/HapticClipPlayer_-StartHaptics-d__11.hpp"
// Including type: VROSC.SignalControllerInfo
#include "VROSC/SignalControllerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double dspTime
[[deprecated("Use field access instead!")]] double& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_dspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_dspTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dspTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.HapticClipPlayer <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::HapticClipPlayer*& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::HapticClipPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.SignalControllerInfo signalControllerInfo
[[deprecated("Use field access instead!")]] ::VROSC::SignalControllerInfo*& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_signalControllerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_signalControllerInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signalControllerInfo"))->offset;
  return *reinterpret_cast<::VROSC::SignalControllerInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single signalAmplitude
[[deprecated("Use field access instead!")]] float& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_signalAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_signalAmplitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signalAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.HapticClipPlayer/VROSC.<StartHaptics>d__11.MoveNext
void VROSC::HapticClipPlayer::$StartHaptics$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::HapticClipPlayer::$StartHaptics$d__11), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.HapticClipPlayer/VROSC.<StartHaptics>d__11.SetStateMachine
void VROSC::HapticClipPlayer::$StartHaptics$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HapticClipPlayer::$StartHaptics$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::HapticClipPlayer::$StartHaptics$d__11), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MethodRunner
#include "VROSC/MethodRunner.hpp"
// Including type: VROSC.MethodRunner/VROSC.RunMethodEvent
#include "VROSC/MethodRunner_RunMethodEvent.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.MethodRunner/VROSC.RunMethodEvent _targetMethod
[[deprecated("Use field access instead!")]] ::VROSC::MethodRunner::RunMethodEvent*& VROSC::MethodRunner::dyn__targetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MethodRunner::dyn__targetMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetMethod"))->offset;
  return *reinterpret_cast<::VROSC::MethodRunner::RunMethodEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MethodRunner.NodeBegin
void VROSC::MethodRunner::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MethodRunner::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MethodRunner/VROSC.RunMethodEvent
#include "VROSC/MethodRunner_RunMethodEvent.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoardPlayer
#include "VROSC/NoteBoardPlayer.hpp"
// Including type: VROSC.NoteBoardPlayer/VROSC.PlayBehaviour
#include "VROSC/NoteBoardPlayer_PlayBehaviour.hpp"
// Including type: VROSC.NoteBoardPlayer/VROSC.<Stop>d__20
#include "VROSC/NoteBoardPlayer_-Stop-d__20.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: VROSC.PlayBehaviourField
#include "VROSC/PlayBehaviourField.hpp"
// Including type: VROSC.NoteFieldNoteData
#include "VROSC/NoteFieldNoteData.hpp"
// Including type: VROSC.InstrumentController
#include "VROSC/InstrumentController.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard _noteBoard
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard*& VROSC::NoteBoardPlayer::dyn__noteBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__noteBoard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteBoard"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.PlayAxis _playAxis
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::PlayAxis& VROSC::NoteBoardPlayer::dyn__playAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__playAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playAxis"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::PlayAxis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoardNote/VROSC.Coloring _coloring
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoardNote::Coloring& VROSC::NoteBoardPlayer::dyn__coloring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__coloring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coloring"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoardNote::Coloring*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _octave
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NoteBoardPlayer::dyn__octave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__octave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_octave"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.PlayBehaviourField _playBehaviour
[[deprecated("Use field access instead!")]] ::VROSC::PlayBehaviourField*& VROSC::NoteBoardPlayer::dyn__playBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__playBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playBehaviour"))->offset;
  return *reinterpret_cast<::VROSC::PlayBehaviourField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _scaleOffset
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NoteBoardPlayer::dyn__scaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__scaleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scaleOffset"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _avoidTritone
[[deprecated("Use field access instead!")]] bool& VROSC::NoteBoardPlayer::dyn__avoidTritone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__avoidTritone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avoidTritone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMultiNote
[[deprecated("Use field access instead!")]] bool& VROSC::NoteBoardPlayer::dyn__isMultiNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__isMultiNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMultiNote"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiNote
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoardPlayer::dyn__multiNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__multiNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _multiNoteValue
[[deprecated("Use field access instead!")]] float& VROSC::NoteBoardPlayer::dyn__multiNoteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__multiNoteValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiNoteValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteFieldNoteData _currentPlayingNoteField
[[deprecated("Use field access instead!")]] ::VROSC::NoteFieldNoteData*& VROSC::NoteBoardPlayer::dyn__currentPlayingNoteField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::dyn__currentPlayingNoteField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPlayingNoteField"))->offset;
  return *reinterpret_cast<::VROSC::NoteFieldNoteData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteBoardPlayer.get_Instrument
::VROSC::InstrumentController* VROSC::NoteBoardPlayer::get_Instrument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::get_Instrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Instrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InstrumentController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoardPlayer.<>n__0
::System::Threading::Tasks::Task* VROSC::NoteBoardPlayer::$$n__0(bool immediate, ::VROSC::HandType handType, bool linkHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediate), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(linkHands)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, immediate, handType, linkHands);
}
// Autogenerated method: VROSC.NoteBoardPlayer.get_RequireOrigin
bool VROSC::NoteBoardPlayer::get_RequireOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::get_RequireOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoardPlayer.Update
void VROSC::NoteBoardPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoardPlayer.NodeStay
void VROSC::NoteBoardPlayer::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.NoteBoardPlayer.Play
void VROSC::NoteBoardPlayer::Play(::VROSC::Signal* signal, bool linkHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal, linkHands);
}
// Autogenerated method: VROSC.NoteBoardPlayer.GetNote
int VROSC::NoteBoardPlayer::GetNote(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::GetNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position);
}
// Autogenerated method: VROSC.NoteBoardPlayer.Stop
::System::Threading::Tasks::Task* VROSC::NoteBoardPlayer::Stop(bool immediate, ::VROSC::HandType handType, bool linkHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, immediate, handType, linkHands);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoardPlayer/VROSC.PlayBehaviour
#include "VROSC/NoteBoardPlayer_PlayBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoardPlayer/VROSC.PlayBehaviour Slide
::VROSC::NoteBoardPlayer::PlayBehaviour VROSC::NoteBoardPlayer::PlayBehaviour::_get_Slide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::PlayBehaviour::_get_Slide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoardPlayer::PlayBehaviour>("VROSC", "NoteBoardPlayer/PlayBehaviour", "Slide"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoardPlayer/VROSC.PlayBehaviour Slide
void VROSC::NoteBoardPlayer::PlayBehaviour::_set_Slide(::VROSC::NoteBoardPlayer::PlayBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::PlayBehaviour::_set_Slide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoardPlayer/PlayBehaviour", "Slide", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoardPlayer/VROSC.PlayBehaviour Hold
::VROSC::NoteBoardPlayer::PlayBehaviour VROSC::NoteBoardPlayer::PlayBehaviour::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::PlayBehaviour::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoardPlayer::PlayBehaviour>("VROSC", "NoteBoardPlayer/PlayBehaviour", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoardPlayer/VROSC.PlayBehaviour Hold
void VROSC::NoteBoardPlayer::PlayBehaviour::_set_Hold(::VROSC::NoteBoardPlayer::PlayBehaviour value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::PlayBehaviour::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoardPlayer/PlayBehaviour", "Hold", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoardPlayer::PlayBehaviour::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::PlayBehaviour::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoardPlayer/VROSC.<Stop>d__20
#include "VROSC/NoteBoardPlayer_-Stop-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NoteBoardPlayer <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoardPlayer*& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoardPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean linkHands
[[deprecated("Use field access instead!")]] bool& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_linkHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_linkHands");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkHands"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediate
[[deprecated("Use field access instead!")]] bool& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_immediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_immediate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.HandType handType
[[deprecated("Use field access instead!")]] ::VROSC::HandType& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_handType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_handType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handType"))->offset;
  return *reinterpret_cast<::VROSC::HandType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteBoardPlayer/VROSC.<Stop>d__20.MoveNext
void VROSC::NoteBoardPlayer::$Stop$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NoteBoardPlayer::$Stop$d__20), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoardPlayer/VROSC.<Stop>d__20.SetStateMachine
void VROSC::NoteBoardPlayer::$Stop$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoardPlayer::$Stop$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NoteBoardPlayer::$Stop$d__20), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NotePlayer
#include "VROSC/NotePlayer.hpp"
// Including type: VROSC.NotePlayer/VROSC.<>c__DisplayClass18_0
#include "VROSC/NotePlayer_--c__DisplayClass18_0.hpp"
// Including type: VROSC.NotePlayer/VROSC.<PlayNoteQuantized>d__20
#include "VROSC/NotePlayer_-PlayNoteQuantized-d__20.hpp"
// Including type: VROSC.NotePlayer/VROSC.<Stop>d__21
#include "VROSC/NotePlayer_-Stop-d__21.hpp"
// Including type: VROSC.InstrumentController
#include "VROSC/InstrumentController.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.InstrumentController _instrument
[[deprecated("Use field access instead!")]] ::VROSC::InstrumentController*& VROSC::NotePlayer::dyn__instrument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__instrument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instrument"))->offset;
  return *reinterpret_cast<::VROSC::InstrumentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _note
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NotePlayer::dyn__note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_note"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _noteOffset
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NotePlayer::dyn__noteOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__noteOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteOffset"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pitch
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::dyn__pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__pitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _currentPlayingNote
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::dyn__currentPlayingNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__currentPlayingNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPlayingNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _scheduledNote
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::dyn__scheduledNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__scheduledNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheduledNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _heldNote
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::dyn__heldNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__heldNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heldNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _scheduledNoteHoldTime
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::dyn__scheduledNoteHoldTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__scheduledNoteHoldTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheduledNoteHoldTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _heldNoteHoldTime
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::dyn__heldNoteHoldTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__heldNoteHoldTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heldNoteHoldTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _stopScheduled
[[deprecated("Use field access instead!")]] bool& VROSC::NotePlayer::dyn__stopScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__stopScheduled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopScheduled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Double> _scheduledQuantizeSteps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<double>*& VROSC::NotePlayer::dyn__scheduledQuantizeSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__scheduledQuantizeSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheduledQuantizeSteps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<double>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single _currentVelocity
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::dyn__currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::dyn__currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NotePlayer.get_CurrentlyPlayingNote
int VROSC::NotePlayer::get_CurrentlyPlayingNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::get_CurrentlyPlayingNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentlyPlayingNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NotePlayer.Update
void VROSC::NotePlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NotePlayer.Play
void VROSC::NotePlayer::Play(::VROSC::Signal* signal, bool linkHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal, linkHands);
}
// Autogenerated method: VROSC.NotePlayer.GetNote
int VROSC::NotePlayer::GetNote(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::GetNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position);
}
// Autogenerated method: VROSC.NotePlayer.PlayNoteQuantized
void VROSC::NotePlayer::PlayNoteQuantized(int note, float velocity, double predictedDspTime, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::PlayNoteQuantized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayNoteQuantized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(predictedDspTime), ::il2cpp_utils::ExtractType(handType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity, predictedDspTime, handType);
}
// Autogenerated method: VROSC.NotePlayer.Stop
::System::Threading::Tasks::Task* VROSC::NotePlayer::Stop(bool immediate, ::VROSC::HandType handType, bool linkHands) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::NotePlayer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, immediate, handType, linkHands);
}
// Autogenerated method: VROSC.NotePlayer.SetInstrument
void VROSC::NotePlayer::SetInstrument(::VROSC::InstrumentController* instrument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::SetInstrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInstrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instrument);
}
// Autogenerated method: VROSC.NotePlayer.SetPitch
void VROSC::NotePlayer::SetPitch(float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::SetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pitch);
}
// Autogenerated method: VROSC.NotePlayer.NodeBegin
void VROSC::NotePlayer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.NotePlayer.NodeStay
void VROSC::NotePlayer::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.NotePlayer.NodeEnd
void VROSC::NotePlayer::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NotePlayer/VROSC.<>c__DisplayClass18_0
#include "VROSC/NotePlayer_--c__DisplayClass18_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double nextQuantizeDspTime
[[deprecated("Use field access instead!")]] double& VROSC::NotePlayer::$$c__DisplayClass18_0::dyn_nextQuantizeDspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$$c__DisplayClass18_0::dyn_nextQuantizeDspTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextQuantizeDspTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single quantizeLength
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::$$c__DisplayClass18_0::dyn_quantizeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$$c__DisplayClass18_0::dyn_quantizeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quantizeLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NotePlayer/VROSC.<>c__DisplayClass18_0.<Play>b__0
bool VROSC::NotePlayer::$$c__DisplayClass18_0::$Play$b__0(double x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$$c__DisplayClass18_0::<Play>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Play>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NotePlayer/VROSC.<PlayNoteQuantized>d__20
#include "VROSC/NotePlayer_-PlayNoteQuantized-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double predictedDspTime
[[deprecated("Use field access instead!")]] double& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_predictedDspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_predictedDspTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predictedDspTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NotePlayer <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::NotePlayer*& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::NotePlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 note
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_note");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "note"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocity
[[deprecated("Use field access instead!")]] float& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.HandType handType
[[deprecated("Use field access instead!")]] ::VROSC::HandType& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_handType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_handType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handType"))->offset;
  return *reinterpret_cast<::VROSC::HandType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NotePlayer/VROSC.<PlayNoteQuantized>d__20.MoveNext
void VROSC::NotePlayer::$PlayNoteQuantized$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NotePlayer::$PlayNoteQuantized$d__20), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NotePlayer/VROSC.<PlayNoteQuantized>d__20.SetStateMachine
void VROSC::NotePlayer::$PlayNoteQuantized$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$PlayNoteQuantized$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NotePlayer::$PlayNoteQuantized$d__20), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NotePlayer/VROSC.<Stop>d__21
#include "VROSC/NotePlayer_-Stop-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::NotePlayer::$Stop$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& VROSC::NotePlayer::$Stop$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean linkHands
[[deprecated("Use field access instead!")]] bool& VROSC::NotePlayer::$Stop$d__21::dyn_linkHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_linkHands");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkHands"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.HandType handType
[[deprecated("Use field access instead!")]] ::VROSC::HandType& VROSC::NotePlayer::$Stop$d__21::dyn_handType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_handType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handType"))->offset;
  return *reinterpret_cast<::VROSC::HandType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NotePlayer <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::NotePlayer*& VROSC::NotePlayer::$Stop$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::NotePlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediate
[[deprecated("Use field access instead!")]] bool& VROSC::NotePlayer::$Stop$d__21::dyn_immediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_immediate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::NotePlayer::$Stop$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NotePlayer/VROSC.<Stop>d__21.MoveNext
void VROSC::NotePlayer::$Stop$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NotePlayer::$Stop$d__21), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NotePlayer/VROSC.<Stop>d__21.SetStateMachine
void VROSC::NotePlayer::$Stop$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NotePlayer::$Stop$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::NotePlayer::$Stop$d__21), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ParameterController
#include "VROSC/ParameterController.hpp"
// Including type: VROSC.InstrumentController
#include "VROSC/InstrumentController.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MaxExternalSendFrequency
float VROSC::ParameterController::_get_MaxExternalSendFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::_get_MaxExternalSendFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "ParameterController", "MaxExternalSendFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MaxExternalSendFrequency
void VROSC::ParameterController::_set_MaxExternalSendFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::_set_MaxExternalSendFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ParameterController", "MaxExternalSendFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ParameterController/VROSC.TargetParameter _targetParameter
[[deprecated("Use field access instead!")]] ::VROSC::ParameterController::TargetParameter& VROSC::ParameterController::dyn__targetParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__targetParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetParameter"))->offset;
  return *reinterpret_cast<::VROSC::ParameterController::TargetParameter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MidiCC _midiCC
[[deprecated("Use field access instead!")]] ::VROSC::MidiCC& VROSC::ParameterController::dyn__midiCC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__midiCC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_midiCC"))->offset;
  return *reinterpret_cast<::VROSC::MidiCC*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InstrumentController _instrument
[[deprecated("Use field access instead!")]] ::VROSC::InstrumentController*& VROSC::ParameterController::dyn__instrument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__instrument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instrument"))->offset;
  return *reinterpret_cast<::VROSC::InstrumentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handSpecific
[[deprecated("Use field access instead!")]] bool& VROSC::ParameterController::dyn__handSpecific() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__handSpecific");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSpecific"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _saveToPatch
[[deprecated("Use field access instead!")]] bool& VROSC::ParameterController::dyn__saveToPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__saveToPatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveToPatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastSendTime
[[deprecated("Use field access instead!")]] float& VROSC::ParameterController::dyn__lastSendTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::dyn__lastSendTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSendTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ParameterController.get_Instrument
::VROSC::InstrumentController* VROSC::ParameterController::get_Instrument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::get_Instrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Instrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::InstrumentController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ParameterController.set_Instrument
void VROSC::ParameterController::set_Instrument(::VROSC::InstrumentController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::set_Instrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Instrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ParameterController.UpdateParameterChange
void VROSC::ParameterController::UpdateParameterChange(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::UpdateParameterChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateParameterChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ParameterController.NodeBegin
void VROSC::ParameterController::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ParameterController.NodeStay
void VROSC::ParameterController::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ParameterController/VROSC.TargetParameter
#include "VROSC/ParameterController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.ParameterController/VROSC.TargetParameter MidiPitchBend
::VROSC::ParameterController::TargetParameter VROSC::ParameterController::TargetParameter::_get_MidiPitchBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::TargetParameter::_get_MidiPitchBend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ParameterController::TargetParameter>("VROSC", "ParameterController/TargetParameter", "MidiPitchBend"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ParameterController/VROSC.TargetParameter MidiPitchBend
void VROSC::ParameterController::TargetParameter::_set_MidiPitchBend(::VROSC::ParameterController::TargetParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::TargetParameter::_set_MidiPitchBend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ParameterController/TargetParameter", "MidiPitchBend", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ParameterController/VROSC.TargetParameter MidiCC
::VROSC::ParameterController::TargetParameter VROSC::ParameterController::TargetParameter::_get_MidiCC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::TargetParameter::_get_MidiCC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ParameterController::TargetParameter>("VROSC", "ParameterController/TargetParameter", "MidiCC"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ParameterController/VROSC.TargetParameter MidiCC
void VROSC::ParameterController::TargetParameter::_set_MidiCC(::VROSC::ParameterController::TargetParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::TargetParameter::_set_MidiCC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ParameterController/TargetParameter", "MidiCC", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::ParameterController::TargetParameter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ParameterController::TargetParameter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PositionOnSignal
#include "VROSC/PositionOnSignal.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.PositionOnSignal.SetPosition
void VROSC::PositionOnSignal::SetPosition(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PositionOnSignal::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.PositionOnSignal.NodeBegin
void VROSC::PositionOnSignal::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PositionOnSignal::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.PositionOnSignal.NodeStay
void VROSC::PositionOnSignal::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PositionOnSignal::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PrefabSpawner
#include "VROSC/PrefabSpawner.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode _prefab
[[deprecated("Use field access instead!")]] ::VROSC::SignalNode*& VROSC::PrefabSpawner::dyn__prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::dyn__prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefab"))->offset;
  return *reinterpret_cast<::VROSC::SignalNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::PrefabSpawner::dyn__spawnLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::dyn__spawnLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.SignalNode> _instances
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::SignalNode*>*& VROSC::PrefabSpawner::dyn__instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::dyn__instances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instances"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::SignalNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode _currentlySignalingInstance
[[deprecated("Use field access instead!")]] ::VROSC::SignalNode*& VROSC::PrefabSpawner::dyn__currentlySignalingInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::dyn__currentlySignalingInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlySignalingInstance"))->offset;
  return *reinterpret_cast<::VROSC::SignalNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PrefabSpawner.Clear
void VROSC::PrefabSpawner::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.PrefabSpawner.NodeBegin
void VROSC::PrefabSpawner::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.PrefabSpawner.NodeStay
void VROSC::PrefabSpawner::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.PrefabSpawner.NodeEnd
void VROSC::PrefabSpawner::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PrefabSpawner::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ScaleRandomizer
#include "VROSC/ScaleRandomizer.hpp"
// Including type: VROSC.ScaleRandomizer/VROSC.RandomTarget
#include "VROSC/ScaleRandomizer_RandomTarget.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.ScaleRandomizer/VROSC.RandomTarget[] _randomTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::ScaleRandomizer::RandomTarget*>& VROSC::ScaleRandomizer::dyn__randomTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::dyn__randomTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::ScaleRandomizer::RandomTarget*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ScaleRandomizer.NodeBegin
void VROSC::ScaleRandomizer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ScaleRandomizer/VROSC.RandomTarget
#include "VROSC/ScaleRandomizer_RandomTarget.hpp"
// Including type: VROSC.ScaleNode
#include "VROSC/ScaleNode.hpp"
// Including type: VROSC.NoteNode
#include "VROSC/NoteNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.ScaleNode Scale
[[deprecated("Use field access instead!")]] ::VROSC::ScaleNode*& VROSC::ScaleRandomizer::RandomTarget::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::RandomTarget::dyn_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<::VROSC::ScaleNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NoteNode Base
[[deprecated("Use field access instead!")]] ::VROSC::NoteNode*& VROSC::ScaleRandomizer::RandomTarget::dyn_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::RandomTarget::dyn_Base");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Base"))->offset;
  return *reinterpret_cast<::VROSC::NoteNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ChanceToKeepBase
[[deprecated("Use field access instead!")]] float& VROSC::ScaleRandomizer::RandomTarget::dyn_ChanceToKeepBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::RandomTarget::dyn_ChanceToKeepBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChanceToKeepBase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinDropNotes
[[deprecated("Use field access instead!")]] int& VROSC::ScaleRandomizer::RandomTarget::dyn_MinDropNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::RandomTarget::dyn_MinDropNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinDropNotes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxDropNotes
[[deprecated("Use field access instead!")]] int& VROSC::ScaleRandomizer::RandomTarget::dyn_MaxDropNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleRandomizer::RandomTarget::dyn_MaxDropNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDropNotes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalToMover
#include "VROSC/SignalToMover.hpp"
// Including type: VROSC.TransformMover
#include "VROSC/TransformMover.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.TransformMover transformMover
[[deprecated("Use field access instead!")]] ::VROSC::TransformMover*& VROSC::SignalToMover::dyn_transformMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalToMover::dyn_transformMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformMover"))->offset;
  return *reinterpret_cast<::VROSC::TransformMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SignalToMover.NodeBegin
void VROSC::SignalToMover::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalToMover::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalToMover.NodeEnd
void VROSC::SignalToMover::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalToMover::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SynthParameterController
#include "VROSC/SynthParameterController.hpp"
// Including type: VROSC.SynthParameterController/VROSC.TargetParameter
#include "VROSC/SynthParameterController_TargetParameter.hpp"
// Including type: VROSC.SynthController
#include "VROSC/SynthController.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SynthController _synthController
[[deprecated("Use field access instead!")]] ::VROSC::SynthController*& VROSC::SynthParameterController::dyn__synthController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::dyn__synthController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synthController"))->offset;
  return *reinterpret_cast<::VROSC::SynthController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SynthParameterController.NodeBegin
void VROSC::SynthParameterController::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SynthParameterController.NodeStay
void VROSC::SynthParameterController::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SynthParameterController/VROSC.TargetParameter
#include "VROSC/SynthParameterController_TargetParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.SynthParameterController/VROSC.TargetParameter MidiPitchBend
::VROSC::SynthParameterController::TargetParameter VROSC::SynthParameterController::TargetParameter::_get_MidiPitchBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::TargetParameter::_get_MidiPitchBend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SynthParameterController::TargetParameter>("VROSC", "SynthParameterController/TargetParameter", "MidiPitchBend"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SynthParameterController/VROSC.TargetParameter MidiPitchBend
void VROSC::SynthParameterController::TargetParameter::_set_MidiPitchBend(::VROSC::SynthParameterController::TargetParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::TargetParameter::_set_MidiPitchBend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SynthParameterController/TargetParameter", "MidiPitchBend", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SynthParameterController/VROSC.TargetParameter MidiCC
::VROSC::SynthParameterController::TargetParameter VROSC::SynthParameterController::TargetParameter::_get_MidiCC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::TargetParameter::_get_MidiCC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SynthParameterController::TargetParameter>("VROSC", "SynthParameterController/TargetParameter", "MidiCC"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SynthParameterController/VROSC.TargetParameter MidiCC
void VROSC::SynthParameterController::TargetParameter::_set_MidiCC(::VROSC::SynthParameterController::TargetParameter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::TargetParameter::_set_MidiCC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SynthParameterController/TargetParameter", "MidiCC", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::SynthParameterController::TargetParameter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SynthParameterController::TargetParameter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.TieSizeToInt
#include "VROSC/TieSizeToInt.hpp"
// Including type: VROSC.IntNode
#include "VROSC/IntNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.IntNode _x
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::TieSizeToInt::dyn__x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_x"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousValueX
[[deprecated("Use field access instead!")]] int& VROSC::TieSizeToInt::dyn__previousValueX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__previousValueX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousValueX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntNode _y
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::TieSizeToInt::dyn__y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_y"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousValueY
[[deprecated("Use field access instead!")]] int& VROSC::TieSizeToInt::dyn__previousValueY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__previousValueY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousValueY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntNode _z
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::TieSizeToInt::dyn__z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_z"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _previousValueZ
[[deprecated("Use field access instead!")]] int& VROSC::TieSizeToInt::dyn__previousValueZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::dyn__previousValueZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousValueZ"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.TieSizeToInt.Start
void VROSC::TieSizeToInt::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.TieSizeToInt.ValueChangedX
void VROSC::TieSizeToInt::ValueChangedX(int newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::ValueChangedX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueChangedX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: VROSC.TieSizeToInt.ValueChangedY
void VROSC::TieSizeToInt::ValueChangedY(int newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::ValueChangedY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueChangedY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated method: VROSC.TieSizeToInt.ValueChangedZ
void VROSC::TieSizeToInt::ValueChangedZ(int newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TieSizeToInt::ValueChangedZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueChangedZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ToggleBypass
#include "VROSC/ToggleBypass.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _nodesToToggle
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ToggleBypass::dyn__nodesToToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ToggleBypass::dyn__nodesToToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodesToToggle"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ToggleBypass.NodeBegin
void VROSC::ToggleBypass::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ToggleBypass::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.TransformResizer
#include "VROSC/TransformResizer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _resizeTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::TransformResizer::dyn__resizeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__resizeTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resizeTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::TransformResizer::dyn__startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::TransformResizer::dyn__startScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__startScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invertX
[[deprecated("Use field access instead!")]] bool& VROSC::TransformResizer::dyn__invertX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__invertX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invertY
[[deprecated("Use field access instead!")]] bool& VROSC::TransformResizer::dyn__invertY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__invertY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invertZ
[[deprecated("Use field access instead!")]] bool& VROSC::TransformResizer::dyn__invertZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__invertZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSize
[[deprecated("Use field access instead!")]] float& VROSC::TransformResizer::dyn__minSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::dyn__minSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.TransformResizer.get_RequireOrigin
bool VROSC::TransformResizer::get_RequireOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::get_RequireOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.TransformResizer.NodeBegin
void VROSC::TransformResizer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.TransformResizer.NodeStay
void VROSC::TransformResizer::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.TransformResizer.NodeEnd
void VROSC::TransformResizer::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformResizer::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.TransformRotator
#include "VROSC/TransformRotator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::TransformRotator::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _sourceTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::TransformRotator::dyn__sourceTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__sourceTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _relativeStartRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& VROSC::TransformRotator::dyn__relativeStartRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__relativeStartRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeStartRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockX
[[deprecated("Use field access instead!")]] bool& VROSC::TransformRotator::dyn__lockX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockY
[[deprecated("Use field access instead!")]] bool& VROSC::TransformRotator::dyn__lockY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockZ
[[deprecated("Use field access instead!")]] bool& VROSC::TransformRotator::dyn__lockZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::dyn__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.TransformRotator.get_RequireOrigin
bool VROSC::TransformRotator::get_RequireOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::get_RequireOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.TransformRotator.NodeBegin
void VROSC::TransformRotator::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.TransformRotator.NodeStay
void VROSC::TransformRotator::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.TransformRotator.NodeEnd
void VROSC::TransformRotator::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TransformRotator::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalNode
#include "VROSC/SignalNode.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _bypass
[[deprecated("Use field access instead!")]] bool& VROSC::SignalNode::dyn__bypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__bypass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bypass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VROSC.SignalNode[] _output
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::SignalNode::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _blockPassOnThisFrame
[[deprecated("Use field access instead!")]] bool& VROSC::SignalNode::dyn__blockPassOnThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__blockPassOnThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockPassOnThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _receivedSignalsThisFrame
[[deprecated("Use field access instead!")]] int& VROSC::SignalNode::dyn__receivedSignalsThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__receivedSignalsThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedSignalsThisFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _nodeProcessingSignal
[[deprecated("Use field access instead!")]] bool& VROSC::SignalNode::dyn__nodeProcessingSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__nodeProcessingSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeProcessingSignal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Signal _cachedSignal
[[deprecated("Use field access instead!")]] ::VROSC::Signal*& VROSC::SignalNode::dyn__cachedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::dyn__cachedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedSignal"))->offset;
  return *reinterpret_cast<::VROSC::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SignalNode.get_MaxInputs
int VROSC::SignalNode::get_MaxInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::get_MaxInputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalNode.get_RequireOrigin
bool VROSC::SignalNode::get_RequireOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::get_RequireOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalNode.OnDisable
void VROSC::SignalNode::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalNode.OnEnable
void VROSC::SignalNode::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalNode.ReceiveSignal
void VROSC::SignalNode::ReceiveSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::ReceiveSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalNode.PassOnSignal
void VROSC::SignalNode::PassOnSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::PassOnSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassOnSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalNode.LateUpdate
void VROSC::SignalNode::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalNode.NodeBegin
void VROSC::SignalNode::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalNode.NodeStay
void VROSC::SignalNode::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalNode.NodeEnd
void VROSC::SignalNode::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalNode::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
// Including type: VROSC.SignalControllerInfo
#include "VROSC/SignalControllerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Value
[[deprecated("Use field access instead!")]] float& VROSC::Signal::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Signal::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.SignalControllerInfo ControllerInfo
[[deprecated("Use field access instead!")]] ::VROSC::SignalControllerInfo*& VROSC::Signal::dyn_ControllerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Signal::dyn_ControllerInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ControllerInfo"))->offset;
  return *reinterpret_cast<::VROSC::SignalControllerInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> FirstFrameOfSignal
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& VROSC::Signal::dyn_FirstFrameOfSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Signal::dyn_FirstFrameOfSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstFrameOfSignal"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double PredictedDSPTime
[[deprecated("Use field access instead!")]] double& VROSC::Signal::dyn_PredictedDSPTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Signal::dyn_PredictedDSPTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PredictedDSPTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalControllerInfo
#include "VROSC/SignalControllerInfo.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.InputDevice Origin
[[deprecated("Use field access instead!")]] ::VROSC::InputDevice*& VROSC::SignalControllerInfo::dyn_Origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalControllerInfo::dyn_Origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Origin"))->offset;
  return *reinterpret_cast<::VROSC::InputDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 NormalizedPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SignalControllerInfo::dyn_NormalizedPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalControllerInfo::dyn_NormalizedPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalizedPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 NormalizedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SignalControllerInfo::dyn_NormalizedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalControllerInfo::dyn_NormalizedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalizedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 RelativeVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::SignalControllerInfo::dyn_RelativeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalControllerInfo::dyn_RelativeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativeVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BypassStateFilter
#include "VROSC/BypassStateFilter.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode _signalNodeToCheck
[[deprecated("Use field access instead!")]] ::VROSC::SignalNode*& VROSC::BypassStateFilter::dyn__signalNodeToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassStateFilter::dyn__signalNodeToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signalNodeToCheck"))->offset;
  return *reinterpret_cast<::VROSC::SignalNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _passOnFalse
[[deprecated("Use field access instead!")]] bool& VROSC::BypassStateFilter::dyn__passOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassStateFilter::dyn__passOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BypassStateFilter.FilterSignal
void VROSC::BypassStateFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassStateFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CurrentMidiInterfaceFilter
#include "VROSC/CurrentMidiInterfaceFilter.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType _allowType
[[deprecated("Use field access instead!")]] ::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType& VROSC::CurrentMidiInterfaceFilter::dyn__allowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::dyn__allowType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowType"))->offset;
  return *reinterpret_cast<::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CurrentMidiInterfaceFilter.FilterSignal
void VROSC::CurrentMidiInterfaceFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType
#include "VROSC/CurrentMidiInterfaceFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType Internal
::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType>("VROSC", "CurrentMidiInterfaceFilter/MidiInterfaceType", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType Internal
void VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_set_Internal(::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CurrentMidiInterfaceFilter/MidiInterfaceType", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType External
::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType>("VROSC", "CurrentMidiInterfaceFilter/MidiInterfaceType", "External"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CurrentMidiInterfaceFilter/VROSC.MidiInterfaceType External
void VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_set_External(::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CurrentMidiInterfaceFilter/MidiInterfaceType", "External", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CurrentMidiInterfaceFilter::MidiInterfaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.DelaySignal
#include "VROSC/DelaySignal.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _delayTime
[[deprecated("Use field access instead!")]] float& VROSC::DelaySignal::dyn__delayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DelaySignal::dyn__delayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _signalTimer
[[deprecated("Use field access instead!")]] float& VROSC::DelaySignal::dyn__signalTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DelaySignal::dyn__signalTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signalTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.DelaySignal.NodeBegin
void VROSC::DelaySignal::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DelaySignal::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.DelaySignal.NodeStay
void VROSC::DelaySignal::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DelaySignal::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.DelaySignal.NodeEnd
void VROSC::DelaySignal::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DelaySignal::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.DirectionalFilter
#include "VROSC/DirectionalFilter.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _filterDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& VROSC::DirectionalFilter::dyn__filterDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::dyn__filterDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.DirectionalFilter/VROSC.Space _relativeTo
[[deprecated("Use field access instead!")]] ::VROSC::DirectionalFilter::Space& VROSC::DirectionalFilter::dyn__relativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::dyn__relativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeTo"))->offset;
  return *reinterpret_cast<::VROSC::DirectionalFilter::Space*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _filterAngle
[[deprecated("Use field access instead!")]] float& VROSC::DirectionalFilter::dyn__filterAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::dyn__filterAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkFirstFrameOnly
[[deprecated("Use field access instead!")]] bool& VROSC::DirectionalFilter::dyn__checkFirstFrameOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::dyn__checkFirstFrameOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkFirstFrameOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstFramePassed
[[deprecated("Use field access instead!")]] bool& VROSC::DirectionalFilter::dyn__firstFramePassed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::dyn__firstFramePassed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFramePassed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.DirectionalFilter.NodeEnd
void VROSC::DirectionalFilter::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.DirectionalFilter.FilterSignal
void VROSC::DirectionalFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.DirectionalFilter/VROSC.Space
#include "VROSC/DirectionalFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.DirectionalFilter/VROSC.Space InputNode
::VROSC::DirectionalFilter::Space VROSC::DirectionalFilter::Space::_get_InputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_get_InputNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::DirectionalFilter::Space>("VROSC", "DirectionalFilter/Space", "InputNode"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.DirectionalFilter/VROSC.Space InputNode
void VROSC::DirectionalFilter::Space::_set_InputNode(::VROSC::DirectionalFilter::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_set_InputNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "DirectionalFilter/Space", "InputNode", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.DirectionalFilter/VROSC.Space ThisFilter
::VROSC::DirectionalFilter::Space VROSC::DirectionalFilter::Space::_get_ThisFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_get_ThisFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::DirectionalFilter::Space>("VROSC", "DirectionalFilter/Space", "ThisFilter"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.DirectionalFilter/VROSC.Space ThisFilter
void VROSC::DirectionalFilter::Space::_set_ThisFilter(::VROSC::DirectionalFilter::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_set_ThisFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "DirectionalFilter/Space", "ThisFilter", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.DirectionalFilter/VROSC.Space World
::VROSC::DirectionalFilter::Space VROSC::DirectionalFilter::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::DirectionalFilter::Space>("VROSC", "DirectionalFilter/Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.DirectionalFilter/VROSC.Space World
void VROSC::DirectionalFilter::Space::_set_World(::VROSC::DirectionalFilter::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "DirectionalFilter/Space", "World", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::DirectionalFilter::Space::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DirectionalFilter::Space::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IntComparer
#include "VROSC/IntComparer.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _intA
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::IntComparer::dyn__intA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntComparer::dyn__intA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intA"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IntField _intB
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::IntComparer::dyn__intB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntComparer::dyn__intB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intB"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IntComparer.FilterSignal
void VROSC::IntComparer::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IntComparer::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InvertSignal
#include "VROSC/InvertSignal.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Signal _signal
[[deprecated("Use field access instead!")]] ::VROSC::Signal*& VROSC::InvertSignal::dyn__signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InvertSignal::dyn__signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signal"))->offset;
  return *reinterpret_cast<::VROSC::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InvertSignal.LateUpdate
void VROSC::InvertSignal::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InvertSignal::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InvertSignal.ReceiveSignal
void VROSC::InvertSignal::ReceiveSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InvertSignal::ReceiveSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.IsEnabledFilter
#include "VROSC/IsEnabledFilter.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour _enablableToCheck
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& VROSC::IsEnabledFilter::dyn__enablableToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IsEnabledFilter::dyn__enablableToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enablableToCheck"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _passOnFalse
[[deprecated("Use field access instead!")]] bool& VROSC::IsEnabledFilter::dyn__passOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IsEnabledFilter::dyn__passOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.IsEnabledFilter.FilterSignal
void VROSC::IsEnabledFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::IsEnabledFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.OneShot
#include "VROSC/OneShot.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _signalDuration
[[deprecated("Use field access instead!")]] float& VROSC::OneShot::dyn__signalDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OneShot::dyn__signalDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signalDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentSignalTime
[[deprecated("Use field access instead!")]] float& VROSC::OneShot::dyn__currentSignalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OneShot::dyn__currentSignalTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSignalTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.OneShot.NodeBegin
void VROSC::OneShot::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OneShot::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.OneShot.NodeStay
void VROSC::OneShot::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OneShot::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.OneShot.FilterSignal
void VROSC::OneShot::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::OneShot::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ScaleContainsNoteFilter
#include "VROSC/ScaleContainsNoteFilter.hpp"
// Including type: VROSC.ScaleNode
#include "VROSC/ScaleNode.hpp"
// Including type: VROSC.NoteField
#include "VROSC/NoteField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.ScaleNode _scale
[[deprecated("Use field access instead!")]] ::VROSC::ScaleNode*& VROSC::ScaleContainsNoteFilter::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleContainsNoteFilter::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::VROSC::ScaleNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteField _note
[[deprecated("Use field access instead!")]] ::VROSC::NoteField*& VROSC::ScaleContainsNoteFilter::dyn__note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleContainsNoteFilter::dyn__note");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_note"))->offset;
  return *reinterpret_cast<::VROSC::NoteField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ScaleContainsNoteFilter.FilterSignal
void VROSC::ScaleContainsNoteFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ScaleContainsNoteFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalAnd
#include "VROSC/SignalAnd.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _cachedFirstValue
[[deprecated("Use field access instead!")]] float& VROSC::SignalAnd::dyn__cachedFirstValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::dyn__cachedFirstValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedFirstValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SignalAnd.TransformValue
::VROSC::Signal* VROSC::SignalAnd::TransformValue(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::TransformValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Signal*, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalAnd.get_MaxInputs
int VROSC::SignalAnd::get_MaxInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::get_MaxInputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SignalAnd.NodeBegin
void VROSC::SignalAnd::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalAnd.NodeStay
void VROSC::SignalAnd::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalAnd.NodeEnd
void VROSC::SignalAnd::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalAnd::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalFilter
#include "VROSC/SignalFilter.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.SignalFilter.FilterSignal
void VROSC::SignalFilter::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalFilter::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalFilter.NodeBegin
void VROSC::SignalFilter::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalFilter::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalFilter.NodeStay
void VROSC::SignalFilter::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalFilter::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SignalOnce
#include "VROSC/SignalOnce.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _triggerTimes
[[deprecated("Use field access instead!")]] int& VROSC::SignalOnce::dyn__triggerTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalOnce::dyn__triggerTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_triggerTimes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SignalOnce.NodeBegin
void VROSC::SignalOnce::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalOnce::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.SignalOnce.FilterSignal
void VROSC::SignalOnce::FilterSignal(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SignalOnce::FilterSignal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalFilter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ValueMultiplier
#include "VROSC/ValueMultiplier.hpp"
// Including type: VROSC.FloatField
#include "VROSC/FloatField.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.FloatField _factor
[[deprecated("Use field access instead!")]] ::VROSC::FloatField*& VROSC::ValueMultiplier::dyn__factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::dyn__factor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_factor"))->offset;
  return *reinterpret_cast<::VROSC::FloatField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _centerOnHalf
[[deprecated("Use field access instead!")]] bool& VROSC::ValueMultiplier::dyn__centerOnHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::dyn__centerOnHalf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerOnHalf"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ValueMultiplier.TransformValue
::VROSC::Signal* VROSC::ValueMultiplier::TransformValue(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::TransformValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Signal*, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueMultiplier.NodeBegin
void VROSC::ValueMultiplier::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueMultiplier.NodeStay
void VROSC::ValueMultiplier::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueMultiplier.NodeEnd
void VROSC::ValueMultiplier::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueMultiplier::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ValueSmoother
#include "VROSC/ValueSmoother.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothFrames
[[deprecated("Use field access instead!")]] int& VROSC::ValueSmoother::dyn__smoothFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::dyn__smoothFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothFrames"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> _buffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& VROSC::ValueSmoother::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ValueSmoother.TransformValue
::VROSC::Signal* VROSC::ValueSmoother::TransformValue(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::TransformValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Signal*, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueSmoother.NodeBegin
void VROSC::ValueSmoother::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueSmoother.NodeStay
void VROSC::ValueSmoother::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueSmoother.NodeEnd
void VROSC::ValueSmoother::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSmoother::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ValueSourceSelector
#include "VROSC/ValueSourceSelector.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.ValueSourceSelector/VROSC.ValueSource _valueSource
[[deprecated("Use field access instead!")]] ::VROSC::ValueSourceSelector::ValueSource& VROSC::ValueSourceSelector::dyn__valueSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::dyn__valueSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueSource"))->offset;
  return *reinterpret_cast<::VROSC::ValueSourceSelector::ValueSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ValueSourceSelector.GetSignalValue
float VROSC::ValueSourceSelector::GetSignalValue(::VROSC::Signal* signal, ::VROSC::ValueSourceSelector::ValueSource valueSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::GetSignalValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ValueSourceSelector", "GetSignalValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(valueSource)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, signal, valueSource);
}
// Autogenerated method: VROSC.ValueSourceSelector.NodeBegin
void VROSC::ValueSourceSelector::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueSourceSelector.NodeStay
void VROSC::ValueSourceSelector::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueSourceSelector.NodeEnd
void VROSC::ValueSourceSelector::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ValueSourceSelector/VROSC.ValueSource
#include "VROSC/ValueSourceSelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionX
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_PositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_PositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "PositionX"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionX
void VROSC::ValueSourceSelector::ValueSource::_set_PositionX(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_PositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "PositionX", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionY
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_PositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_PositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "PositionY"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionY
void VROSC::ValueSourceSelector::ValueSource::_set_PositionY(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_PositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "PositionY", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionZ
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_PositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_PositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "PositionZ"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource PositionZ
void VROSC::ValueSourceSelector::ValueSource::_set_PositionZ(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_PositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "PositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationX
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_RotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_RotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "RotationX"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationX
void VROSC::ValueSourceSelector::ValueSource::_set_RotationX(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_RotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "RotationX", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationY
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_RotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_RotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "RotationY"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationY
void VROSC::ValueSourceSelector::ValueSource::_set_RotationY(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_RotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "RotationY", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationZ
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_RotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_RotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "RotationZ"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource RotationZ
void VROSC::ValueSourceSelector::ValueSource::_set_RotationZ(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_RotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "RotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource Velocity
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource Velocity
void VROSC::ValueSourceSelector::ValueSource::_set_Velocity(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource IndexTrigger
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_IndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_IndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "IndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource IndexTrigger
void VROSC::ValueSourceSelector::ValueSource::_set_IndexTrigger(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_IndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "IndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource GripTrigger
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_GripTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_GripTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "GripTrigger"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource GripTrigger
void VROSC::ValueSourceSelector::ValueSource::_set_GripTrigger(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_GripTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "GripTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource StickPadX
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_StickPadX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_StickPadX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "StickPadX"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource StickPadX
void VROSC::ValueSourceSelector::ValueSource::_set_StickPadX(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_StickPadX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "StickPadX", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource StickPadY
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_StickPadY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_StickPadY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "StickPadY"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource StickPadY
void VROSC::ValueSourceSelector::ValueSource::_set_StickPadY(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_StickPadY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "StickPadY", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource DistanceBetweenControllers
::VROSC::ValueSourceSelector::ValueSource VROSC::ValueSourceSelector::ValueSource::_get_DistanceBetweenControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_get_DistanceBetweenControllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::ValueSourceSelector::ValueSource>("VROSC", "ValueSourceSelector/ValueSource", "DistanceBetweenControllers"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.ValueSourceSelector/VROSC.ValueSource DistanceBetweenControllers
void VROSC::ValueSourceSelector::ValueSource::_set_DistanceBetweenControllers(::VROSC::ValueSourceSelector::ValueSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::_set_DistanceBetweenControllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ValueSourceSelector/ValueSource", "DistanceBetweenControllers", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::ValueSourceSelector::ValueSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueSourceSelector::ValueSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ValueTransformer
#include "VROSC/ValueTransformer.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _transformationCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::ValueTransformer::dyn__transformationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueTransformer::dyn__transformationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ValueTransformer.TransformValue
::VROSC::Signal* VROSC::ValueTransformer::TransformValue(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueTransformer::TransformValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(signal)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Signal*, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueTransformer.NodeBegin
void VROSC::ValueTransformer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueTransformer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueTransformer.NodeStay
void VROSC::ValueTransformer::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueTransformer::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.ValueTransformer.NodeEnd
void VROSC::ValueTransformer::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ValueTransformer::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BypassOnExternal
#include "VROSC/BypassOnExternal.hpp"
// Including type: VROSC.SignalNode
#include "VROSC/SignalNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode _nodeToBypass
[[deprecated("Use field access instead!")]] ::VROSC::SignalNode*& VROSC::BypassOnExternal::dyn__nodeToBypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassOnExternal::dyn__nodeToBypass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeToBypass"))->offset;
  return *reinterpret_cast<::VROSC::SignalNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BypassOnExternal.Awake
void VROSC::BypassOnExternal::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassOnExternal::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BypassOnExternal.OnEnable
void VROSC::BypassOnExternal::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassOnExternal::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BypassOnExternal.UseExternalChanged
void VROSC::BypassOnExternal::UseExternalChanged(bool useExternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassOnExternal::UseExternalChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseExternalChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useExternal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useExternal);
}
// Autogenerated method: VROSC.BypassOnExternal.OnDestroy
void VROSC::BypassOnExternal::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BypassOnExternal::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ControllerInputNode
#include "VROSC/ControllerInputNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: VROSC.SignalNode
#include "VROSC/SignalNode.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: VROSC.SignalControllerInfo
#include "VROSC/SignalControllerInfo.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.InputDevice> OnHoverBegin
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::InputDevice*>*& VROSC::ControllerInputNode::dyn_OnHoverBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnHoverBegin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnHoverBegin"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::InputDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.InputDevice> OnHoverStay
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::InputDevice*>*& VROSC::ControllerInputNode::dyn_OnHoverStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnHoverStay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnHoverStay"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::InputDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.InputDevice> OnHoverEnd
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::InputDevice*>*& VROSC::ControllerInputNode::dyn_OnHoverEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnHoverEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnHoverEnd"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::InputDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnPressBegin
[[deprecated("Use field access instead!")]] ::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*& VROSC::ControllerInputNode::dyn_OnPressBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnPressBegin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPressBegin"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnPressStay
[[deprecated("Use field access instead!")]] ::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*& VROSC::ControllerInputNode::dyn_OnPressStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnPressStay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPressStay"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<VROSC.InputDevice,VROSC.TriggerButton> OnPressEnd
[[deprecated("Use field access instead!")]] ::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>*& VROSC::ControllerInputNode::dyn_OnPressEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn_OnPressEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPressEnd"))->offset;
  return *reinterpret_cast<::System::Action_2<::VROSC::InputDevice*, ::VROSC::TriggerButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _leftHoverOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__leftHoverOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__leftHoverOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHoverOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _rightHoverOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__rightHoverOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__rightHoverOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHoverOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _leftTriggerOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__leftTriggerOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__leftTriggerOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftTriggerOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _rightTriggerOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__rightTriggerOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__rightTriggerOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightTriggerOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _leftGripOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__leftGripOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__leftGripOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftGripOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _rightGripOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__rightGripOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__rightGripOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightGripOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _leftTouchpadXAOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__leftTouchpadXAOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__leftTouchpadXAOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftTouchpadXAOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _rightTouchpadXAOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__rightTouchpadXAOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__rightTouchpadXAOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightTouchpadXAOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _leftAppMenuYBOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__leftAppMenuYBOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__leftAppMenuYBOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftAppMenuYBOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SignalNode[] _rightAppMenuYBOutput
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::SignalNode*>& VROSC::ControllerInputNode::dyn__rightAppMenuYBOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__rightAppMenuYBOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightAppMenuYBOutput"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::SignalNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useColliderScale
[[deprecated("Use field access instead!")]] bool& VROSC::ControllerInputNode::dyn__useColliderScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__useColliderScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useColliderScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider _collider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& VROSC::ControllerInputNode::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disablePointing
[[deprecated("Use field access instead!")]] bool& VROSC::ControllerInputNode::dyn__disablePointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__disablePointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disablePointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pointGripOnly
[[deprecated("Use field access instead!")]] bool& VROSC::ControllerInputNode::dyn__pointGripOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__pointGripOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointGripOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disablesGrip
[[deprecated("Use field access instead!")]] bool& VROSC::ControllerInputNode::dyn__disablesGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::dyn__disablesGrip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disablesGrip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ControllerInputNode.get_DisablePointing
bool VROSC::ControllerInputNode::get_DisablePointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::get_DisablePointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisablePointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ControllerInputNode.get_HasGripOutputs
bool VROSC::ControllerInputNode::get_HasGripOutputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::get_HasGripOutputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasGripOutputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ControllerInputNode.get_DisablesGrip
bool VROSC::ControllerInputNode::get_DisablesGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::get_DisablesGrip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisablesGrip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ControllerInputNode.Start
void VROSC::ControllerInputNode::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ControllerInputNode.HoverBegin
void VROSC::ControllerInputNode::HoverBegin(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::HoverBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.ControllerInputNode.HoverStay
void VROSC::ControllerInputNode::HoverStay(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::HoverStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.ControllerInputNode.HoverEnd
void VROSC::ControllerInputNode::HoverEnd(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::HoverEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.ControllerInputNode.ButtonTriggerBegin
void VROSC::ControllerInputNode::ButtonTriggerBegin(::VROSC::InputDevice* device, ::VROSC::TriggerButton triggerButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::ButtonTriggerBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonTriggerBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(triggerButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, triggerButton);
}
// Autogenerated method: VROSC.ControllerInputNode.ButtonTriggerStay
void VROSC::ControllerInputNode::ButtonTriggerStay(::VROSC::InputDevice* device, ::VROSC::TriggerButton triggerButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::ButtonTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(triggerButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, triggerButton);
}
// Autogenerated method: VROSC.ControllerInputNode.ButtonTriggerEnd
void VROSC::ControllerInputNode::ButtonTriggerEnd(::VROSC::InputDevice* device, ::VROSC::TriggerButton triggerButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::ButtonTriggerEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonTriggerEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(triggerButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device, triggerButton);
}
// Autogenerated method: VROSC.ControllerInputNode.GetSignalControllerInfo
::VROSC::SignalControllerInfo* VROSC::ControllerInputNode::GetSignalControllerInfo(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetSignalControllerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignalControllerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::SignalControllerInfo*, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.ControllerInputNode.GetOutputNodes
::ArrayW<::VROSC::SignalNode*> VROSC::ControllerInputNode::GetOutputNodes(::VROSC::InputDevice* device, ::VROSC::TriggerButton triggerButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetOutputNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(triggerButton)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::VROSC::SignalNode*>, false>(this, ___internal__method, device, triggerButton);
}
// Autogenerated method: VROSC.ControllerInputNode.GetNormalizedPointInTransfrom
::UnityEngine::Vector3 VROSC::ControllerInputNode::GetNormalizedPointInTransfrom(::UnityEngine::Transform* t, ::UnityEngine::Vector3 point, ::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetNormalizedPointInTransfrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ControllerInputNode", "GetNormalizedPointInTransfrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(collider)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, point, collider);
}
// Autogenerated method: VROSC.ControllerInputNode.GetNormalizedRotation
::UnityEngine::Vector3 VROSC::ControllerInputNode::GetNormalizedRotation(::UnityEngine::Vector3 eulerAngles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetNormalizedRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ControllerInputNode", "GetNormalizedRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulerAngles)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eulerAngles);
}
// Autogenerated method: VROSC.ControllerInputNode.GetNormalizedRotation
float VROSC::ControllerInputNode::GetNormalizedRotation(float eulerAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetNormalizedRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ControllerInputNode", "GetNormalizedRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulerAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eulerAngle);
}
// Autogenerated method: VROSC.ControllerInputNode.GetRelativeVelocity
::UnityEngine::Vector3 VROSC::ControllerInputNode::GetRelativeVelocity(::UnityEngine::Transform* targetTransform, ::UnityEngine::Vector3 sourceVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ControllerInputNode::GetRelativeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "ControllerInputNode", "GetRelativeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetTransform), ::il2cpp_utils::ExtractType(sourceVelocity)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetTransform, sourceVelocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.DrumPadInitializer
#include "VROSC/DrumPadInitializer.hpp"
// Including type: VROSC.IntNode
#include "VROSC/IntNode.hpp"
// Including type: VROSC.NotePlayer
#include "VROSC/NotePlayer.hpp"
// Including type: VROSC.UIButton
#include "VROSC/UIButton.hpp"
// Including type: VROSC.NoteBoard
#include "VROSC/NoteBoard.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.IntNode _noteNode
[[deprecated("Use field access instead!")]] ::VROSC::IntNode*& VROSC::DrumPadInitializer::dyn__noteNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::dyn__noteNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteNode"))->offset;
  return *reinterpret_cast<::VROSC::IntNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NotePlayer _notePlayer
[[deprecated("Use field access instead!")]] ::VROSC::NotePlayer*& VROSC::DrumPadInitializer::dyn__notePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::dyn__notePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlayer"))->offset;
  return *reinterpret_cast<::VROSC::NotePlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UIButton _closeButton
[[deprecated("Use field access instead!")]] ::VROSC::UIButton*& VROSC::DrumPadInitializer::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<::VROSC::UIButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard _noteBoard
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard*& VROSC::DrumPadInitializer::dyn__noteBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::dyn__noteBoard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteBoard"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.DrumPadInitializer.GetNoteBoardRecursive
void VROSC::DrumPadInitializer::GetNoteBoardRecursive(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::GetNoteBoardRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoteBoardRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: VROSC.DrumPadInitializer.CloseButtonPressed
void VROSC::DrumPadInitializer::CloseButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::CloseButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.DrumPadInitializer.OnDestroy
void VROSC::DrumPadInitializer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.DrumPadInitializer.NodeBegin
void VROSC::DrumPadInitializer::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::DrumPadInitializer::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Microphone
#include "VROSC/Microphone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: VROSC.ResetableMover
#include "VROSC/ResetableMover.hpp"
// Including type: VROSC.MicrophoneController
#include "VROSC/MicrophoneController.hpp"
// Including type: VROSC.TransformMover
#include "VROSC/TransformMover.hpp"
// Including type: VROSC.Signal
#include "VROSC/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _microphoneHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& VROSC::Microphone::dyn__microphoneHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__microphoneHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _peakLight
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& VROSC::Microphone::dyn__peakLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__peakLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_peakLight"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _falloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::Microphone::dyn__falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ResetableMover _resetableMover
[[deprecated("Use field access instead!")]] ::VROSC::ResetableMover*& VROSC::Microphone::dyn__resetableMover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__resetableMover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetableMover"))->offset;
  return *reinterpret_cast<::VROSC::ResetableMover**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MicrophoneController _microphoneController
[[deprecated("Use field access instead!")]] ::VROSC::MicrophoneController*& VROSC::Microphone::dyn__microphoneController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__microphoneController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneController"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxMicrophoneDistance
[[deprecated("Use field access instead!")]] float& VROSC::Microphone::dyn__maxMicrophoneDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::dyn__maxMicrophoneDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxMicrophoneDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.Microphone.Awake
void VROSC::Microphone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.OnDestroy
void VROSC::Microphone::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.Setup
void VROSC::Microphone::Setup(::VROSC::MicrophoneController* microphoneController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microphoneController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, microphoneController);
}
// Autogenerated method: VROSC.Microphone.Update
void VROSC::Microphone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.CalculateProximity
void VROSC::Microphone::CalculateProximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::CalculateProximity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateProximity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.SetPeakLightActive
void VROSC::Microphone::SetPeakLightActive(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::SetPeakLightActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPeakLightActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.Microphone.SetToPosition
void VROSC::Microphone::SetToPosition(bool isAttached, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::SetToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isAttached), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isAttached, position, rotation, scale);
}
// Autogenerated method: VROSC.Microphone.MicrophoneReset
void VROSC::Microphone::MicrophoneReset(::VROSC::ResetableMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::MicrophoneReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.Microphone.MicrophoneMoved
void VROSC::Microphone::MicrophoneMoved(::VROSC::ResetableMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::MicrophoneMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.Microphone.MicrophoneStationMoved
void VROSC::Microphone::MicrophoneStationMoved(::VROSC::TransformMover* mover) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::MicrophoneStationMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicrophoneStationMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mover)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mover);
}
// Autogenerated method: VROSC.Microphone.OnEnable
void VROSC::Microphone::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.OnDisable
void VROSC::Microphone::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.Microphone.NodeBegin
void VROSC::Microphone::NodeBegin(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::NodeBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.Microphone.NodeStay
void VROSC::Microphone::NodeStay(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::NodeStay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated method: VROSC.Microphone.NodeEnd
void VROSC::Microphone::NodeEnd(::VROSC::Signal* signal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Microphone::NodeEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SignalNode*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, signal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoard
#include "VROSC/NoteBoard.hpp"
// Including type: VROSC.ControllerInputNode
#include "VROSC/ControllerInputNode.hpp"
// Including type: VROSC.NoteBoard/VROSC.PlayAxis
#include "VROSC/NoteBoard_PlayAxis.hpp"
// Including type: VROSC.NoteBoard/VROSC.NoteAxis
#include "VROSC/NoteBoard_NoteAxis.hpp"
// Including type: VROSC.ScaleNode
#include "VROSC/ScaleNode.hpp"
// Including type: VROSC.NoteField
#include "VROSC/NoteField.hpp"
// Including type: VROSC.NoteBoardNoteController
#include "VROSC/NoteBoardNoteController.hpp"
// Including type: VROSC.NoteFieldParameters
#include "VROSC/NoteFieldParameters.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.NoteFieldNoteData
#include "VROSC/NoteFieldNoteData.hpp"
// Including type: VROSC.Scale
#include "VROSC/Scale.hpp"
// Including type: VROSC.NoteBoardNote/VROSC.Coloring
#include "VROSC/NoteBoardNote_Coloring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.ScaleNode _scale
[[deprecated("Use field access instead!")]] ::VROSC::ScaleNode*& VROSC::NoteBoard::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<::VROSC::ScaleNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteField _startNote
[[deprecated("Use field access instead!")]] ::VROSC::NoteField*& VROSC::NoteBoard::dyn__startNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__startNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startNote"))->offset;
  return *reinterpret_cast<::VROSC::NoteField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.NoteAxis _noteAxisX
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::NoteAxis*& VROSC::NoteBoard::dyn__noteAxisX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__noteAxisX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteAxisX"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::NoteAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.NoteAxis _noteAxisY
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::NoteAxis*& VROSC::NoteBoard::dyn__noteAxisY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__noteAxisY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteAxisY"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::NoteAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.NoteAxis _noteAxisZ
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::NoteAxis*& VROSC::NoteBoard::dyn__noteAxisZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__noteAxisZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteAxisZ"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::NoteAxis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.NoteAxis[] _noteAxes
[[deprecated("Use field access instead!")]] ::ArrayW<::VROSC::NoteBoard::NoteAxis*>& VROSC::NoteBoard::dyn__noteAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__noteAxes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteAxes"))->offset;
  return *reinterpret_cast<::ArrayW<::VROSC::NoteBoard::NoteAxis*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.Axis _primaryAxis
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::Axis& VROSC::NoteBoard::dyn__primaryAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__primaryAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryAxis"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ControllerInputNode _controllerInputNode
[[deprecated("Use field access instead!")]] ::VROSC::ControllerInputNode*& VROSC::NoteBoard::dyn__controllerInputNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__controllerInputNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerInputNode"))->offset;
  return *reinterpret_cast<::VROSC::ControllerInputNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoardNoteController _notefieldController
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoardNoteController*& VROSC::NoteBoard::dyn__notefieldController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::dyn__notefieldController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notefieldController"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoardNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteBoard.Awake
void VROSC::NoteBoard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.LateUpdate
void VROSC::NoteBoard::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.Setup
void VROSC::NoteBoard::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.CheckScaleAndBase
void VROSC::NoteBoard::CheckScaleAndBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::CheckScaleAndBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckScaleAndBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.UpdateScaleAndBase
void VROSC::NoteBoard::UpdateScaleAndBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::UpdateScaleAndBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScaleAndBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.UpdateAxisesAndReturnIfDirty
bool VROSC::NoteBoard::UpdateAxisesAndReturnIfDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::UpdateAxisesAndReturnIfDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAxisesAndReturnIfDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.CreateNoteFieldParameters
::VROSC::NoteFieldParameters* VROSC::NoteBoard::CreateNoteFieldParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::CreateNoteFieldParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNoteFieldParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::NoteFieldParameters*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard.HoverBegin
void VROSC::NoteBoard::HoverBegin(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::HoverBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.NoteBoard.Hover
void VROSC::NoteBoard::Hover(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Hover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.NoteBoard.HoverEnd
void VROSC::NoteBoard::HoverEnd(::VROSC::InputDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::HoverEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoverEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: VROSC.NoteBoard.GetNoteField
::VROSC::NoteFieldNoteData* VROSC::NoteBoard::GetNoteField(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::GetNoteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::NoteFieldNoteData*, false>(this, ___internal__method, position);
}
// Autogenerated method: VROSC.NoteBoard.GetNote
int VROSC::NoteBoard::GetNote(::UnityEngine::Vector3 position, ::VROSC::NoteBoard::PlayAxis playMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::GetNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(playMode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, playMode);
}
// Autogenerated method: VROSC.NoteBoard.GetScale
::VROSC::Scale VROSC::NoteBoard::GetScale(::VROSC::NoteBoard::PlayAxis playAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::GetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playAxis)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(this, ___internal__method, playAxis);
}
// Autogenerated method: VROSC.NoteBoard.NoteAxisToVector
::UnityEngine::Vector3 VROSC::NoteBoard::NoteAxisToVector(::VROSC::NoteBoard::PlayAxis playAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxisToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "NoteBoard", "NoteAxisToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playAxis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playAxis);
}
// Autogenerated method: VROSC.NoteBoard.NoteAxisToVector
::UnityEngine::Vector3 VROSC::NoteBoard::NoteAxisToVector(::VROSC::NoteBoard::PlayAxis playAxis, ::VROSC::NoteBoardNote::Coloring coloring) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxisToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "NoteBoard", "NoteAxisToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playAxis), ::il2cpp_utils::ExtractType(coloring)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playAxis, coloring);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoard/VROSC.Axis
#include "VROSC/NoteBoard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.Axis X
::VROSC::NoteBoard::Axis VROSC::NoteBoard::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::Axis>("VROSC", "NoteBoard/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.Axis X
void VROSC::NoteBoard::Axis::_set_X(::VROSC::NoteBoard::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.Axis Y
::VROSC::NoteBoard::Axis VROSC::NoteBoard::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::Axis>("VROSC", "NoteBoard/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.Axis Y
void VROSC::NoteBoard::Axis::_set_Y(::VROSC::NoteBoard::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.Axis Z
::VROSC::NoteBoard::Axis VROSC::NoteBoard::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::Axis>("VROSC", "NoteBoard/Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.Axis Z
void VROSC::NoteBoard::Axis::_set_Z(::VROSC::NoteBoard::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/Axis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoard::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoard/VROSC.PlayAxis
#include "VROSC/NoteBoard_PlayAxis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.PlayAxis All
::VROSC::NoteBoard::PlayAxis VROSC::NoteBoard::PlayAxis::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::PlayAxis>("VROSC", "NoteBoard/PlayAxis", "All"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.PlayAxis All
void VROSC::NoteBoard::PlayAxis::_set_All(::VROSC::NoteBoard::PlayAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/PlayAxis", "All", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.PlayAxis X
::VROSC::NoteBoard::PlayAxis VROSC::NoteBoard::PlayAxis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::PlayAxis>("VROSC", "NoteBoard/PlayAxis", "X"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.PlayAxis X
void VROSC::NoteBoard::PlayAxis::_set_X(::VROSC::NoteBoard::PlayAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/PlayAxis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.PlayAxis Y
::VROSC::NoteBoard::PlayAxis VROSC::NoteBoard::PlayAxis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::PlayAxis>("VROSC", "NoteBoard/PlayAxis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.PlayAxis Y
void VROSC::NoteBoard::PlayAxis::_set_Y(::VROSC::NoteBoard::PlayAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/PlayAxis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.NoteBoard/VROSC.PlayAxis Z
::VROSC::NoteBoard::PlayAxis VROSC::NoteBoard::PlayAxis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::NoteBoard::PlayAxis>("VROSC", "NoteBoard/PlayAxis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.NoteBoard/VROSC.PlayAxis Z
void VROSC::NoteBoard::PlayAxis::_set_Z(::VROSC::NoteBoard::PlayAxis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "NoteBoard/PlayAxis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoard::PlayAxis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::PlayAxis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.NoteBoard/VROSC.NoteAxis
#include "VROSC/NoteBoard_NoteAxis.hpp"
// Including type: VROSC.ScaleNode
#include "VROSC/ScaleNode.hpp"
// Including type: VROSC.NoteField
#include "VROSC/NoteField.hpp"
// Including type: VROSC.IntField
#include "VROSC/IntField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.Scale <Scale>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::Scale& VROSC::NoteBoard::NoteAxis::dyn_$Scale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_$Scale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scale>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Scale*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Note <StartNote>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::Note& VROSC::NoteBoard::NoteAxis::dyn_$StartNote$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_$StartNote$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartNote>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::Note*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.NoteBoard/VROSC.Axis <Axis>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::NoteBoard::Axis& VROSC::NoteBoard::NoteAxis::dyn_$Axis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_$Axis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Axis>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::NoteBoard::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OverrideBoard
[[deprecated("Use field access instead!")]] bool& VROSC::NoteBoard::NoteAxis::dyn_OverrideBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_OverrideBoard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideBoard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.ScaleNode OverrideScale
[[deprecated("Use field access instead!")]] ::VROSC::ScaleNode*& VROSC::NoteBoard::NoteAxis::dyn_OverrideScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_OverrideScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideScale"))->offset;
  return *reinterpret_cast<::VROSC::ScaleNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.NoteField OverrideStartNote
[[deprecated("Use field access instead!")]] ::VROSC::NoteField*& VROSC::NoteBoard::NoteAxis::dyn_OverrideStartNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_OverrideStartNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OverrideStartNote"))->offset;
  return *reinterpret_cast<::VROSC::NoteField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.IntField StartOctave
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NoteBoard::NoteAxis::dyn_StartOctave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_StartOctave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartOctave"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.IntField NumberOfNotes
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NoteBoard::NoteAxis::dyn_NumberOfNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_NumberOfNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfNotes"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.IntField IntervalBetweenNotes
[[deprecated("Use field access instead!")]] ::VROSC::IntField*& VROSC::NoteBoard::NoteAxis::dyn_IntervalBetweenNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn_IntervalBetweenNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IntervalBetweenNotes"))->offset;
  return *reinterpret_cast<::VROSC::IntField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Scale _lastScale
[[deprecated("Use field access instead!")]] ::VROSC::Scale& VROSC::NoteBoard::NoteAxis::dyn__lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn__lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScale"))->offset;
  return *reinterpret_cast<::VROSC::Scale*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Note _lastStartNote
[[deprecated("Use field access instead!")]] ::VROSC::Note& VROSC::NoteBoard::NoteAxis::dyn__lastStartNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn__lastStartNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStartNote"))->offset;
  return *reinterpret_cast<::VROSC::Note*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastStartOctave
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoard::NoteAxis::dyn__lastStartOctave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn__lastStartOctave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStartOctave"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastNumberOfNotes
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoard::NoteAxis::dyn__lastNumberOfNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn__lastNumberOfNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastNumberOfNotes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastIntervalBetweenNotes
[[deprecated("Use field access instead!")]] int& VROSC::NoteBoard::NoteAxis::dyn__lastIntervalBetweenNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::dyn__lastIntervalBetweenNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastIntervalBetweenNotes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.get_Scale
::VROSC::Scale VROSC::NoteBoard::NoteAxis::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Scale, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.set_Scale
void VROSC::NoteBoard::NoteAxis::set_Scale(::VROSC::Scale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::set_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.get_StartNote
::VROSC::Note VROSC::NoteBoard::NoteAxis::get_StartNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::get_StartNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Note, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.set_StartNote
void VROSC::NoteBoard::NoteAxis::set_StartNote(::VROSC::Note value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::set_StartNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.get_Axis
::VROSC::NoteBoard::Axis VROSC::NoteBoard::NoteAxis::get_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::get_Axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::NoteBoard::Axis, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.set_Axis
void VROSC::NoteBoard::NoteAxis::set_Axis(::VROSC::NoteBoard::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::set_Axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.Init
void VROSC::NoteBoard::NoteAxis::Init(::VROSC::NoteBoard::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated method: VROSC.NoteBoard/VROSC.NoteAxis.UpdateAndReturnIsDirty
bool VROSC::NoteBoard::NoteAxis::UpdateAndReturnIsDirty(::VROSC::Scale noteBoardScale, ::VROSC::Note noteBoardStartNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::NoteBoard::NoteAxis::UpdateAndReturnIsDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAndReturnIsDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteBoardScale), ::il2cpp_utils::ExtractType(noteBoardStartNote)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, noteBoardScale, noteBoardStartNote);
}
